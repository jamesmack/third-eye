%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UVic_hst_4c.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Rose
%%CreationDate: 4/18/08
%%BoundingBox: 0 0 166 65
%%HiResBoundingBox: 0 0 165.7281 64.1221
%%CropBox: 0 0 165.7281 64.1221
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 8332 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFD87FF7D275227522E5227522E5227522E5227522E522752%2E5227522E5227522E52275252A8FD5DFF5227FD047D537D7D7D537D7D7D%537D7D7D537D7D7D537D7D7D537D7D7D537D59277DFD5DFF5252FD1FFF27%7DFD5DFF287DFFFF5252A8FD06FFA84B7DFD07FF7C4BA8FD07FF2E7DFD5D%FF5252FF2644447DFD05FF7D206920A8FD04FFA84B44444BFD07FF277EFD%5DFF527DFF766FB04BA8FD04FFA8768D9352FD05FF7D6F8D767DFD06FF52%7DFD07FFA87EA8FD05FF7DA8FD0CFF7D527DFD21FF7D5252FD19FF5252FF%7E6F694B26A8A9FFA8FF76934A2027FFAFFFA8FF4B9320277DFFA8AFA8FF%27A8FD07FF52F852FD04FF7D2727FD0CFF27F827FD21FF52F827A8FFFFFF%A8FD14FF5259FFA84B6F6F4B274B4B52FF7D446F6F4B2652277DFF76446F%444B274B27FFFF277DFD07FF522752FD04FF7DF852FD0CFF7D277DFD21FF%7E2752FFFFFF2727FD14FF5252FFA851446F686944277DFF7D4B446F686F%204BA8FF4B69446F684B207DFFFF277DFD07FF52F852FD04FF7D2727FFFF%FFA8FFFFA9A8FD05FFA8FFA8FFA8FD05FFA8FD05FFA8FD05FFA8FFFFFFA8%FFFFFFA8FFA8FFFFFFA8FFFFFF7D27F8FFFFFFA8FD07FFA8FD08FF527DFF%FF7D6F4B4B444B264B7DFF516F4B4B4A4B274B7EA84B6F204B4B4B267DA8%527DFD07FF522752FD04FF7DF852FFFF28527E52F82752FFFFFF532753FF%27277DFFFFFF2E277DFFA852F827277DFFFFA82752A8F852FFFF2827F827%7DFF7D2752FF7D27F8272727A87D2752FFFFFF7DF853FD08FF5252FFFFA8%206F6F4B4B4B2052FF7D20934B4B4A4B207DFF4B4493206F4B2727FF277D%FD07FF52F852FD04FF7D2727FFFF27F827F827F82752FFFF52F852FF52F8%28FFFFA827F8A8FF27F8525227F87DFFA8F827F82727FF27272752F87DFF%7DF827FF7DF827F82727FF5327F8A8FFFFF82752FD08FF287DFFFF764B6F%93276F454B7DFF514B6975276F4452FFA8266F8D4B4B6F277DFF527DFD07%FF522727FD04FF7DF827FFFF272727AFFF52F827FFFF522752FF7D27F8FF%FF7DF852FF7DF852FFFF7D2727FFA827F8277DFF7D27F8FD05FF522727FF%FFA8F827A8FFFFFFF8277DFF7D27F8FD09FF5252FFFFAF274B20767D277D%FFFFA8274B207E4B27A8FFA852204B4B7D2052FFFF277EFD07FF52F852FD%04FF7D2727FFFF27F853FFFF7D27F8A8FF52F852FFFFF8277DFF272752FF%272752A87D7DF827A8A8F8277DFFFFA8F82727A8FFFFFF7DF827FFFF7D27%F8FD04FF52F852FF7DF852FD09FF527DFFFFFF7D7D7D27FF527DFFFFA87C%7E7652FF27FFFFFF7DA17D4BA87D52FFFF527DFD07FF52272EFD04FF7DF8%52FFFF272753FFFFA8F827A8FF522752FFFF7DF852A827F8FFFF52F827F8%27F827F8FFA827F8FD04FF7DF827F852A8FF522727FFFFA8F827FD04FF7D%2727FF27277DFD09FF5252FD09FFA8FD15FF27A8FD07FF7DF827FD04FF52%2727FFFF27F87DFFFF7D27F8A8FF52F852FFFF7D27277DF852FFFF272752%7D597D7D7DFFA8F827A8FD04FFA85227F852FF7DF827FFFF7D27F8FD05FF%27275227F8FD0AFF5252FD097DA8FD0F7DA87D7D7D7E7D277DFD07FF7E27%F87DFFFFA827F87DFFFF272753FFFFA8F827A8FF522752FFFFFFFD04277D%FFFF52F852FD06FF7D27F8A8FD06FF7D2727FF7D2727FFFFA8F827A8FD04%FF7DF827F852FD0AFF52F827002705270027052700FD0527052727282727%00270527002705270027F87DFD08FF2727F8525227F827A8FFFF27F87DFF%FF7D27F8A8FF52F852FFFFFF53F827F8FFFFFF7D27F8527D7D277DFFA8F8%27A8FFFFA8277D7D52F852FF7DF827A8FFA827F85252FFFFFFA827F8277D%FD0AFF5206070E070D070E070D070E070D0607070D0606060D070E070D07%0E070D070E07277DFD09FF2727F827F8277EFFFFFF272752FFFFA8F827A8%FF522752FFFFFFA827F852FD04FF7D27F827F82752FF7D27F8A8FFFF7D27%F827F827A8FF522727FFFFFF5227F827A8FFFFFF522727FD0BFF52285A2F%5A535A2F5A535A2F280027F80500000027F8282F5A535A2F5A535A2F5A00%7DFD0AFF7D7D52A8A8FD04FFA87DA8FFFFA8847DFFFFA87DA8FD04FF7D7D%A8FD05FFA87D537D7DFFFFFF7DA8A8FFFFFF7D7D527DA8FFFFA87DA8FD04%FF7D7D7DFD04FF27F87DFD0BFF28280D2F072F0D0D072F0605277D7D2EF8%0052A87D590005062F070D072F0D2F07277DFD4DFFA852F827A9FD0BFF52%275A2F542F53F8270027527E7D7D28F8007D7DA87DA852272728005A2F5A%2F53007EFD4CFFA827F8277DFD0CFF52282F302F3027277DA87DA87D7D7D%53F8287DA87DA8A8FFFFFF7D2706302F302F277DFD4DFF27277DFD0DFF52%05302F2FF875517DA8A8FD047D5200007D7D847DA8FFFFFF7D742705542F%2F00A8FD14FF7D84A8FD36FFA8A8FD0EFF522E545A5327747B59A87DA8FD%047D00277DFD04A8FFFFFF529F7528545A2F277DFD12FFA82727F87DFFFF%A87D7DFD06FF7D7DFFA82752FD21FF2852A8FD11FF52052F2F2F004A4A7D%A8A8FD047D5205F87D7EA87DA8FFFFFF529E5105302F2F00A8FD12FF2727%F8527DFFFFFFF82752FD04FF84F827A87DF827A8FD0BFFA8FD13FF7D27F8%7DFD11FF522E5A7E5A28265159A8A8A8FD047D272753A884A8A8FFFFFF52%C74B2E5A7E5427A8FD11FF8427F8A9FD05FF52F852FD04FF522727FFA852%52FD0BFF2727FD14FF5252A8FD11FF7D052F2F3005F82052A8A87DA87D7D%5227057D7DA87DFD04FF529E2706302F2FF8FD0BFFA8A8A8FD04FF7DF827%A8FD05FF7D27F8A8FFFFFF27F87DFFFFA8FD06FFA9A8A8FFFF7D27F8A9A8%FD04FFA87EA9FD04FFA8A8FFFFA8AFFFFFA8FD04FFA87EA8FD0BFF7D275A%7E5A52F82052FFA8A87D847D7D27527DFD04A8FFFFFF769FF8595A7E2E28%FD09FFA82727F82752FFFF7DF827202752FD05FF27277DFFFFA8F827A8FF%7D2727FFFFFF7E52F827F87D7D27F827F827A8FFA852F827F852A8FFFF7D%F87D52277DFF2727A8FF7D52F827F852A8FD0AFFF82F2F3006F8F851A8A8%7D7D7D7E7D27007DA8A8A8FFFFFFA85126F806302F2827FD08FFA8F82727%52F82727FF7D27F8272752FD05FF52F852FFFF522727FFFF7DF827A8FF7D%27F82727277D7DF827F82727FFA827F8272E27F827A8FF5227F827F87DA8%27F8A8FF7DF8525227F828FD0AFF522E7E5A53F82027A8A8A87E7D272727%52282728A8FD04FF2626F87E7E7E277DFD08FF272727FFFFA8F8277DFF7D%2727FD07FF7D2727FFFF52F87DFFFF7D2727FFFF27F852A8FD04FFA8F827%A8FFFF7DF827A8FFA827F87DFF84F8272EA8FFFFF8277EFD05FFA827F8A8%FD09FF52272F5A2800F827A8FF7E52F84B4A27F851744BF852A9FFA826F8%052F5A2F27A8FD07FFA827F87DFFFFFF27F852FF7DF827FD07FFA8F8277D%FFF8277DFFFF7DF827FFA8F827A8FD05FF7D27F8FFFFFF272752FFFFFF52%2727FF7D27F8FFFFFFA827F8A8FFFFA87D2727F8277DFD0AFFF8597E59F8%0027A15127F85074C79F75C0C7C075F827527DF805277E5A5252FD08FFA8%F827A8FFFFFF522728FF7D2727FD08FF52F87D7D2727FFFFFF7D27F8FF7D%2727FD06FFA8F827FFFFA827F87DFFFFFF7DF852FF7DF852FFFFFFA9F827%7DFF7D27F8272727F8A8FD0AFF52005A2F00FD05F8264A9F9E75F89F9E9F%7426FD05F8285353F8A8FD08FFA827F8A8FFFFFF52F852FF7DF827A8FD07%FF52272752F87DFFFFFF7DF827FF7DF827A8FD05FF7D27F8FFFFFFF82753%FFFFFF522727FF7D2727FFFFFFA827F8A8FF27F852FFFFF8277DFD0AFFA8%272F5AF800F800F827F827F8272751F8515026F826F800F827287E2752FD%0AFF272752FFFFA8F8277DFF7D2727FD08FFA8F8272727A8FFFFFF7D2727%FFA827F87DFD05FFA8F827A8FFFF52F852FFFFFF27F87DFF7DF852FD04FF%F827A8FFF827A8FFA827F8A8FD0BFF52275A27F805F800F827F827F8759E%4BF827F8F8F805F800F8535321A8FD0AFF7DF827527D272727FFFF7DF827%FD09FF27F82727FD04FF7DF827A8FF5227F85252527DFFA827F85252FF7D%27F8527D52F827A8FF7D2727FFFFFFA827F8A8A827F8527D27F8277DFD0C%FF27285A5A535A535A537E5A5327522753547E535A535A535A53277DFD0C%FF7DF827F82727FFFFFF7D2727FD09FF5227F87DFD04FF7D2727FFFFFF52%27F827F87DFFFF5227F827FFFF7D27F827F82784FFFF7DF827FFFFFFA8F8%277EFF5327F8272752F87DFD0CFFAFF8537E7E7E847E7E7E847E7E5A847E%7E7E847E7E7E847E2727FD0EFFA87D7D7DFD04FFA87DA8FD0AFF7DA8A8FD%04FFA87DA8FD04FFA87D59A8A8FFFFFF7D7D7DFFFFFFA87D7D7DA8FFFFFF%A8A87DFFFFFFA8A87DFFFFFF7D7D7DFFA87EA8FD0DFFA8F8525A7E5A7E5A%7E5A7E5A7E5A7E5A7E5A7E5A7E5A2827FD69FF7EF8527EA97E847E857E84%7E857E847E857E847E2827FD6BFFA8F8285A7E5A7E5A7E5A7E5A7E5A7E5A%7E532727FD6DFFA8272753A97EA87EA97EA87EA97E84282152FD70FF5227%27597E857E857E857E5327277DFD72FFA852F827285353532727007DA8FD%76FF7D52272727527DFD7CFFA8FDFCFFFDFCFFFD72FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-04-18T09:56:59-07:00</xap:CreateDate>
         <xap:ModifyDate>2008-04-18T09:56:59-07:00</xap:ModifyDate>
         <xap:MetadataDate>2008-04-18T09:56:59-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>100</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Qanqdhpen3Go6hMttZW&#xA;iNLcTvXiiKKljTwxVhv/ACvT8o/+pns/vf8A5pxV3/K9Pyj/AOpns/vf/mnFXf8AK9Pyj/6mez+9&#xA;/wDmnFXf8r0/KP8A6mez+9/+acVd/wAr0/KP/qZ7P73/AOacVd/yvT8o/wDqZ7P73/5pxV3/ACvT&#xA;8o/+pns/vf8A5pxV3/K9Pyj/AOpns/vf/mnFWU+XvMuheY9OGpaJex39iXaMXEVePJPtDcDpiqZY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWHfnJ/5KvzV/wBs24/4gcVe&#xA;fTec/Ivkb8rvJs195ei1PVtR0exe3gW2QCQi2jMjyXBjcCnKpoGb2pvkZTERu36fTSzS4Y82Xfll&#xA;rXkvz1ocuoR+XLTT7y0mNvfWDwwyGN+IdSr+mnJXRwQeI8KbYxmJCwup008MzCYqQZRqGh+TtPsL&#xA;i+udHsxb2sbSzFLNJGCIKsQkaM7bDoBkmh5N5U/OT8vPMPnC30SPyhBa6bfS/V7HVZYoavKwJjDw&#xA;+kOKyUopWRtyK0yEcoJpzcvZ+XHiGQj0/r5fgPYf8KeVv+rPY/8ASND/AM05Nwnlf5k/mf5D8n62&#xA;uhWvlKDVtVUK1zGYEtoo1kFUpI0MnMsOlF4/5VchPII83M0mgyai+Afj8d+zP/K1v5I8yeXrDXbD&#xA;RrMWt/EJUR7aEOh6MjUX7SMCp9xk7cQijRTX/Cnlb/qz2P8A0jQ/804oed/84ygD8tpABQDVL0AD&#xA;/jIMVesYq7FXYq7FXYq7FXEgCp2A6nFVsU0U0YkhdZI2+y6EMpoabEYquxV2KuxV2KuxV2KuxV2K&#xA;rIZ4Zk5wyLIlackIYVHaoxVfirsVdirsVdirDvzk/wDJV+av+2bcf8QOKsD846fLdf8AOM2gXEUY&#xA;kfTdM0W+NRUrFDHD67g9uMLOSfCuQyC4kOZ2fmGPUQmeQkPveC+VfPXmbyl5hOr6VqUKXRYx3um3&#xA;B9OGZVrwWVA1HVl+xIvxA/M5i48nD02ei7Q0P5iRlKcfF5UfTy5f1okcpe74d3/LL8+9b81eZRYa&#xA;zFpOhWFvC0l39YnMdxJJSiR2yvIA/Ft3ahFPfMqE+J5vVaWWGXDK791f2vFPzOtJtM8765p6Srpl&#xA;umpXE9u9CEQ3Di6tmVwVMasslVZdh09sxsgqdjm9Hop+No44pSjGAMgbFi+cbP8ACOe/kyzy/wD8&#xA;5Mef9K0e2sL22stXkjUQw6tPI3Jn/lunRwilAd37gVO+WxzXt1dTqeypY48d3Dy9W/ca6sh/P27k&#xA;1LQPK+v2txYajqMaXNne3uluJbYT3ESTRRBg71QtA/Dm258K0x1Ebi2dg55Y85EfqlCQHv5j7tnn&#xA;H5e/mz5v8kz3C6PdwaxpdzV20i4YqFcmrvFHy5RyrQ8lFFb5jIQzcOxDk6rsoZZGWOcZk77bE9/p&#xA;vaQ7u59Cfk9+bd552ju7jVp9KsAJFh0/TIpj9ec0q0ksUkhZFNaIONT+vJibFvP5sfBIj9FKH/OM&#xA;3/kt5f8AtqXv/JwYWt6xir5W/wCcgvMXmCx/OzSbOy1O7tbR4bAvbwzyRxktO4aqKwXcdcVfVOKv&#xA;mHyN5g16b/nKbU9Nm1K6k05LzU1WyeeRoQEjkKgRluPw022xV9Hvr+hJqY0p9StV1RqcbAzRic1X&#xA;kKRFuf2d+nTFUJ/jbyZ+kv0X+n9O/SYf0zY/W4PX51px9Lnzr7UxVCfmTof6d8ia3pP6QTSvrdsy&#xA;G/lPGOMAhj6jVFEanFvY4qwL8g/Ktn5A8p6o+qeadMv7ae6RnltLpXsrdgoUD1X4UeSoqCB0GKvW&#xA;NN1bS9UtzcabeQX1uGKGa2kSZAwAJXkhYVoRtiqHuvMvly0vl0+71Wzt79ioW0luIkmJf7AEbMG+&#xA;Ku22+Kq2q61o+kW31rVb630+2rT17qVIY69acpCoxVR0fzP5b1sOdF1az1MRf3hs7iK44/63ps1M&#xA;VX6hr+hadPFb6hqVrZzz/wBzDcTRxO+9PhV2BbfbbFWl8w6A2rnRl1O0bWAvM6aJ4zchQKlvR5ep&#xA;SnemKqGr+cPKWjTCDWNbsNNmYVWK7uoYGIPcLIynFUJ5mFh5k8jaxBp2sQQW17ZXEK6vFKrwxcoy&#xA;DIZEanFerfF0xV51/wA47+R4/I+keYJLvzLpuqwTvFNN+j7gS21qkCyVkkduIUup+KoGy9TiqHtv&#xA;+cjEuvzfj8oLHp9t5bjluIrjW5LjmJBFbSSo8clY4kDSKq78vDrir1mTzd5UitIbyTWrBLS4LLb3&#xA;DXUIjkKbOEctxYr3p0xVMbW7tbu3jubSZLi2lAaKaJg6Op6FWUkEfLFUFa+Z/Ld3fHT7XVrO4vwW&#xA;U2kVxE8wKV5j01YtVaGu22KplirDvzk/8lX5q/7Ztx/xA4qp+TYb6b8mNChsIoZ72Xy7aJbQ3BKw&#xA;tI1kgVZCFf4STv8ACcVfHcPl0xSw6bfuIrA6mthF5h9OS4soh6iQMI53EXNah5CqsPh+z2zE8M8X&#xA;k9JLW4/yvDXrG8b39PpHDfMXvKhTPPy9/KPVLr80pPL168ei3GiQi8uQsSXgkj9RVDWv1gSRKJef&#xA;JZeNV3FOQOW44EE26/X6jFkjE448O24s7H4k/BPf+ck9C1uT8wtLvobZLtZrVba1sLMyTXt1HAJH&#xA;kM0CRmoMsqotSem37VHNEln2TqoYpEy5czvsRR9NdeI08qufKU8Xku482W0cdzp0NzcW1y0PNJbC&#xA;QSVihmRGWiyxlArU+18Ldsr8M0D83Klq8BnkjwjezCW4251se7l5830Fr/5YX3l78h77QUvLO75t&#xA;Feahc3Ea2FvBBCyzN6CQxF/U/dhQzAuxNetFzII2p0mKYGQSI2vlf6XgXl/yZqevalpukSW4t9Wu&#xA;LGWW2i1BGh/SbIqOEjlcLWoEqq9SOQ32NcxoYyb6dzv9Vr8XDjsCco7ZO+Ww689jY+D1f/nGnyBN&#xA;ca/qXmWW4NkNGu5NPk01rdfrBmWNWKyTzCSWNY/UKtHGwqw322N+IEDd1HaGSEshMPp6c/0kvQf+&#xA;cZv/ACW8v/bUvf8Ak4MscF6xir5G/wCcj/8Aye+j/wDGHT/+oh8VfXOKvlLyAQf+ctdV/wCY3Vf+&#xA;TcuKpL+eNrqV7/zkUdP0y5azv9QfT7K3ukYqUa6hjgrVaHpJvTFUw/O7/nHzy75F8l22vaNf3c1x&#xA;DPHb3qXRjKyeqDSSPgqFCGHTfb5bqvRNH8yah5h/5xWv77UZGmvY9LvLWadzVn+rs8aMSdySirUn&#xA;qcVYv/zjl5Yg80/k35y8vz0C6hdPFG56JL9XjaJ/9hIqt9GKqf8AziL5il0/WfMPk2/rDKwF5DC5&#xA;pxmt29G4X/WoU/4HFUr/AC1tf+Vk/wDORepeZ5R6ul6ZPJfRt1UpARBYr/wqv/sTiqSXXmjyv+Yn&#xA;5t39/wDmFrL6f5UsTMmnWo9TdEfhFCvpq5QuPjkalT0r0oqgfOGp+RfI/nnRfMf5Vaw9zbx/Hd2t&#xA;ZvgKMOcbNKqM0c6GhG/f2xVl3/OXF8480+Vb+1Yo4sTPAxAqp9bmppuNsVDPvyo/Iu98ryRed7rV&#xA;JdQ813NnNLJasB6Jmuoy3FpDV2bkRVu+KvBfy7/5V9q3m3Vj+bV3ex3lyxCXLF1AuSzCY3DKDIrA&#xA;0C7cRvyxS+ll8n+VPK35E+arPytdG+0i70zVL2K8MiTeoZbVxtJGFVgqoFHyxQ82/wCcTtItdZ8p&#xA;+edHuywtNSSG0uDGQr+nPDPG/EkGh4tttirANH/LDy3ef85ASeQZWuBoa3N1CGWRRPxgtZJk+Pjx&#xA;ryQV+HFL2781fyW0iz/JG40PQVmlby+8mq2JnYSSmhZrhOSqlaxsxAp1AxQlP5A/mZFZ/kjrbXUg&#xA;Nx5QSd4kb9qKVWlt1/2U3NB9GKpP/wA4h+VZbrUNd863oLuP9AtZW35SyETXL/MD0xX/ACjir6cx&#xA;Vh35yf8Akq/NX/bNuP8AiBxV4b5S/wCco7/SPKmi6TH5ON1Hp1hbWiXX6RWP1RBCsYk4G3bjy41p&#xA;U0zNj2dmkARHY+Y/W4ktdhiSCdx5FMLr/nKye7tntbryAlxbSDjJBLqMbxsPAq1qQcl/Jmf+b9o/&#xA;Wj+UMP8AO+w/qUov+coRFeR3sX5exx3UVv8AU45U1KNStuGDCIUth8AK1A7dsf5Mz/zftH61/lDD&#xA;/O+w/qRX/Q3Wocqf4I+Km4/SiVp/0jYP5Nz/AM37R+tfz+Hv+w/qS67/AOcmbG5ivoLj8uLdk1VD&#xA;FqIOoQg3CEFaSEWoZ9mNK4/ydn/m/aP1r+fw9/2H9SZH/nLjUj18j1/7eif9k2H+TM/837R+tf5Q&#xA;w/zvsP6kPd/85TveNC15+XsVy1u4ltzNqETmORdw6crU8WHiMf5Mz/zftH61/lDD/O+w/qdaf85T&#xA;y2ct1La+QVhkvpvrF2yamg9Sb00i5t/o3XhEo+jH+TM/837R+tf5Qw/zvsP6mbf84tXP1n8rjPx4&#xA;CXUrt1Fa7Myn9ZpmCRRpywXr+BL5p/5y38m6wb7SPO+nxvJBZQizvZUBJgMcrSwSEb/CWlYV8aeO&#xA;Kp3Zf85eeSz5aW5vLC7HmBYqSafGi+i84H7MxbaMt3I5DwPdVi//ADjF5X1vXvPer/mPqkLR27tc&#xA;NBMV4rNeXjlpTHXqqKzA+7D3xVLPzP8A/WrtI/7aeh/8SgxV6r/zlZ/5KWb/AJjrb9bYqxfyF/6y&#xA;Tq//ADCan/ycfFUX/wA4c/8AKFa5/wBtL/mRHirzn89rLUfy9/OG617SP3UevWlxPEw6CS8hktrn&#xA;/ZB2MvzIxV6//wA4seTv0H+XX6XnTje+YJfrJJ6i3irHAD8/jcf62KvCf0Von5bfmtqNh5/0A6to&#xA;Nw0ot3KkkwvJyiuYd0D0X4XWvj3GKvSbHzN/zilf6rp2mWfl31rjUZ4baNvq0iJG87hB6jSSJQKT&#xA;8RWuKpD/AM5iRpF5k8uRxjjGlhIqKOgAloBiofT1ve29h5bivrluFtaWazzv4JHFyY/cMVfNX5kf&#xA;mL/zjv538u3+pz2Nza+bXgb6o6QNFcG4CkR+rJGWgkTlQMXJPHpvTFVb8j7fXI/yA/MOS7Ei6TNZ&#xA;X50wPUKWFlIJ2jr+zXiKjaoPeuKpj/zhl/xzfNX/ABms/wDiM2KsN8062Py//wCcnrnzBqsMjWUd&#xA;01yfTUFmt7y1MZdASA3H1D36jFX1P5R81aP5x8s22vaYrtpl/wCqsS3CBWIileF+SVYULRn6MVfE&#xA;35haXqvkHzb5r8n2nJdN1QxoibkvamZLq2oR1K8Qh+nFL7G/Kbyf/hD8vtH0R043cUIlvvH6xMfU&#xA;lB8eLNxHsMUMuxVh35yf+Sr81f8AbNuP+IHFXyv5dkuf8P6ZS+0VR9UgostjA0g/drs7G0YlvEkn&#xA;OqwAcEdpch1P63QZgeM7x5noP1Ol1PzBNrlro2iwaXrN7cK7NFbWFmOJVGkVeUlqi8mSN2pXopJo&#xA;Mx9RrIYpCJ4r/rH9bbh0k5xJuP8ApR+pM7fyd+YGsKya5b2Xl/RQYxdXEdrp6zlZJBHxW6SIQxNX&#xA;9lXaXwRswc/aBltCx/nH9bl4dGI7yo/AfqY/+Z/5cWOh+V473TNNktZ7QrJPqX1TUElkLSFfjluZ&#xA;k4LxZWr9Tjqeh3pmDCZu73cwxFV0T38q/wAptD8weXor7WrD9K3eoxNOt76F03p1B4rG317TVlKm&#xA;gKRQyioI5DcK5ckpGyd1hARFDknzfkp570xZ/wDBTWWtWURjM2k6lDaC8jMq1oj3sKSJSn93KF2p&#xA;RmPKmVg1xh9Vke8uNm0kZcqB9wYzrR86eXtW0/T/ADLpmnaIdRiaWJ7my06QLRuKeobeCYJzIIFT&#xA;WvbM/Hr8cpiPq3/pH9bhz0UxEm47f0R+pE+pdf8AVw0L/pAt/wDsjzPod0/mf+KcThPfD5D9T2b/&#xA;AJxT/wDJTR7g/wCn3e6ii/aHQUG2cpk+ovQx5PYsgyWyRxyxtHIoeNwVdGAKspFCCD1BxVix/Kj8&#xA;sjdfWj5V0r1q8q/VIeNfHhx4/hirKIYYYIkhhRYoYwFjjQBVVRsAANgBiqV3Xk/yld6smsXWiWFx&#xA;q8bJJHqMtrC9yrxU9NhMylwU4jia7dsVReraNo+sWhs9WsbfUbMsHNtdxJPHyXo3CQMtRiqlb+W/&#xA;LtvpD6Nb6XaQ6PIGWTTY4IltmWQ1cGEKIyGrvtviq7RvL2gaJA8Gi6ZaaZBK3qSRWcEdujPSnJlj&#xA;VQTQUriqnrXljy1rohGt6TZaoLfl9X+u28Vx6fOnLh6qtx5cRWnhiqPtra3tbeK2tokgtoEWOGGN&#xA;QiIiDiqqq0CqoFABiqE1ny/oWuWv1TWdOttStgaiG6iSZQfEBw1D7jFUr0n8t/IGkXC3WmeXdOtb&#xA;pDVLiO2iEikfyuV5L9BxVHaz5S8qa5LHNrWi2GqSwqUikvbaG4ZFJqVUyqxAr4Yqmfoxel6PBfR4&#xA;8PToOPGlONOlKYqxib8qvy0mu/rcnlbS2nJ5FjaQ0J8SvHifpGKshfTtPksG06S2ifT3iNu9myKY&#xA;WhZeBjMZHEoV240pTFULovlny5oaypomlWelrOQZ1sreK3Dla8S4iVeVKmlcVUfMHk7yp5iEX6d0&#xA;i01Iw/3LXMKSMgPUKzCoB8MVSTznrmm/ln+Xt1qej6JG9jpYQR6baBbeNfWkCcjxU0HN6seJPfFX&#xA;hH5UeVPNH5q/mUfzG81W/DRbSVZbdCpEUskP9xBCrV5RREcnPc7dSaKvqrFXYqxL83IGn/K7zWik&#xA;AjSruSp8I4Wc/guKvmHyvYzSeWtKZbDR3BtIPilvIVkNI1FXU3SkN47DOmwzHAN5ch0/Y6bLE8R2&#xA;jz/HVAflLq1tay6PpMUUaajb669Wiq7s0sM9qORjljd9pgqDmK0I5bjOIljkNeZEmuEj7j+h6MTB&#xA;0wFb3b37zFayRMG/f/W5ImgtHnF1FcuE4M0cbvcXuoybAsVtI1LftOv2s2TiPG/zct9JHl7UbZU0&#xA;+K6Ety4hKaFFcBgA9ac5b1XPH/lo9WnVDsuTiqffk8umf4SgN4bSOZLGFpVlOlh2Rwka8vrsV3OR&#xA;wb4fVmiQ/ZRQvFiCr6F8o28kNnOpVkjEvGKMiREVVUAenGzyxonh6LmPwCmqiCXj/wCeMVld695q&#xA;e7hSe3sPLEA4OAayGS9n7kfZ9KMg7b99s0Pa+WUc2ARNev8AUP0uy0MAceQn+b+t5l5a0q6Ty7pi&#xA;mx0iRvqsJLy3sAkJKAksPrS7/RnomGVQG8uXd+x5TIPUdo8/x1e2f84rwlPyjtX+HjPeXciBDUAe&#xA;px/41zm5ncu4jyevZFLsVdiqje3lvZWVxe3LcLe2jeaZ/BI1LMfoAxV8p6b+Yn58/mt5j1H/AAZe&#xA;forTbAeqtsjRwpEjEiJZJSrPJJJxP+TsegxV9RaPFq8fl+yiv5Fk1hLSJbuZqFWuRGBIx4cAQZKn&#xA;4aYq8d/Kb8/fMXmn8wLnyh5k0200+4jjuFi+repy+s2zDnG3qO23BXO3hir1/wA0a9beX/Lmp63c&#xA;/wBxp1tLcsp25empYKPdjsMVeRflZ+c/5heetC81aimj2Yk0azZtNht1m5XF8yO8cXxu1R8G4G+4&#xA;3xVMf+cffPH5m+aYtZbznZtHBbPELG6ktvqpZ25+rEFoocJxXttXfrir1/FXYqxMfml5IfzpD5Lh&#xA;v/X8xSvLG1pHHIRG0MTTP6khUIPhjOwJOKssxV2KuxV2KsK/OLzB5u0DyHfan5TtTdavE0YHGIzt&#xA;HEzUklEQry4j2NOp2GKoT8n9Z80ebfy9iufPGnqLyeWSMxz24jE8CkGOR4WHHc1A+GhpXFWfxxpG&#xA;ixxqEjQBURRQADYAAYq3irsVQmr6dFqek3umzErFewS20jDqFlQoT9zYq+QvItnP+hX06fR7GW90&#xA;i4msLxpp5YpPUic7FfrMXRWA2UZvdHlvGPUdvx3Ot1GP1nYfj4vNdNnk0r83oIJYo4rQa9C81qrB&#xA;4whu1ag9RpQRwPGrcqjxrml1OP8Aek+bsMUvRT68vorCa2lNiY54ZI5XuY4PqjCRJI29P1IdPCo6&#xA;cY+INzdJFtU17RS8g89ecvLN3pN1oNv5ggklkCJ9SS+mFuXMZDxsILWPSAxYCibpsf3i7ESHNVf8&#xA;rvzF8n+XPLenafqeuRadcG2hLWqXOoIkZdVPOQ2Ctaws53rIsrn/AHYVrwDJX0j5Mksp9FF3Yywz&#xA;2t3LJPHcQGBo5A53cPb/ALt6n9rirH9ocq5ApfLP/OSXnqWw84ebtBt1VZb36lbzSGtTCLOKQqNw&#xA;B/esD8/v12bSeJqYTPKA+1y8ebgxSiP4lXW4f0L5VubiXRtPX6pbcFkFzKz8+IRKAXRBJcj9n6M7&#xA;OeThh9R2Hd+x5+OPilyH4+L6J/Jfy/J5f/Kzy1pcq8JY7NZpYz1V7lmuGU+4MtM50u1Zrirwf89P&#xA;zw8x6J5jtvI/kmMN5hnMS3FyUWV0kuKejBDG4KF2DKSWBG4+hViPmiT/AJyc/LvTYfNOqa9HqNgr&#xA;oLy3VhcpF6hoFnR4owFLHjWJtj3G2Ksy8wedfNP5lfka2ueUZo9LvoJJk8yQOw4/V4LWQ3MKFlkr&#xA;zEkbr0ND1xV5F/zj7ov5q3819N5K1OKw0+G4tf0zHIyq0q1YqByjkrRefcdcVL7RxV8h/m9DJ+Xv&#xA;/OQ1l5nhXhZXc9vqlF7qx9K8T5vxcn/WxV6b/wA5X+bV0/8ALq20m2lBk8wXCryU7NbW9JnKkdQX&#xA;9MfI4qjvyo8u3Pk38gJ7qEm31a70+71l5aDksskBeA0NfsxJHse+KpN/zi9+Yfm3zUnmiTzPqr30&#xA;eniya3eYRoIhJ9YMhqip19Na18MVYvq/50fmt+Y/nCfy7+WY+o6bFz43KqgkeFDxM800oIiVtuKq&#xA;A3bc4qzXyR5V/wCcibA65D5g1+O5jn0q6XSH9WOUJqTgLbsWaMSKE3PQr7Yq8D0vSfzPf87H02z1&#xA;KJPPwnuFbUSyiP1VtnaY8vTK7xBh9jFL6F178wfN35XflPb3Pm+aLV/OdzPLBaAMDE5ZmdXcosXw&#xA;Rx9aDc0HeuKHn+i2/wDzlJ5w0A+cLHXltreYGWx07mlu8yITT0oViMVDSg9Rhy98VZt/zj7+eOqe&#xA;crm68teZ1UeYLSNporpUEXrxowWRXjACrIhb9kCo7Cm6rznW/wA6/wA2dL/M/wA0eXtJu31WWa8u&#xA;tP0OyMUbiB2uQYnRQtXaOJSg5kjepxVmGqav+cvlD8idZ1PzNfzW3moapE1pctJBO62kogXiOHqR&#xA;gc/UFP7MVZZ+SPmjzl5m/KG51S4vRe+Y2e9jsbi4VOPqov7gOq+mCociuKsK1Hyf/wA5VSaZPrtz&#xA;5pgt7qJDN+iYZVRgF+L0wI4fq/LsPjIPdsVZP/zjj+cGseetP1DTNfKS6xpQjkF2irH68MpIqyIA&#xA;oZGWh4gA1G3XFXs2KuxV8z/m35cTyh+aX6aNktxoPnDirVLqsOpJsR8DA/vftb9Sx/lzN0WbhlV0&#xA;C0Z8di65Pnn8yIbrTfzDv5IrJrSSKWG4ijIlHEmNHBHI8vtYdSBxndlh+kJ35v8Az1/MXzqi2OvX&#xA;pi0t2BltLeMxwbfzIlDIK9pC335r8sSBsfk3xIZJ5e8+eQbPRX0v9EXWrXlzH6SWRj9YSMQQI1bh&#xA;HRCT04fDt1zl9R2fqZZOPiEIje+Vefvdvh1OER4eEyJ6J75b83eVfLmgS+VtW0h9C1WBStxZFmjj&#xA;umr/AHkd4TQhvF3G2wrmLqtFnz5BmhPxIHkesfLh/UG/DqMeOHhyjwy7u/4vPbX80fMHknXp7jyD&#xA;fXNjYXDF57CYrcQSN0LmMhovi7FKkfzZ1Gi8TgAyHd02fg4vSNmOarr+s+dPPY1nVYEbUdWu4PXE&#xA;StGhaqRAKKmmyjNnjgL5uNLk95tPLC+dPzD0zycumrbWOnumpeY5A0jUgj3jgYOzLWUke+4PjmZr&#xA;s9jhBtx9PjreqfVwAAoNgOgzWOU7FXyD5wuIvLP/ADlSmp64QtgdQtrkXEmyCGaFUSTb9mI9f9XF&#xA;XuP/ADkRr2kWH5SaxHdTx+pqcaW+nxVBM0jOrDgO/FRzJ8Birzf/AJx80y9t/wAivO19MCtvfR33&#xA;1UHowisyruPYt8P+xxUqv/OGX/HN81f8ZrP/AIjNir6QxV4R/wA5deVTqHkix8wQpym0W54TMB0t&#xA;7uiMSfaVY/vxV4uNVu/zV83eQPLb8mjsrK2067O5NIWZrqX5mCMH6MVfYHniKOLyDr8UShI49Ku1&#xA;RFFAFW2cAAe2KvnH/nFizur3yx+ZFlaf71XVlbQ29DQ+pJFeKm/+scVKh/ziP5n0PR/MeuaRqkqW&#xA;l9qkduLGSchAWt2k9SEFqfE3qggd+OKl9Y/WIPX+r+ov1jj6no8hz4Vpy49aV2rir5O0m7ttP/5y&#xA;+lmvXFvEdQu05yfCOU9lJHF1/mZ1A+eKsj/5zJs7m40nyvqMHx2NvPeQTupqollERQGm1f3DjFQ9&#xA;d/KzzPoN9+VuhanBcxRWNlp0EF2zMqpbvawqkqSHYJwK9+1Dir54/IU/p3/nIXU9c0yIppnqanfb&#xA;CipBcu6xKeneVaDFUZ5DRG/5y21MsoYrfaqy1FaH0pRUffir1f8A5yh/8k9qf/Ge0/5Prirz/wDL&#xA;vzlqHk//AJxfv9b00D9IR3ssNq7AFUeeVI/UIOx4BiwHjiqS/lt+UunfmL5Wu/PXn7zVetAks4kK&#xA;zJyhWEAu8ss6zBetQoUUFPHFVT/nDf8A5SnzD/zAxf8AJ7FS+rsVdiqQ+efJej+cvLN3oGrJW3uV&#xA;rHMoHOGVfsSx1/aU/eNjscVfMEXlfSbLzS/lDz5obX/mmMAWOphl4ahbqKRvHzgkYsFFCK9vEHNj&#xA;gyie0qvzH7XGyQMeV0yVfyp8oKQR5KuKjxVCPuNrmTUO+Hy/a1XL+l+Pg1P+Vvl52hkt/LOp6dcW&#xA;5JgubCU2kqV60aG2Tr75VmwYsseGXAR7v2s8eScDY4rcPyw0iS9S9v8ARdc1W5iUrC+oXcl0EDde&#xA;KyW5UV+WV6bR4MP0cEfh+1llz5Mn1cRXP+VflFzU+SpxT+VI1/VaDMkiHfD5ftarl/SY35j8u+UN&#xA;IvrXSdE8pSP5yvWX9EWRMfNXrVZ3X6uhCJx5VqOnUCpFWXJGAscJPu/azhEy53T6C/KL8srbyJ5d&#xA;aCWQXevai/1nWtQ7yzmp4r/kR1ov0natM1kpEmy5QFM5yKXYqwj8zPyg8pfmFaxDV0kg1C1BW01K&#xA;3IWZFO/BuQZXSu9CPkRU4q8207/nEDy6l5E+reYb3ULKH7NokaQEj+XmWloPHiB9GKvaZfK2lL5U&#xA;n8sWES2GmyWcljDHCu0UckZjqoPUjlXfqeuKsW/KT8oNP/Le31KGz1CbUBqTxO5mRU4eiHApxJ68&#xA;8VegYqlXmry7ZeZPLepaDe1FtqVu9u7jcoWHwuvujUYe4xV57+V3/OPWg+QPMUmuwajNqN0bd7eF&#xA;Z40QR+oylnXiT8VF4/InFXpWt6Ymq6Nf6XI5iS/tprVpFFSomjKFgD4csVYR+Uf5Nad+W36W+paj&#xA;NqH6V+r+p6yKnD6t6tKcSa19Y/diqRfmF/zjJ5L82atNrFpczaJqN03O6+rqkkEjndpDE3Gjt3Ks&#xA;AetK4qivym/IDTfy81yfWYNZuNQuZ7drVomjSGLg7o9SoMjEgxinxYqo/mh/zjh5b88682vR382k&#xA;6nOqretGizRzcFCK5RihV+IAJDUNOld8VZPoH5T+XrD8tLfyBqf+5fS4llV5JV9NmaWd5+a8SeDI&#xA;0nwkGoxV5hcf84d6EbiQWnma9g0+RgTavDHI3EGoBcNGpp48MVetfl3+WXlXyDpb2GhQtznKteXs&#xA;xDzzsoIUuwCgBamiqAB8ycVY7of5G6ZpP5oXP5gR6pPLd3M1zO1i0aCMG6VlIDA8vh54qyb8x/It&#xA;r548qXHl26uns4bh4pDPEoZgYnDgUbbemKpR5Z/Jvy9pH5c3XkO8mk1PSbx5HmkkAjkrIyupXjWh&#xA;RkDKfHFXn2n/APOIXl63vCLnzFfXGks4eTT0RIjIFNVDyBmB+YQHwpirNPyw/I7SPy+1/UdV07Up&#xA;7mPUIjD9TkRQka+oJFowJJ40474q9LxV2KuxVjPn/wDLvy1550U6ZrcBJQ87O8iPG4t5ezxP29wd&#xA;j3wgq8K1XRfOf5dO0fmmxuPMfltDS38x6bT1o07fW4SHIp/NX6WOZuPWS5FolgHRMdH8xeQtZjV9&#xA;NvDcFv8AdQnjWQHwMbIHH0jMyOW+RDSYV0RGp6l5O0qIy6lcNaIO808SE/IFKn6MJyEcyECIKQ2d&#xA;7rXneX6j+XOk3DwluE/mXUf3dhCOhKAxq0rDw/4U5i5NYRybo4B1eyflj+UWh+R4ZLsyNqnmS8H+&#xA;5HW7gfvXJ3KRA19OP/JB379BTAlIk2W8CmeZFLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVYT5h/JT8qvME5n1Ty3aPO27ywB7VmPizW7RFj88bVBaJ/zj&#xA;7+T+jzJPa+W4Jpk/bu3lugSO5SZ3j/4XDavQIIIIIUhgjWKGMBY40AVVA6AAbAYFX4q7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:519789CFBF0EDD118297B750AF45A23F</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:529789CFBF0EDD118297B750AF45A23F</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:53CAFFD0060EDD11A078E0D3F82240A3</stRef:instanceID>
            <stRef:documentID>uuid:52CAFFD0060EDD11A078E0D3F82240A3</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4.000000</stDim:w>
            <stDim:h>4.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>True</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>80% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>80.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>60% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>60.000004</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>40% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>39.999996</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>20% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>19.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Red M=100 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Red M=75 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Red M=50 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Red M=25 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Green C=80 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Green C=60 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>60.000004</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Green C=40 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Green C=20 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blue C=100 M=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Blue C=75 M=37.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Blue C=50 M=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Blue C=25 M=12.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Orange M=50 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Orange M=37.5 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Orange M=25 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Orange M=12.5 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Violet C=50 M=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Violet C=37.5 M=67.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>67.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Violet C=25 M=45 </xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>45.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Violet C=12.5 M=22.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>22.500002</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Azure C=80</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Azure C=60</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>60.000004</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Azure C=40</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Azure C=20</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -64.1221 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 64.1221 li
165.728 64.1221 li
165.728 0 li
cp
clp
[1 0 0 1 0 0 ]ct
61.7217 10.894 mo
61.7217 19.9321 li
61.7217 22.9614 62.9785 24.3726 64.8984 24.3726 cv
66.9375 24.3726 68.1641 22.9751 68.1641 19.9321 cv
68.1641 10.894 li
70.9971 10.894 li
70.9971 19.7495 li
70.9971 24.5239 68.54 26.6489 64.7959 26.6489 cv
61.2197 26.6489 58.8887 24.6421 58.8887 19.7651 cv
58.8887 10.894 li
61.7217 10.894 li
cp
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
f
74.0967 18.5288 mo
74.0967 17.2358 74.0557 16.1685 74.0039 15.1987 cv
76.4785 15.1987 li
76.6182 16.8804 li
76.6836 16.8804 li
77.1787 16.0112 78.3916 14.9458 80.252 14.9458 cv
82.2041 14.9458 84.2319 16.2036 84.2319 19.7456 cv
84.2319 26.396 li
81.3984 26.396 li
81.3984 20.0786 li
81.3984 18.4722 80.8086 17.2476 79.2627 17.2476 cv
78.1348 17.2476 77.3555 18.0435 77.0596 18.9087 cv
76.9727 19.1411 76.9297 19.4849 76.9297 19.8071 cv
76.9297 26.396 li
74.0967 26.396 li
74.0967 18.5288 li
cp
f
88.6343 13.4683 mo
87.646 13.4683 86.9937 12.7515 86.9976 11.853 cv
86.9937 10.9478 87.6675 10.2446 88.6675 10.2446 cv
89.6772 10.2446 90.3218 10.9409 90.3315 11.853 cv
90.3354 12.7515 89.6851 13.4683 88.6558 13.4683 cv
88.6343 13.4683 li
cp
87.2476 26.396 mo
87.2476 15.1987 li
90.0815 15.1987 li
90.0815 26.396 li
87.2476 26.396 li
cp
f
94.9214 15.1987 mo
96.7358 20.8853 li
97.0542 21.8706 97.2905 22.772 97.4995 23.6831 cv
97.5679 23.6831 li
97.7769 22.7563 98.0269 21.8774 98.3296 20.8853 cv
100.103 15.1987 li
103.078 15.1987 li
98.8042 26.396 li
96.0151 26.396 li
91.8569 15.1987 li
94.9214 15.1987 li
cp
f
113.955 21.5806 mo
114.009 21.3188 114.054 20.8979 114.054 20.3716 cv
114.054 17.9185 112.871 14.9253 109.23 14.9253 cv
105.628 14.9253 103.755 17.8501 103.755 20.9399 cv
103.755 24.3716 105.884 26.6177 109.519 26.6177 cv
111.144 26.6177 112.474 26.313 113.433 25.9067 cv
113.013 23.9575 li
112.158 24.272 111.226 24.4761 109.923 24.4761 cv
108.111 24.4761 106.541 23.5894 106.464 21.5601 cv
113.955 21.5806 li
cp
106.46 19.5864 mo
106.585 18.4409 107.312 16.8579 109.054 16.8579 cv
110.951 16.8579 111.402 18.5503 111.39 19.5864 cv
106.46 19.5864 li
cp
f
116.355 18.7993 mo
116.355 17.2993 116.324 16.1968 116.263 15.1987 cv
118.714 15.1987 li
118.82 17.3267 li
118.9 17.3267 li
119.451 15.7495 120.757 14.9458 121.964 14.9458 cv
122.242 14.9458 122.404 14.9565 122.628 15.0073 cv
122.628 17.6743 li
122.365 17.6235 122.117 17.5933 121.777 17.5933 cv
120.427 17.5933 119.492 18.4526 119.238 19.7358 cv
119.191 19.9858 119.166 20.2847 119.166 20.5894 cv
119.166 26.396 li
116.332 26.396 li
116.355 18.7993 li
cp
f
124.388 23.7925 mo
125.013 24.1792 126.23 24.6089 127.244 24.6089 cv
128.49 24.6089 129.046 24.0864 129.046 23.3521 cv
129.046 22.5942 128.585 22.2095 127.208 21.7202 cv
125.017 20.9692 124.103 19.7769 124.113 18.4497 cv
124.113 16.481 125.75 14.9458 128.363 14.9458 cv
129.595 14.9458 130.675 15.2544 131.332 15.6147 cv
130.771 17.6021 li
130.3 17.3354 129.394 16.9585 128.402 16.9585 cv
127.396 16.9585 126.833 17.4556 126.833 18.144 cv
126.833 18.855 127.375 19.1958 128.789 19.7124 cv
130.828 20.4331 131.767 21.4722 131.777 23.1226 cv
131.777 25.1646 130.187 26.6382 127.23 26.6382 cv
125.875 26.6382 124.642 26.313 123.818 25.853 cv
124.388 23.7925 li
cp
f
135.505 13.4683 mo
134.519 13.4683 133.867 12.7515 133.871 11.853 cv
133.867 10.9478 134.541 10.2446 135.541 10.2446 cv
136.55 10.2446 137.195 10.9409 137.205 11.853 cv
137.208 12.7515 136.558 13.4683 135.529 13.4683 cv
135.505 13.4683 li
cp
134.121 26.396 mo
134.121 15.1987 li
136.955 15.1987 li
136.955 26.396 li
134.121 26.396 li
cp
f
143.707 12.3218 mo
143.707 15.1987 li
146.4 15.1987 li
146.4 17.3081 li
143.707 17.3081 li
143.707 22.2495 li
143.707 23.6196 144.072 24.3159 145.154 24.3159 cv
145.667 24.3159 145.933 24.2808 146.253 24.1929 cv
146.312 26.3472 li
145.886 26.5063 145.144 26.6382 144.251 26.6382 cv
143.21 26.6382 142.343 26.2837 141.818 25.7153 cv
141.208 25.0718 140.931 24.0415 140.931 22.5747 cv
140.931 17.3081 li
139.333 17.3081 li
139.333 15.1987 li
140.931 15.1987 li
140.931 13.1138 li
143.707 12.3218 li
cp
f
150.927 15.1987 mo
152.945 21.2017 li
153.169 21.895 153.412 22.7505 153.576 23.3726 cv
153.642 23.3726 li
153.818 22.7437 154.027 21.9009 154.236 21.1782 cv
155.99 15.1987 li
159.009 15.1987 li
156.205 22.8403 li
154.667 27.02 153.628 28.8765 152.31 30.0386 cv
151.197 31.0093 150.044 31.3774 149.341 31.4702 cv
148.703 29.0864 li
149.175 28.9683 149.769 28.7134 150.337 28.314 cv
150.876 27.9604 151.501 27.2993 151.892 26.5288 cv
152.003 26.3354 152.07 26.1704 152.07 26.0317 cv
152.07 25.9087 152.039 25.7437 151.921 25.48 cv
147.806 15.1987 li
150.927 15.1987 li
cp
f
63.7178 48.9873 mo
66.5576 48.9873 69.4473 47.1416 69.4473 43.0264 cv
69.4473 39.6318 67.2168 37.2842 63.8848 37.2842 cv
60.5107 37.2842 58.0918 39.5459 58.0918 43.2197 cv
58.0918 46.8076 60.5361 48.9873 63.6943 48.9873 cv
63.7178 48.9873 li
cp
63.7393 46.9307 mo
62.0547 46.9307 60.9785 45.3018 60.9785 43.1475 cv
60.9785 41.2803 61.7939 39.3408 63.7813 39.3408 cv
65.7354 39.3408 66.5137 41.3506 66.5137 43.1104 cv
66.5137 45.3643 65.3857 46.9307 63.7627 46.9307 cv
63.7393 46.9307 li
cp
f
72.0938 48.7354 mo
72.0938 39.6475 li
70.5762 39.6475 li
70.5762 37.5381 li
72.0938 37.5381 li
72.0938 37.0615 li
72.0938 35.6104 72.4834 34.1514 73.4531 33.2314 cv
74.2822 32.4443 75.4004 32.1509 76.3838 32.1509 cv
77.1357 32.1509 77.7393 32.2769 78.1807 32.4287 cv
77.9834 34.6045 li
77.6758 34.4932 77.3018 34.4033 76.7764 34.4033 cv
75.375 34.4033 74.9072 35.5811 74.9072 36.9521 cv
74.9072 37.5381 li
77.3555 37.5381 li
77.3555 39.6475 li
74.9268 39.6475 li
74.9268 48.7354 li
72.0938 48.7354 li
cp
f
87.6792 48.7354 mo
82.6592 33.2314 li
85.7495 33.2314 li
87.8647 40.2822 li
88.4624 42.2354 88.98 44.0518 89.3804 45.9268 cv
89.4312 45.9268 li
89.8433 44.0967 90.4038 42.2061 91.0073 40.3232 cv
93.269 33.2314 li
96.2827 33.2314 li
90.9233 48.7354 li
87.6792 48.7354 li
cp
f
99.3823 35.8076 mo
98.394 35.8076 97.7417 35.0889 97.7456 34.1924 cv
97.7417 33.2861 98.4155 32.583 99.4155 32.583 cv
100.427 32.583 101.072 33.2783 101.082 34.1924 cv
101.083 35.0889 100.433 35.8076 99.4058 35.8076 cv
99.3823 35.8076 li
cp
97.9956 48.7354 mo
97.9956 37.5381 li
100.83 37.5381 li
100.83 48.7354 li
97.9956 48.7354 li
cp
f
112.099 48.3975 mo
111.511 48.6748 110.343 48.9756 108.937 48.9756 cv
105.427 48.9756 103.166 46.7236 103.166 43.249 cv
103.166 39.8955 105.457 37.29 109.394 37.29 cv
110.441 37.29 111.482 37.5186 112.128 37.8018 cv
111.626 39.9307 li
111.171 39.708 110.492 39.4932 109.484 39.4932 cv
107.326 39.4932 106.046 41.0713 106.056 43.124 cv
106.056 45.4209 107.564 46.7373 109.494 46.7373 cv
110.464 46.7373 111.164 46.5264 111.718 46.2959 cv
112.099 48.3975 li
cp
f
117.791 34.6592 mo
117.791 37.5381 li
120.484 37.5381 li
120.484 39.6475 li
117.791 39.6475 li
117.791 44.5869 li
117.791 45.958 118.156 46.6553 119.238 46.6553 cv
119.751 46.6553 120.017 46.6182 120.337 46.5303 cv
120.396 48.6846 li
119.97 48.8447 119.228 48.9756 118.335 48.9756 cv
117.294 48.9756 116.427 48.6221 115.902 48.0537 cv
115.292 47.4111 115.015 46.3799 115.015 44.9131 cv
115.015 39.6475 li
113.417 39.6475 li
113.417 37.5381 li
115.015 37.5381 li
115.015 35.4521 li
117.791 34.6592 li
cp
f
127.406 48.9873 mo
130.248 48.9873 133.136 47.1416 133.136 43.0264 cv
133.136 39.6318 130.906 37.2842 127.574 37.2842 cv
124.199 37.2842 121.781 39.5459 121.781 43.2197 cv
121.781 46.8076 124.224 48.9873 127.384 48.9873 cv
127.406 48.9873 li
cp
127.429 46.9307 mo
125.744 46.9307 124.667 45.3018 124.667 43.1475 cv
124.667 41.2803 125.482 39.3408 127.47 39.3408 cv
129.423 39.3408 130.203 41.3506 130.203 43.1104 cv
130.203 45.3643 129.076 46.9307 127.451 46.9307 cv
127.429 46.9307 li
cp
f
135.492 41.1377 mo
135.492 39.6377 135.46 38.5342 135.4 37.5381 cv
137.851 37.5381 li
137.957 39.665 li
138.037 39.665 li
138.587 38.0889 139.894 37.2842 141.101 37.2842 cv
141.376 37.2842 141.539 37.2959 141.765 37.3467 cv
141.765 40.0127 li
141.501 39.9619 141.253 39.9326 140.912 39.9326 cv
139.564 39.9326 138.628 40.79 138.375 42.0732 cv
138.328 42.3232 138.302 42.624 138.302 42.9268 cv
138.302 48.7354 li
135.468 48.7354 li
135.492 41.1377 li
cp
f
145.064 35.8076 mo
144.076 35.8076 143.423 35.0889 143.427 34.1924 cv
143.423 33.2861 144.097 32.583 145.097 32.583 cv
146.107 32.583 146.751 33.2783 146.761 34.1924 cv
146.765 35.0889 146.115 35.8076 145.085 35.8076 cv
145.064 35.8076 li
cp
143.677 48.7354 mo
143.677 37.5381 li
146.511 37.5381 li
146.511 48.7354 li
143.677 48.7354 li
cp
f
158.244 42.0049 mo
158.244 39.5479 157.218 37.2842 153.626 37.2842 cv
151.863 37.2842 150.414 37.7646 149.568 38.2783 cv
150.128 40.1162 li
150.892 39.6338 152.042 39.2803 153.138 39.2803 cv
155.121 39.2725 155.414 40.4971 155.414 41.2314 cv
155.414 41.417 li
151.289 41.4014 148.771 42.8311 148.771 45.6572 cv
148.771 47.3643 150.029 48.9873 152.3 48.9873 cv
153.751 48.9873 154.921 48.3701 155.601 47.4873 cv
155.669 47.4873 li
155.863 48.7354 li
158.417 48.7354 li
158.294 48.0439 158.244 47.0557 158.244 46.0381 cv
158.244 42.0049 li
cp
155.488 44.7979 mo
155.488 44.9951 155.47 45.2178 155.41 45.4131 cv
155.138 46.2334 154.324 46.9639 153.193 46.9639 cv
152.298 46.9639 151.58 46.4463 151.58 45.3506 cv
151.58 43.6455 153.49 43.2236 155.488 43.251 cv
155.488 44.7979 li
cp
f
26.418 57.6318 mo
19.2129 57.6318 5.43359 47.9072 5.43359 32.6611 cv
5.43359 32.6611 5.43359 29.0454 5.43359 24.3721 cv
47.2979 24.3721 li
47.2979 29.0454 47.2979 32.6611 47.2979 32.6611 cv
47.2979 47.9072 33.5879 57.6318 26.418 57.6318 cv
cp
false sop
level3{
gsave
clp
[-1.45385e-06 33.2603 -33.2603 -1.45385e-06 26.3657 24.3721 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s-Witr0IBoq3D!kp65OfoTB1bnW3_\mZ.>Xl\tlSk_fENjba$Jj+m[Fi._4@h1Yh<g4KA7f7<o2e:7N.
dXD0*c[5^$b^'6taa!jp`chCk_fYqf_/oYc^2a2]]5R`X\8M?T[;>mOZ>0FJY\=(FX_7\AWb)5<Vdoc7
UgjB3Tj[p.T3hR*S6c1%R9T^uQ<F7pP?7ekOB2DgN`?&cMc0T]Lf+3YKhqaTJkc:OJ5$"LI7jPFH:\)A
G=MW<F@H68EC9d3DaFF/CdA%*Bg2S%Aj$+u@ls_q?oe8l?8qoh>;cHb=>^'^<AOUY;DA.T:G;bP9eHDL
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.45385e-06 33.2603 -33.2603 -1.45385e-06 26.3657 24.3721 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~s8Mupr;6?dq=s^Xp@\+No^hYDnaQ#9md9B-lg!a!ki_*jjlGL_j5T%Vi8<GKh;$f?g=b03f@JO'eC2mp
daHOicd0n]bfn8QaiVWE`l?!9_o'@._83q%^V7Co]Xtbc\[],W[^EKLZa-j@Yct=7Y-"e,X/`.uW2HMi
V50o^U7n9RTV%jJSXc4>R[KS2Q^3r&Pa%ApOcb`dO,f6[N/W[PM2@%DLPCM9KS+l-JUi9#IsufnI!^0b
H$FOWG'.nKF)l8?E,]`6DJa3+CMITuBP1siARo=]@UW\Q?XI,G?!LW=>$>'2='&F&<)cdo;,L.c:/4MX
~>
<~R$a8-Q^3r'QBd`"P`q;oP*(lgOH5H`O,f6[NJrgSMi*CLMM[1GLkgb?L4t>8KnP,3K7\]+JUi9$J:E&t
IXZ]nI!g9fH?sj^H$OXZGB\4RF`heJFEDSFEcQ/>E,]`6Df9N2D/F**CMR["Bk_6oBP;$kAnGUcA7T1[
@q0"X@UW\Q?sd8I?=$rD?!LW=>?Y35=]ed-='&I(<`N.!<)Z^n;GpCi;,C(b:JOYZ9he>U9M8#N8kDTF
84Z6@7Rfj:77BU46UO1,5s[e&5X7Ou5!D+m4?P_g4$,Ja3B9&Y2`EWQ2)R6K1c.!E1,:R=0JG170/"q1
~>
0 <~%LrsY%LrsY%LrsY%LrsY%LrsY%LijV%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[:K$47+I$47+I$47+I$47+I$47+I$47(G#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#RC\A#RC\@#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89
"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
46.5908 23.1113 mo
46.5908 5.69434 li
5.99219 5.69434 li
5.99219 23.1113 li
46.5908 23.1113 li
cp
0 0 0 0 cmyk
f
30.9199 13.1362 mo
30.1641 13.9106 29.5586 14.084 29.3828 14.123 cv
28.793 13.7813 28.3623 13.4722 28.2139 13.3428 cv
28.1387 13.2783 28.0703 13.2173 28.001 13.1558 cv
28.4316 13.2197 29.8955 13.4028 30.9199 13.1362 cv
cp
0 0.91 0.76 0 cmyk
f
0.144 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
30.9199 13.1362 mo
30.1641 13.9106 29.5586 14.084 29.3828 14.123 cv
28.793 13.7813 28.3623 13.4722 28.2139 13.3428 cv
28.1387 13.2783 28.0703 13.2173 28.001 13.1558 cv
28.4316 13.2197 29.8955 13.4028 30.9199 13.1362 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
22.8203 18.3525 mo
23.041 17.9595 23.4297 17.313 23.4199 16.5708 cv
23.6465 16.7354 23.8604 16.8452 24.0332 16.9014 cv
24.0859 17.3579 24.082 17.7744 24.041 18.1504 cv
23.8359 18.252 23.4785 18.3457 22.8203 18.3525 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
22.8203 18.3525 mo
23.041 17.9595 23.4297 17.313 23.4199 16.5708 cv
23.6465 16.7354 23.8604 16.8452 24.0332 16.9014 cv
24.0859 17.3579 24.082 17.7744 24.041 18.1504 cv
23.8359 18.252 23.4785 18.3457 22.8203 18.3525 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
29.5293 17.6006 mo
29.8691 18.1489 30.6738 18.5723 30.5039 20.415 cv
29.6504 18.9458 27.3105 16.8267 26.6543 16.7061 cv
26.291 17.7007 27.0039 20.0571 27.1982 20.4307 cv
26.4424 20.0571 25.9795 19.7168 25.6816 18.248 cv
25.3652 18.9717 25.2305 19.896 23.7539 20.3853 cv
24.1895 19.5869 24.8164 18.9395 24.7559 16.5054 cv
23.9375 16.0259 22.2607 16.2114 22.0371 11.6792 cv
21.9902 10.5337 21.5146 10.2153 20.6602 9.63965 cv
20.6602 9.63965 21.3086 9.17725 21.8008 8.78955 cv
22.418 8.30518 24.3662 8.01416 24.4629 11.0259 cv
25.9434 11.874 25.9512 12.1519 27.0723 13.2344 cv
28.1445 14.2686 30.583 15.606 31.75 15.6382 cv
30.7754 15.9868 29.5293 16.0073 28.8945 16.0073 cv
29.2363 15.708 29.4004 15.5396 29.5049 15.2354 cv
28.8711 15.6582 27.582 16.2559 26.0703 15.5098 cv
26.6934 15.5405 27.334 15.5894 27.9707 14.8633 cv
27.2402 15.0869 25.375 15.6655 24.002 14.0391 cv
22.7607 12.5747 24.4023 12.3569 25.2188 12.9458 cv
26.0625 13.5513 26.4121 14.0049 26.5742 14.5938 cv
26.8164 13.6982 25.5352 11.6001 23.9033 11.9482 cv
22.2725 12.2974 23.7637 15.0098 24.8525 15.5342 cv
25.2686 15.7329 26.291 16.6533 29.6016 16.6289 cv
30.1348 16.8936 30.7061 17.1909 31.9893 17.3032 cv
31.3555 17.9741 29.7969 17.875 29.5293 17.6006 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
29.5293 17.6006 mo
29.8691 18.1489 30.6738 18.5723 30.5039 20.415 cv
29.6504 18.9458 27.3105 16.8267 26.6543 16.7061 cv
26.291 17.7007 27.0039 20.0571 27.1982 20.4307 cv
26.4424 20.0571 25.9795 19.7168 25.6816 18.248 cv
25.3652 18.9717 25.2305 19.896 23.7539 20.3853 cv
24.1895 19.5869 24.8164 18.9395 24.7559 16.5054 cv
23.9375 16.0259 22.2607 16.2114 22.0371 11.6792 cv
21.9902 10.5337 21.5146 10.2153 20.6602 9.63965 cv
20.6602 9.63965 21.3086 9.17725 21.8008 8.78955 cv
22.418 8.30518 24.3662 8.01416 24.4629 11.0259 cv
25.9434 11.874 25.9512 12.1519 27.0723 13.2344 cv
28.1445 14.2686 30.583 15.606 31.75 15.6382 cv
30.7754 15.9868 29.5293 16.0073 28.8945 16.0073 cv
29.2363 15.708 29.4004 15.5396 29.5049 15.2354 cv
28.8711 15.6582 27.582 16.2559 26.0703 15.5098 cv
26.6934 15.5405 27.334 15.5894 27.9707 14.8633 cv
27.2402 15.0869 25.375 15.6655 24.002 14.0391 cv
22.7607 12.5747 24.4023 12.3569 25.2188 12.9458 cv
26.0625 13.5513 26.4121 14.0049 26.5742 14.5938 cv
26.8164 13.6982 25.5352 11.6001 23.9033 11.9482 cv
22.2725 12.2974 23.7637 15.0098 24.8525 15.5342 cv
25.2686 15.7329 26.291 16.6533 29.6016 16.6289 cv
30.1348 16.8936 30.7061 17.1909 31.9893 17.3032 cv
31.3555 17.9741 29.7969 17.875 29.5293 17.6006 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
21.9844 9.27051 mo
22.1074 9.35352 22.4141 9.52295 22.7246 9.47412 cv
22.4824 9.6543 21.9971 9.5166 21.791 9.40088 cv
21.7676 9.41943 21.7451 9.43604 21.7207 9.45605 cv
21.6328 9.51709 21.5479 9.52588 21.5254 9.54443 cv
21.4912 9.57422 21.5059 9.62061 21.5059 9.62061 cv
21.6367 9.57422 21.9551 9.77686 21.9551 9.77686 cv
22.4258 10.0488 22.8008 9.80273 22.9482 9.73291 cv
23.0977 9.66455 23.1777 9.61768 23.3496 9.50928 cv
22.9131 8.93652 22.3916 9.03027 21.9844 9.27051 cv
cp
0 0 0 1 nzopmsc
f
29.5332 17.5947 mo
29.875 18.1426 30.6787 18.5664 30.5088 20.4092 cv
29.6563 18.9395 27.3145 16.8203 26.6602 16.6992 cv
26.2949 17.6948 27.0078 20.0498 27.2012 20.4238 cv
26.4482 20.0498 25.9844 19.7104 25.6865 18.2417 cv
25.3691 18.9648 25.2363 19.8901 23.7578 20.3794 cv
24.1953 19.5806 24.8213 18.9346 24.7598 16.4995 cv
23.9424 16.02 22.2646 16.2061 22.043 11.6733 cv
21.9951 10.5273 21.5195 10.2095 20.6641 9.63428 cv
20.6641 9.63428 21.3135 9.1709 21.8047 8.78369 cv
22.4219 8.29932 24.3701 8.00732 24.4688 11.021 cv
25.9492 11.8687 25.957 12.146 27.0762 13.2285 cv
28.1504 14.2632 30.5879 15.6006 31.7559 15.6328 cv
30.7813 15.9795 29.5332 16.001 28.9004 16.001 cv
29.2422 15.7026 29.4053 15.5322 29.5098 15.229 cv
28.877 15.6523 27.5869 16.25 26.0762 15.5044 cv
26.6973 15.5342 27.3398 15.582 27.9746 14.8569 cv
27.2461 15.0806 25.3828 15.6597 24.0049 14.0332 cv
22.7676 12.5684 24.4053 12.3511 25.2227 12.939 cv
26.0684 13.5454 26.417 13.9995 26.5791 14.5884 cv
26.8223 13.6919 25.54 11.5933 23.9082 11.9414 cv
22.2773 12.2915 23.7676 15.0044 24.8574 15.5278 cv
25.2715 15.7271 26.2949 16.6479 29.6094 16.6235 cv
30.1406 16.8877 30.7109 17.1841 31.9941 17.2964 cv
31.3613 17.9683 29.8027 17.8682 29.5332 17.5947 cv
cp
22.8262 18.3462 mo
23.0469 17.9536 23.4336 17.3071 23.4258 16.5649 cv
23.6514 16.7285 23.8652 16.8379 24.0371 16.8945 cv
24.0898 17.3521 24.0869 17.7681 24.0469 18.145 cv
23.8398 18.2451 23.4824 18.3403 22.8262 18.3462 cv
cp
30.9229 13.1304 mo
30.168 13.9038 29.5645 14.0781 29.3877 14.1167 cv
28.7988 13.7749 28.3672 13.4658 28.2188 13.3369 cv
28.1445 13.2729 28.0742 13.2104 28.0078 13.1494 cv
28.4355 13.2139 29.9004 13.3975 30.9229 13.1304 cv
cp
33.375 16.6709 mo
32.043 17.0469 30.7773 16.4492 30.7578 16.4331 cv
32.0596 16.145 32.7061 15.9492 33.3477 15.3413 cv
32.25 15.3916 31.0615 14.9702 30.0977 14.4966 cv
30.4014 14.3208 31.5293 13.603 31.8975 12.4512 cv
31.3887 12.645 28.0527 12.8643 27.3516 12.4897 cv
26.7695 11.8477 26.4531 11.377 25.0811 10.6045 cv
24.4736 6.79541 22.0166 7.82959 21.3066 8.6377 cv
20.8779 9.12451 19.9053 9.56104 19.9053 9.56104 cv
21.4414 10.3696 21.4561 11.0425 21.5449 11.7671 cv
21.4424 13.7563 22.0645 15.1152 22.7598 15.939 cv
22.9561 16.4561 23.0898 17.48 22.043 18.7358 cv
22.8818 18.853 23.5967 18.7544 23.957 18.6816 cv
23.752 19.5962 23.3174 20.249 22.957 20.7202 cv
23.5176 20.8569 25.085 20.4912 25.6152 19.9321 cv
26.1973 20.334 27.1729 21.2046 28.5117 21.1104 cv
27.0742 19.9683 27.1729 18.2168 27.2813 17.7583 cv
28.3633 18.5664 30.0693 20.2598 30.8242 21.8262 cv
31.1914 20.0347 31.0928 19.6367 30.9746 18.5195 cv
32.0176 18.042 32.7246 17.6196 33.375 16.6709 cv
cp
f
43.2285 13.1362 mo
42.4736 13.9106 41.8691 14.084 41.6914 14.123 cv
41.1035 13.7813 40.6738 13.4722 40.5234 13.3428 cv
40.4492 13.2783 40.3799 13.2173 40.3115 13.1558 cv
40.7422 13.2197 42.2061 13.4028 43.2285 13.1362 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
43.2285 13.1362 mo
42.4736 13.9106 41.8691 14.084 41.6914 14.123 cv
41.1035 13.7813 40.6738 13.4722 40.5234 13.3428 cv
40.4492 13.2783 40.3799 13.2173 40.3115 13.1558 cv
40.7422 13.2197 42.2061 13.4028 43.2285 13.1362 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
35.1309 18.3525 mo
35.3516 17.9595 35.7383 17.313 35.7285 16.5708 cv
35.9551 16.7354 36.1699 16.8452 36.3418 16.9014 cv
36.3945 17.3579 36.3926 17.7744 36.3516 18.1504 cv
36.1455 18.252 35.7891 18.3457 35.1309 18.3525 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
35.1309 18.3525 mo
35.3516 17.9595 35.7383 17.313 35.7285 16.5708 cv
35.9551 16.7354 36.1699 16.8452 36.3418 16.9014 cv
36.3945 17.3579 36.3926 17.7744 36.3516 18.1504 cv
36.1455 18.252 35.7891 18.3457 35.1309 18.3525 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
41.8398 17.6006 mo
42.1797 18.1489 42.9844 18.5723 42.8145 20.415 cv
41.9609 18.9458 39.6201 16.8267 38.9658 16.7061 cv
38.5996 17.7007 39.3125 20.0571 39.5098 20.4307 cv
38.752 20.0571 38.29 19.7168 37.9912 18.248 cv
37.6738 18.9717 37.54 19.896 36.0635 20.3853 cv
36.5 19.5869 37.125 18.9395 37.0645 16.5054 cv
36.2461 16.0259 34.5703 16.2114 34.3477 11.6792 cv
34.2988 10.5337 33.8242 10.2153 32.9688 9.63965 cv
32.9688 9.63965 33.6191 9.17725 34.1094 8.78955 cv
34.7285 8.30518 36.6758 8.01416 36.7734 11.0259 cv
38.2529 11.874 38.2607 12.1519 39.3828 13.2344 cv
40.4551 14.2686 42.8926 15.606 44.0596 15.6382 cv
43.0879 15.9868 41.8398 16.0073 41.2051 16.0073 cv
41.5469 15.708 41.71 15.5396 41.8125 15.2354 cv
41.1816 15.6582 39.8916 16.2559 38.3809 15.5098 cv
39.002 15.5405 39.6436 15.5894 40.2803 14.8633 cv
39.5488 15.0869 37.6855 15.6655 36.3105 14.0391 cv
35.0713 12.5747 36.7109 12.3569 37.5283 12.9458 cv
38.373 13.5513 38.7227 14.0049 38.8828 14.5938 cv
39.127 13.6982 37.8447 11.6001 36.2129 11.9482 cv
34.582 12.2974 36.0742 15.0098 37.1631 15.5342 cv
37.5781 15.7329 38.5996 16.6533 41.9121 16.6289 cv
42.4453 16.8936 43.0156 17.1909 44.2988 17.3032 cv
43.666 17.9741 42.1074 17.875 41.8398 17.6006 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
41.8398 17.6006 mo
42.1797 18.1489 42.9844 18.5723 42.8145 20.415 cv
41.9609 18.9458 39.6201 16.8267 38.9658 16.7061 cv
38.5996 17.7007 39.3125 20.0571 39.5098 20.4307 cv
38.752 20.0571 38.29 19.7168 37.9912 18.248 cv
37.6738 18.9717 37.54 19.896 36.0635 20.3853 cv
36.5 19.5869 37.125 18.9395 37.0645 16.5054 cv
36.2461 16.0259 34.5703 16.2114 34.3477 11.6792 cv
34.2988 10.5337 33.8242 10.2153 32.9688 9.63965 cv
32.9688 9.63965 33.6191 9.17725 34.1094 8.78955 cv
34.7285 8.30518 36.6758 8.01416 36.7734 11.0259 cv
38.2529 11.874 38.2607 12.1519 39.3828 13.2344 cv
40.4551 14.2686 42.8926 15.606 44.0596 15.6382 cv
43.0879 15.9868 41.8398 16.0073 41.2051 16.0073 cv
41.5469 15.708 41.71 15.5396 41.8125 15.2354 cv
41.1816 15.6582 39.8916 16.2559 38.3809 15.5098 cv
39.002 15.5405 39.6436 15.5894 40.2803 14.8633 cv
39.5488 15.0869 37.6855 15.6655 36.3105 14.0391 cv
35.0713 12.5747 36.7109 12.3569 37.5283 12.9458 cv
38.373 13.5513 38.7227 14.0049 38.8828 14.5938 cv
39.127 13.6982 37.8447 11.6001 36.2129 11.9482 cv
34.582 12.2974 36.0742 15.0098 37.1631 15.5342 cv
37.5781 15.7329 38.5996 16.6533 41.9121 16.6289 cv
42.4453 16.8936 43.0156 17.1909 44.2988 17.3032 cv
43.666 17.9741 42.1074 17.875 41.8398 17.6006 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
34.2949 9.27051 mo
34.418 9.35352 34.7236 9.52295 35.0352 9.47412 cv
34.793 9.6543 34.3066 9.5166 34.1016 9.40088 cv
34.0762 9.41943 34.0547 9.43604 34.0313 9.45605 cv
33.9424 9.51709 33.8584 9.52588 33.8359 9.54443 cv
33.8008 9.57422 33.8164 9.62061 33.8164 9.62061 cv
33.9473 9.57422 34.2637 9.77686 34.2637 9.77686 cv
34.7373 10.0488 35.1104 9.80273 35.2578 9.73291 cv
35.4072 9.66455 35.4883 9.61768 35.6582 9.50928 cv
35.2227 8.93652 34.7012 9.03027 34.2949 9.27051 cv
cp
0 0 0 1 nzopmsc
f
41.8438 17.5947 mo
42.1855 18.1426 42.9883 18.5664 42.8184 20.4092 cv
41.9648 18.9395 39.624 16.8203 38.9688 16.6992 cv
38.6055 17.6948 39.3184 20.0498 39.5117 20.4238 cv
38.7578 20.0498 38.2949 19.7104 37.9961 18.2417 cv
37.6797 18.9648 37.5449 19.8901 36.0674 20.3794 cv
36.5059 19.5806 37.1309 18.9346 37.0703 16.4995 cv
36.252 16.02 34.5742 16.2061 34.3535 11.6733 cv
34.3057 10.5273 33.8281 10.2095 32.9746 9.63428 cv
32.9746 9.63428 33.623 9.1709 34.1143 8.78369 cv
34.7314 8.29932 36.6797 8.00732 36.7783 11.021 cv
38.2588 11.8687 38.2656 12.146 39.3867 13.2285 cv
40.4609 14.2632 42.8975 15.6006 44.0664 15.6328 cv
43.0928 15.9795 41.8438 16.001 41.2109 16.001 cv
41.5518 15.7026 41.7148 15.5322 41.8193 15.229 cv
41.1865 15.6523 39.8965 16.25 38.3857 15.5044 cv
39.0078 15.5342 39.6494 15.582 40.2852 14.8569 cv
39.5566 15.0806 37.6914 15.6597 36.3145 14.0332 cv
35.0762 12.5684 36.7148 12.3511 37.5332 12.939 cv
38.3789 13.5454 38.7266 13.9995 38.8887 14.5884 cv
39.1318 13.6919 37.8496 11.5933 36.2188 11.9414 cv
34.5879 12.2915 36.0781 15.0044 37.1689 15.5278 cv
37.582 15.7271 38.6055 16.6479 41.918 16.6235 cv
42.4512 16.8877 43.0215 17.1841 44.3047 17.2964 cv
43.6699 17.9683 42.1133 17.8682 41.8438 17.5947 cv
cp
35.1367 18.3462 mo
35.3564 17.9536 35.7422 17.3071 35.7344 16.5649 cv
35.9609 16.7285 36.1748 16.8379 36.3477 16.8945 cv
36.4004 17.3521 36.3965 17.7681 36.3555 18.145 cv
36.1494 18.2451 35.793 18.3403 35.1367 18.3462 cv
cp
43.2344 13.1304 mo
42.4766 13.9038 41.876 14.0781 41.6973 14.1167 cv
41.1074 13.7749 40.6777 13.4658 40.5293 13.3369 cv
40.4541 13.2729 40.3838 13.2104 40.3174 13.1494 cv
40.7451 13.2139 42.2109 13.3975 43.2344 13.1304 cv
cp
45.6846 16.6709 mo
44.3516 17.0469 43.0889 16.4492 43.0693 16.4331 cv
44.3691 16.145 45.0156 15.9492 45.6582 15.3413 cv
44.5596 15.3916 43.3711 14.9702 42.4072 14.4966 cv
42.7109 14.3208 43.8398 13.603 44.207 12.4512 cv
43.6992 12.645 40.3623 12.8643 39.6602 12.4897 cv
39.0781 11.8477 38.7637 11.377 37.3906 10.6045 cv
36.7832 6.79541 34.3281 7.82959 33.6172 8.6377 cv
33.1875 9.12451 32.2148 9.56104 32.2148 9.56104 cv
33.75 10.3696 33.7656 11.0425 33.8574 11.7671 cv
33.752 13.7563 34.375 15.1152 35.0703 15.939 cv
35.2656 16.4561 35.4004 17.48 34.3535 18.7358 cv
35.1914 18.853 35.9053 18.7544 36.2676 18.6816 cv
36.0615 19.5962 35.6279 20.249 35.2666 20.7202 cv
35.8281 20.8569 37.3945 20.4912 37.9258 19.9321 cv
38.5078 20.334 39.4824 21.2046 40.8223 21.1104 cv
39.3848 19.9683 39.4824 18.2168 39.5908 17.7583 cv
40.6758 18.5664 42.3789 20.2598 43.1338 21.8262 cv
43.502 20.0347 43.4023 19.6367 43.2852 18.5195 cv
44.3281 18.042 45.0352 17.6196 45.6846 16.6709 cv
cp
f
18.3955 13.1362 mo
17.6387 13.9106 17.0352 14.084 16.8594 14.123 cv
16.2695 13.7813 15.8398 13.4722 15.6914 13.3428 cv
15.6152 13.2783 15.5449 13.2173 15.4785 13.1558 cv
15.9063 13.2197 17.3711 13.4028 18.3955 13.1362 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
18.3955 13.1362 mo
17.6387 13.9106 17.0352 14.084 16.8594 14.123 cv
16.2695 13.7813 15.8398 13.4722 15.6914 13.3428 cv
15.6152 13.2783 15.5449 13.2173 15.4785 13.1558 cv
15.9063 13.2197 17.3711 13.4028 18.3955 13.1362 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
10.2969 18.3525 mo
10.5176 17.9595 10.9043 17.313 10.8955 16.5708 cv
11.1211 16.7354 11.3359 16.8452 11.5098 16.9014 cv
11.5625 17.3579 11.5586 17.7744 11.5176 18.1504 cv
11.3115 18.252 10.9541 18.3457 10.2969 18.3525 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
10.2969 18.3525 mo
10.5176 17.9595 10.9043 17.313 10.8955 16.5708 cv
11.1211 16.7354 11.3359 16.8452 11.5098 16.9014 cv
11.5625 17.3579 11.5586 17.7744 11.5176 18.1504 cv
11.3115 18.252 10.9541 18.3457 10.2969 18.3525 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
17.0049 17.6006 mo
17.3457 18.1489 18.1494 18.5723 17.9795 20.415 cv
17.127 18.9458 14.7861 16.8267 14.1309 16.7061 cv
13.7656 17.7007 14.4785 20.0571 14.6738 20.4307 cv
13.918 20.0571 13.4551 19.7168 13.1563 18.248 cv
12.8398 18.9717 12.708 19.896 11.2295 20.3853 cv
11.666 19.5869 12.292 18.9395 12.2324 16.5054 cv
11.4121 16.0259 9.73633 16.2114 9.51367 11.6792 cv
9.4668 10.5337 8.98633 10.2153 8.12988 9.63965 cv
8.12988 9.63965 8.78125 9.17725 9.27637 8.78955 cv
9.89258 8.30518 11.8418 8.01416 11.9395 11.0259 cv
13.4209 11.874 13.4287 12.1519 14.5488 13.2344 cv
15.6211 14.2686 18.0586 15.606 19.2266 15.6382 cv
18.252 15.9868 17.0049 16.0073 16.3711 16.0073 cv
16.7139 15.708 16.875 15.5396 16.9805 15.2354 cv
16.3477 15.6582 15.0576 16.2559 13.5469 15.5098 cv
14.168 15.5405 14.8105 15.5894 15.4473 14.8633 cv
14.7158 15.0869 12.8535 15.6655 11.4766 14.0391 cv
10.2383 12.5747 11.877 12.3569 12.6953 12.9458 cv
13.5391 13.5513 13.8867 14.0049 14.0508 14.5938 cv
14.293 13.6982 13.0098 11.6001 11.3789 11.9482 cv
9.74707 12.2974 11.2383 15.0098 12.3291 15.5342 cv
12.7422 15.7329 13.7656 16.6533 17.0781 16.6289 cv
17.6113 16.8936 18.1826 17.1909 19.4648 17.3032 cv
18.833 17.9741 17.2734 17.875 17.0049 17.6006 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
17.0049 17.6006 mo
17.3457 18.1489 18.1494 18.5723 17.9795 20.415 cv
17.127 18.9458 14.7861 16.8267 14.1309 16.7061 cv
13.7656 17.7007 14.4785 20.0571 14.6738 20.4307 cv
13.918 20.0571 13.4551 19.7168 13.1563 18.248 cv
12.8398 18.9717 12.708 19.896 11.2295 20.3853 cv
11.666 19.5869 12.292 18.9395 12.2324 16.5054 cv
11.4121 16.0259 9.73633 16.2114 9.51367 11.6792 cv
9.4668 10.5337 8.98633 10.2153 8.12988 9.63965 cv
8.12988 9.63965 8.78125 9.17725 9.27637 8.78955 cv
9.89258 8.30518 11.8418 8.01416 11.9395 11.0259 cv
13.4209 11.874 13.4287 12.1519 14.5488 13.2344 cv
15.6211 14.2686 18.0586 15.606 19.2266 15.6382 cv
18.252 15.9868 17.0049 16.0073 16.3711 16.0073 cv
16.7139 15.708 16.875 15.5396 16.9805 15.2354 cv
16.3477 15.6582 15.0576 16.2559 13.5469 15.5098 cv
14.168 15.5405 14.8105 15.5894 15.4473 14.8633 cv
14.7158 15.0869 12.8535 15.6655 11.4766 14.0391 cv
10.2383 12.5747 11.877 12.3569 12.6953 12.9458 cv
13.5391 13.5513 13.8867 14.0049 14.0508 14.5938 cv
14.293 13.6982 13.0098 11.6001 11.3789 11.9482 cv
9.74707 12.2974 11.2383 15.0098 12.3291 15.5342 cv
12.7422 15.7329 13.7656 16.6533 17.0781 16.6289 cv
17.6113 16.8936 18.1826 17.1909 19.4648 17.3032 cv
18.833 17.9741 17.2734 17.875 17.0049 17.6006 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
9.45996 9.27051 mo
9.58398 9.35352 9.88965 9.52295 10.2012 9.47412 cv
9.95898 9.6543 9.47461 9.5166 9.26758 9.40088 cv
9.24219 9.41943 9.2168 9.43604 9.19434 9.45605 cv
9.10352 9.51709 9.01953 9.52588 8.99707 9.54443 cv
8.96094 9.57422 8.97852 9.62061 8.97852 9.62061 cv
9.10742 9.57422 9.43164 9.77686 9.43164 9.77686 cv
9.90234 10.0488 10.2764 9.80273 10.4248 9.73291 cv
10.5742 9.66455 10.6543 9.61768 10.8252 9.50928 cv
10.3896 8.93652 9.86719 9.03027 9.45996 9.27051 cv
cp
0 0 0 1 nzopmsc
f
17.0098 17.5947 mo
17.3506 18.1426 18.1543 18.5664 17.9834 20.4092 cv
17.1309 18.9395 14.791 16.8203 14.1367 16.6992 cv
13.7715 17.6948 14.4844 20.0498 14.6797 20.4238 cv
13.9238 20.0498 13.4609 19.7104 13.1621 18.2417 cv
12.8457 18.9648 12.7109 19.8901 11.2344 20.3794 cv
11.6719 19.5806 12.2959 18.9346 12.2363 16.4995 cv
11.418 16.02 9.74121 16.2061 9.51953 11.6733 cv
9.47266 10.5273 8.99121 10.2095 8.13672 9.63428 cv
8.13672 9.63428 8.78516 9.1709 9.28125 8.78369 cv
9.89844 8.29932 11.8467 8.00732 11.9453 11.021 cv
13.4258 11.8687 13.4316 12.146 14.5527 13.2285 cv
15.626 14.2632 18.0654 15.6006 19.2305 15.6328 cv
18.2588 15.9795 17.0098 16.001 16.377 16.001 cv
16.7168 15.7026 16.8809 15.5322 16.9863 15.229 cv
16.3516 15.6523 15.0615 16.25 13.5508 15.5044 cv
14.1738 15.5342 14.8145 15.582 15.4512 14.8569 cv
14.7207 15.0806 12.8564 15.6597 11.4814 14.0332 cv
10.2422 12.5684 11.8818 12.3511 12.6992 12.939 cv
13.5439 13.5454 13.8936 13.9995 14.0547 14.5884 cv
14.2969 13.6919 13.0156 11.5933 11.3848 11.9414 cv
9.75195 12.2915 11.2441 15.0044 12.333 15.5278 cv
12.748 15.7271 13.7715 16.6479 17.083 16.6235 cv
17.6162 16.8877 18.1875 17.1841 19.4707 17.2964 cv
18.8359 17.9683 17.2783 17.8682 17.0098 17.5947 cv
cp
10.3018 18.3462 mo
10.5215 17.9536 10.9102 17.3071 10.8994 16.5649 cv
11.127 16.7285 11.3398 16.8379 11.5117 16.8945 cv
11.5654 17.3521 11.5635 17.7681 11.5234 18.145 cv
11.3164 18.2451 10.959 18.3403 10.3018 18.3462 cv
cp
18.4004 13.1304 mo
17.6436 13.9038 17.041 14.0781 16.8613 14.1167 cv
16.2734 13.7749 15.8438 13.4658 15.6953 13.3369 cv
15.6191 13.2729 15.5508 13.2104 15.4824 13.1494 cv
15.9121 13.2139 17.377 13.3975 18.4004 13.1304 cv
cp
20.8516 16.6709 mo
19.5176 17.0469 18.2529 16.4492 18.2344 16.4331 cv
19.5352 16.145 20.1816 15.9492 20.8223 15.3413 cv
19.7266 15.3916 18.5381 14.9702 17.5742 14.4966 cv
17.877 14.3208 19.0049 13.603 19.375 12.4512 cv
18.8643 12.645 15.5293 12.8643 14.8281 12.4897 cv
14.2441 11.8477 13.9307 11.377 12.5586 10.6045 cv
11.9492 6.79541 9.49414 7.82959 8.77734 8.6377 cv
8.34961 9.12451 7.37695 9.56104 7.37695 9.56104 cv
8.91113 10.3696 8.92773 11.0425 9.0166 11.7671 cv
8.91406 13.7563 9.53906 15.1152 10.2363 15.939 cv
10.4326 16.4561 10.5664 17.48 9.51953 18.7358 cv
10.3574 18.853 11.0732 18.7544 11.4336 18.6816 cv
11.2285 19.5962 10.793 20.249 10.4326 20.7202 cv
10.9941 20.8569 12.5625 20.4912 13.0908 19.9321 cv
13.6729 20.334 14.6484 21.2046 15.9883 21.1104 cv
14.5508 19.9683 14.6484 18.2168 14.7559 17.7583 cv
15.8418 18.5664 17.5449 20.2598 18.3008 21.8262 cv
18.666 20.0347 18.5684 19.6367 18.4512 18.5195 cv
19.4941 18.042 20.2002 17.6196 20.8516 16.6709 cv
cp
f
47.5859 24.2993 mo
5.11328 24.2993 li
false sop
0 0 0 0 cmyk
f
0.4668 lw
47.5859 24.2993 mo
5.11328 24.2993 li
@
24.8701 27.022 mo
5.11328 27.022 li
f
24.8701 27.022 mo
5.11328 27.022 li
@
47.3721 27.022 mo
27.6143 27.022 li
f
47.3721 27.022 mo
27.6143 27.022 li
@
47.5859 29.7422 mo
5.11328 29.7422 li
f
47.5859 29.7422 mo
5.11328 29.7422 li
@
47.5859 32.4619 mo
5.26758 32.5078 li
f
47.5859 32.4619 mo
5.26758 32.5078 li
@
46.9688 37.9072 mo
5.75 37.9072 li
f
46.9688 37.9072 mo
5.75 37.9072 li
@
46.3496 40.627 mo
6.63867 40.627 li
f
46.3496 40.627 mo
6.63867 40.627 li
@
45.1133 43.3486 mo
8.01758 43.3486 li
f
45.1133 43.3486 mo
8.01758 43.3486 li
@
43.7334 46.0703 mo
9.2793 46.4961 li
f
43.7334 46.0703 mo
9.2793 46.4961 li
@
41.5635 48.792 mo
11.1367 48.792 li
f
41.5635 48.792 mo
11.1367 48.792 li
@
39.2461 51.5127 mo
13.916 51.5127 li
f
39.2461 51.5127 mo
13.916 51.5127 li
@
35.5391 54.2334 mo
17.623 54.2334 li
f
35.5391 54.2334 mo
17.623 54.2334 li
@
47.5859 35.1855 mo
5.05859 35.1855 li
f
47.5859 35.1855 mo
5.05859 35.1855 li
@
46.8691 5.49072 mo
46.8691 6.65771 46.8691 33.2197 46.8691 33.2197 cv
46.8691 47.7734 33.3984 57.0557 26.3545 57.0557 cv
19.2744 57.0557 5.73438 47.7734 5.73438 33.2197 cv
5.73438 33.2197 5.73438 6.65771 5.73438 5.49072 cv
6.90137 5.49072 45.7031 5.49072 46.8691 5.49072 cv
cp
47.4795 4.27148 mo
4.51563 4.27148 li
4.51563 33.2197 li
4.51563 48.5176 18.8555 58.2744 26.3545 58.2744 cv
33.8174 58.2744 48.0889 48.5176 48.0889 33.2197 cv
48.0889 4.27148 li
47.4795 4.27148 li
cp
true sop
0 0 0 1 nzopmsc
f
1.2183 lw
48.0254 24.0278 mo
5.67285 24.0278 li
@
18.9199 28.7891 mo
20.875 27.4751 22.4375 26.9243 23.625 27.0654 cv
24.126 27.1958 24.3516 27.5645 24.4727 28.0083 cv
23.9355 27.8716 23.3203 27.8354 22.6641 27.9189 cv
22.7227 28.519 li
23.417 28.4653 24.0469 28.5493 24.5986 28.7515 cv
24.6973 29.605 li
24.1465 29.4297 23.5049 29.376 22.8145 29.457 cv
22.8711 30.043 li
23.5811 30 24.2236 30.1089 24.7832 30.353 cv
24.8809 31.1943 li
24.3262 30.98 23.6719 30.9082 22.9629 30.9839 cv
23.0176 31.5566 li
23.7461 31.5254 24.3994 31.6616 24.9697 31.9624 cv
25.0664 32.7939 li
24.5059 32.5303 23.8389 32.4375 23.1133 32.5059 cv
23.168 33.0693 li
23.9131 33.0518 24.5752 33.2227 25.1582 33.5918 cv
25.2539 34.4131 li
24.6865 34.083 24.0059 33.9619 23.2617 34.0225 cv
23.3145 34.5781 li
24.0742 34.5771 24.748 34.7939 25.3496 35.248 cv
25.4434 36.0518 li
24.8633 35.6348 24.1699 35.4736 23.4072 35.5244 cv
23.46 36.0889 li
24.2363 36.1084 24.918 36.3818 25.5449 36.9404 cv
25.6367 37.7314 li
25.0381 37.2119 24.332 37.0068 23.5527 37.0391 cv
23.6084 37.5986 li
24.3926 37.6475 25.0811 37.9854 25.7451 38.667 cv
25.8359 39.4482 li
25.209 38.8076 24.4922 38.5479 23.7012 38.5615 cv
23.7578 39.1299 li
24.541 39.21 25.2373 39.6123 25.9492 40.4287 cv
26.0488 41.2881 li
24.3633 39.2725 22.2158 40.1553 19.7852 41.749 cv
18.2129 42.7822 16.5293 43.4512 15.3398 43.2119 cv
13.9902 29.1582 li
14.8926 29.8677 16.6543 30.311 18.9199 28.7891 cv
cp
false sop
0 0 0 0 cmyk
f
0.0359 lw
18.9199 28.7891 mo
20.875 27.4751 22.4375 26.9243 23.625 27.0654 cv
24.126 27.1958 24.3516 27.5645 24.4727 28.0083 cv
23.9355 27.8716 23.3203 27.8354 22.6641 27.9189 cv
22.7227 28.519 li
23.417 28.4653 24.0469 28.5493 24.5986 28.7515 cv
24.6973 29.605 li
24.1465 29.4297 23.5049 29.376 22.8145 29.457 cv
22.8711 30.043 li
23.5811 30 24.2236 30.1089 24.7832 30.353 cv
24.8809 31.1943 li
24.3262 30.98 23.6719 30.9082 22.9629 30.9839 cv
23.0176 31.5566 li
23.7461 31.5254 24.3994 31.6616 24.9697 31.9624 cv
25.0664 32.7939 li
24.5059 32.5303 23.8389 32.4375 23.1133 32.5059 cv
23.168 33.0693 li
23.9131 33.0518 24.5752 33.2227 25.1582 33.5918 cv
25.2539 34.4131 li
24.6865 34.083 24.0059 33.9619 23.2617 34.0225 cv
23.3145 34.5781 li
24.0742 34.5771 24.748 34.7939 25.3496 35.248 cv
25.4434 36.0518 li
24.8633 35.6348 24.1699 35.4736 23.4072 35.5244 cv
23.46 36.0889 li
24.2363 36.1084 24.918 36.3818 25.5449 36.9404 cv
25.6367 37.7314 li
25.0381 37.2119 24.332 37.0068 23.5527 37.0391 cv
23.6084 37.5986 li
24.3926 37.6475 25.0811 37.9854 25.7451 38.667 cv
25.8359 39.4482 li
25.209 38.8076 24.4922 38.5479 23.7012 38.5615 cv
23.7578 39.1299 li
24.541 39.21 25.2373 39.6123 25.9492 40.4287 cv
26.0488 41.2881 li
24.3633 39.2725 22.2158 40.1553 19.7852 41.749 cv
18.2129 42.7822 16.5293 43.4512 15.3398 43.2119 cv
13.9902 29.1582 li
14.8926 29.8677 16.6543 30.311 18.9199 28.7891 cv
cp
@
26.4727 40.4893 mo
27.2813 39.4502 28.0547 38.9512 28.9375 38.8604 cv
28.9961 38.5557 li
28.041 38.5381 27.1914 38.917 26.4834 39.8867 cv
26.499 38.917 li
27.3047 37.8838 28.125 37.3887 29.0869 37.3311 cv
29.1436 37.0322 li
28.1084 36.9873 27.2051 37.3662 26.5098 38.3369 cv
26.5254 37.3438 li
27.3242 36.3291 28.1953 35.8467 29.2354 35.8203 cv
29.2891 35.5176 li
28.1758 35.4424 27.2148 35.8193 26.5352 36.7803 cv
26.5518 35.7705 li
27.3398 34.7764 28.2676 34.3096 29.3809 34.3096 cv
29.4355 34.0166 li
28.248 33.917 27.2246 34.2842 26.5615 35.2246 cv
26.5781 34.1953 li
27.3574 33.2295 28.3379 32.7705 29.5283 32.8008 cv
29.584 32.499 li
28.3223 32.3799 27.2373 32.7451 26.5869 33.6572 cv
26.6045 32.6201 li
27.375 31.6851 28.4131 31.2329 29.6738 31.2886 cv
29.7324 30.9771 li
28.3965 30.834 27.2529 31.209 26.6133 32.0972 cv
26.6299 31.0439 li
27.3916 30.1416 28.4883 29.6929 29.8223 29.7754 cv
29.8809 29.4497 li
28.4756 29.2842 27.2734 29.6704 26.6396 30.5298 cv
26.6563 29.4688 li
27.4121 28.5972 28.5625 28.1401 29.9707 28.249 cv
30.0313 27.9121 li
28.5869 27.7285 27.3418 28.1133 26.6953 28.916 cv
26.7578 28.6548 26.9277 28.144 27.3613 27.7285 cv
27.3574 27.729 27.3535 27.7305 27.3496 27.7319 cv
28.7842 26.5254 31.2607 27.0757 33.7988 28.7817 cv
36.0684 30.3062 37.8301 29.8579 38.7314 29.147 cv
37.3828 43.2061 li
36.1914 43.4434 34.5098 42.7744 32.9355 41.7432 cv
30.4004 40.0781 28.1699 39.1904 26.4551 41.5654 cv
26.4727 40.4893 li
cp
f
26.4727 40.4893 mo
27.2813 39.4502 28.0547 38.9512 28.9375 38.8604 cv
28.9961 38.5557 li
28.041 38.5381 27.1914 38.917 26.4834 39.8867 cv
26.499 38.917 li
27.3047 37.8838 28.125 37.3887 29.0869 37.3311 cv
29.1436 37.0322 li
28.1084 36.9873 27.2051 37.3662 26.5098 38.3369 cv
26.5254 37.3438 li
27.3242 36.3291 28.1953 35.8467 29.2354 35.8203 cv
29.2891 35.5176 li
28.1758 35.4424 27.2148 35.8193 26.5352 36.7803 cv
26.5518 35.7705 li
27.3398 34.7764 28.2676 34.3096 29.3809 34.3096 cv
29.4355 34.0166 li
28.248 33.917 27.2246 34.2842 26.5615 35.2246 cv
26.5781 34.1953 li
27.3574 33.2295 28.3379 32.7705 29.5283 32.8008 cv
29.584 32.499 li
28.3223 32.3799 27.2373 32.7451 26.5869 33.6572 cv
26.6045 32.6201 li
27.375 31.6851 28.4131 31.2329 29.6738 31.2886 cv
29.7324 30.9771 li
28.3965 30.834 27.2529 31.209 26.6133 32.0972 cv
26.6299 31.0439 li
27.3916 30.1416 28.4883 29.6929 29.8223 29.7754 cv
29.8809 29.4497 li
28.4756 29.2842 27.2734 29.6704 26.6396 30.5298 cv
26.6563 29.4688 li
27.4121 28.5972 28.5625 28.1401 29.9707 28.249 cv
30.0313 27.9121 li
28.5869 27.7285 27.3418 28.1133 26.6953 28.916 cv
26.7578 28.6548 26.9277 28.144 27.3613 27.7285 cv
27.3574 27.729 27.3535 27.7305 27.3496 27.7319 cv
28.7842 26.5254 31.2607 27.0757 33.7988 28.7817 cv
36.0684 30.3062 37.8301 29.8579 38.7314 29.147 cv
37.3828 43.2061 li
36.1914 43.4434 34.5098 42.7744 32.9355 41.7432 cv
30.4004 40.0781 28.1699 39.1904 26.4551 41.5654 cv
26.4727 40.4893 li
cp
@
26.4834 47.4336 mo
25.3965 47.4336 24.4521 47.165 24.0674 46.6582 cv
25.584 46.1582 26.1201 45.3936 26.2539 44.4795 cv
26.4395 45.3809 27.1357 46.1357 28.748 46.6367 cv
28.4258 47.1572 27.585 47.4336 26.4834 47.4336 cv
cp
0 0.3 0.94 0 cmyk
f
26.4834 47.4336 mo
25.3965 47.4336 24.4521 47.165 24.0674 46.6582 cv
25.584 46.1582 26.1201 45.3936 26.2539 44.4795 cv
26.4395 45.3809 27.1357 46.1357 28.748 46.6367 cv
28.4258 47.1572 27.585 47.4336 26.4834 47.4336 cv
cp
true sop
0 0.3 0.94 0 nzopmsc
@
33.7539 43.0264 mo
32.4727 42.4111 31.1436 42.042 30.4131 42.2773 cv
30.3848 42.2764 30.3613 42.2959 30.3574 42.3242 cv
30.3555 42.3516 30.3789 42.3721 30.4072 42.376 cv
31.2188 42.3096 32.6162 42.7871 33.6582 43.3857 cv
34.0283 43.6006 34.4063 43.7783 34.7783 43.9229 cv
34.3711 43.8447 33.9961 43.7451 33.6973 43.6211 cv
32.8789 43.2783 32.252 43.0225 31.6924 42.9795 cv
31.6621 42.9775 31.6387 42.9961 31.6367 43.0244 cv
31.6309 43.0498 31.6465 43.0732 31.6748 43.0771 cv
32.25 43.2646 32.957 43.7168 33.6973 44.0527 cv
34.084 44.2266 34.5059 44.3613 34.9355 44.4639 cv
34.3584 44.415 33.877 44.3652 33.6602 44.333 cv
32.9746 44.2256 32.3691 44.1592 31.832 44.0498 cv
31.8027 44.0479 31.7744 44.0654 31.7725 44.0928 cv
31.7695 44.1211 31.7881 44.1475 31.8193 44.1484 cv
32.3672 44.3828 32.9414 44.5859 33.6973 44.8145 cv
34.1172 44.9424 34.9209 45.0771 35.7695 45.165 cv
34.9902 45.1357 34.2012 45.0928 33.6172 45.04 cv
32.7002 44.9619 31.8027 44.8291 31.1113 44.6592 cv
31.084 44.6572 31.0557 44.6748 31.0508 44.7031 cv
31.0469 44.7305 31.0684 44.7568 31.0938 44.7588 cv
31.7373 45.0928 32.6074 45.3896 33.6133 45.5361 cv
33.9355 45.582 34.3047 45.6279 34.7012 45.6689 cv
34.2402 45.665 33.8438 45.6533 33.5859 45.6318 cv
32.2988 45.5244 30.9297 45.0791 30.0479 44.7275 cv
30.0254 44.7139 29.9863 44.7178 29.9707 44.7412 cv
29.959 44.7646 29.9697 44.7969 29.9932 44.8096 cv
30.8135 45.3701 32.6855 46.1748 34.7959 46.2832 cv
30.0879 46.2715 27.1816 45.1143 26.2988 43.415 cv
25.7061 44.5537 24.4307 45.4463 22.2422 45.917 cv
23.1699 45.6201 23.9199 45.2637 24.3896 44.9443 cv
24.416 44.9287 24.4287 44.8896 24.4131 44.8623 cv
24.3965 44.835 24.3525 44.8301 24.3281 44.8447 cv
23.2832 45.2607 21.6699 45.7881 20.1543 45.9131 cv
19.8496 45.9365 19.3799 45.9512 18.833 45.9561 cv
19.3018 45.9082 19.7363 45.8545 20.1172 45.7998 cv
21.3037 45.626 22.335 45.2783 23.0879 44.8828 cv
23.1211 44.8818 23.1445 44.8477 23.1416 44.8145 cv
23.1367 44.7842 23.1025 44.7617 23.0693 44.7646 cv
22.2559 44.9639 21.1953 45.1182 20.1133 45.2178 cv
19.4307 45.2764 18.5039 45.3271 17.5879 45.3604 cv
18.585 45.2568 19.5273 45.0986 20.0205 44.9492 cv
20.9121 44.6826 21.5889 44.4404 22.2373 44.1631 cv
22.2705 44.1592 22.2969 44.1318 22.2949 44.0986 cv
22.2891 44.0654 22.2559 44.042 22.2227 44.0459 cv
21.5859 44.1748 20.8721 44.2549 20.0684 44.3799 cv
19.8125 44.4189 19.2412 44.4785 18.5596 44.5342 cv
19.0664 44.415 19.5664 44.2559 20.0205 44.0498 cv
20.8945 43.6553 21.7266 43.1211 22.4063 42.8994 cv
22.4395 42.8975 22.4561 42.8721 22.4531 42.8379 cv
22.4531 42.8379 22.4531 42.8379 22.4531 42.8369 cv
22.4648 42.8467 22.4785 42.8516 22.4961 42.8506 cv
22.5283 42.8467 22.5508 42.8164 22.5488 42.7842 cv
22.5439 42.7529 22.5156 42.7295 22.4824 42.7334 cv
22.4521 42.7344 22.4297 42.7646 22.4316 42.7959 cv
22.4336 42.8115 22.4395 42.8213 22.4492 42.8311 cv
22.4395 42.8037 22.4141 42.7842 22.3857 42.7871 cv
21.7266 42.835 20.9863 43.1367 20.0205 43.542 cv
19.6719 43.6885 19.2295 43.8037 18.752 43.8955 cv
19.1895 43.7256 19.6348 43.5166 20.0703 43.2646 cv
21.2949 42.5596 22.9434 41.9971 23.9014 42.0742 cv
23.9316 42.0703 23.9609 42.043 23.959 42.0107 cv
23.9551 41.9814 23.9268 41.9531 23.8945 41.958 cv
23.0322 41.6807 21.4668 42.1143 19.9551 42.8389 cv
17.5215 44.0107 15.3926 43.8213 15.0527 43.3447 cv
15.0684 43.3408 li
15.4473 43.7256 17.5645 43.5996 19.9727 42.4404 cv
23.0449 40.9639 24.4316 40.5127 26.3486 43.0928 cv
26.3584 43.1162 li
26.3584 43.1045 li
28.2783 40.5107 29.6641 40.9609 32.7432 42.4404 cv
35.2441 43.6445 36.709 43.7217 37.4629 43.29 cv
37.5938 43.3252 li
37.0029 43.6865 35.498 43.8662 33.7539 43.0264 cv
cp
false sop
0 0.3 0.94 0 cmyk
f
33.7539 43.0264 mo
32.4727 42.4111 31.1436 42.042 30.4131 42.2773 cv
30.3848 42.2764 30.3613 42.2959 30.3574 42.3242 cv
30.3555 42.3516 30.3789 42.3721 30.4072 42.376 cv
31.2188 42.3096 32.6162 42.7871 33.6582 43.3857 cv
34.0283 43.6006 34.4063 43.7783 34.7783 43.9229 cv
34.3711 43.8447 33.9961 43.7451 33.6973 43.6211 cv
32.8789 43.2783 32.252 43.0225 31.6924 42.9795 cv
31.6621 42.9775 31.6387 42.9961 31.6367 43.0244 cv
31.6309 43.0498 31.6465 43.0732 31.6748 43.0771 cv
32.25 43.2646 32.957 43.7168 33.6973 44.0527 cv
34.084 44.2266 34.5059 44.3613 34.9355 44.4639 cv
34.3584 44.415 33.877 44.3652 33.6602 44.333 cv
32.9746 44.2256 32.3691 44.1592 31.832 44.0498 cv
31.8027 44.0479 31.7744 44.0654 31.7725 44.0928 cv
31.7695 44.1211 31.7881 44.1475 31.8193 44.1484 cv
32.3672 44.3828 32.9414 44.5859 33.6973 44.8145 cv
34.1172 44.9424 34.9209 45.0771 35.7695 45.165 cv
34.9902 45.1357 34.2012 45.0928 33.6172 45.04 cv
32.7002 44.9619 31.8027 44.8291 31.1113 44.6592 cv
31.084 44.6572 31.0557 44.6748 31.0508 44.7031 cv
31.0469 44.7305 31.0684 44.7568 31.0938 44.7588 cv
31.7373 45.0928 32.6074 45.3896 33.6133 45.5361 cv
33.9355 45.582 34.3047 45.6279 34.7012 45.6689 cv
34.2402 45.665 33.8438 45.6533 33.5859 45.6318 cv
32.2988 45.5244 30.9297 45.0791 30.0479 44.7275 cv
30.0254 44.7139 29.9863 44.7178 29.9707 44.7412 cv
29.959 44.7646 29.9697 44.7969 29.9932 44.8096 cv
30.8135 45.3701 32.6855 46.1748 34.7959 46.2832 cv
30.0879 46.2715 27.1816 45.1143 26.2988 43.415 cv
25.7061 44.5537 24.4307 45.4463 22.2422 45.917 cv
23.1699 45.6201 23.9199 45.2637 24.3896 44.9443 cv
24.416 44.9287 24.4287 44.8896 24.4131 44.8623 cv
24.3965 44.835 24.3525 44.8301 24.3281 44.8447 cv
23.2832 45.2607 21.6699 45.7881 20.1543 45.9131 cv
19.8496 45.9365 19.3799 45.9512 18.833 45.9561 cv
19.3018 45.9082 19.7363 45.8545 20.1172 45.7998 cv
21.3037 45.626 22.335 45.2783 23.0879 44.8828 cv
23.1211 44.8818 23.1445 44.8477 23.1416 44.8145 cv
23.1367 44.7842 23.1025 44.7617 23.0693 44.7646 cv
22.2559 44.9639 21.1953 45.1182 20.1133 45.2178 cv
19.4307 45.2764 18.5039 45.3271 17.5879 45.3604 cv
18.585 45.2568 19.5273 45.0986 20.0205 44.9492 cv
20.9121 44.6826 21.5889 44.4404 22.2373 44.1631 cv
22.2705 44.1592 22.2969 44.1318 22.2949 44.0986 cv
22.2891 44.0654 22.2559 44.042 22.2227 44.0459 cv
21.5859 44.1748 20.8721 44.2549 20.0684 44.3799 cv
19.8125 44.4189 19.2412 44.4785 18.5596 44.5342 cv
19.0664 44.415 19.5664 44.2559 20.0205 44.0498 cv
20.8945 43.6553 21.7266 43.1211 22.4063 42.8994 cv
22.4395 42.8975 22.4561 42.8721 22.4531 42.8379 cv
22.4531 42.8379 22.4531 42.8379 22.4531 42.8369 cv
22.4648 42.8467 22.4785 42.8516 22.4961 42.8506 cv
22.5283 42.8467 22.5508 42.8164 22.5488 42.7842 cv
22.5439 42.7529 22.5156 42.7295 22.4824 42.7334 cv
22.4521 42.7344 22.4297 42.7646 22.4316 42.7959 cv
22.4336 42.8115 22.4395 42.8213 22.4492 42.8311 cv
22.4395 42.8037 22.4141 42.7842 22.3857 42.7871 cv
21.7266 42.835 20.9863 43.1367 20.0205 43.542 cv
19.6719 43.6885 19.2295 43.8037 18.752 43.8955 cv
19.1895 43.7256 19.6348 43.5166 20.0703 43.2646 cv
21.2949 42.5596 22.9434 41.9971 23.9014 42.0742 cv
23.9316 42.0703 23.9609 42.043 23.959 42.0107 cv
23.9551 41.9814 23.9268 41.9531 23.8945 41.958 cv
23.0322 41.6807 21.4668 42.1143 19.9551 42.8389 cv
17.5215 44.0107 15.3926 43.8213 15.0527 43.3447 cv
15.0684 43.3408 li
15.4473 43.7256 17.5645 43.5996 19.9727 42.4404 cv
23.0449 40.9639 24.4316 40.5127 26.3486 43.0928 cv
26.3584 43.1162 li
26.3584 43.1045 li
28.2783 40.5107 29.6641 40.9609 32.7432 42.4404 cv
35.2441 43.6445 36.709 43.7217 37.4629 43.29 cv
37.5938 43.3252 li
37.0029 43.6865 35.498 43.8662 33.7539 43.0264 cv
cp
true sop
0 0.3 0.94 0 nzopmsc
@
14.1172 41.7354 mo
13.1406 34.8887 li
13.1357 34.8604 13.1113 34.8408 13.083 34.8438 cv
13.0527 34.8467 13.0332 34.8721 13.0352 34.9014 cv
13.4648 40.7217 li
12.584 34.335 li
12.582 34.3145 12.5664 34.3008 12.5479 34.2949 cv
12.5693 34.2842 12.584 34.2646 12.584 34.2373 cv
12.5703 34.124 li
12.5674 34.0918 12.5391 34.0664 12.5068 34.0713 cv
12.4727 34.0732 12.4502 34.1045 12.4541 34.1367 cv
12.4668 34.252 li
12.4688 34.2764 12.4873 34.292 12.5098 34.2988 cv
12.4922 34.3076 12.4785 34.3232 12.4814 34.3447 cv
12.8477 40.2861 li
11.9854 33.3213 li
11.9824 33.293 11.957 33.2725 11.9287 33.2764 cv
11.8994 33.2783 11.8789 33.3037 11.8818 33.3311 cv
12.2363 39.9404 li
11.4844 32.2695 li
12.1895 31.689 13.0176 30.686 13.4395 29.7437 cv
14.8496 42.6123 li
13.6914 35.1182 li
13.6895 35.0889 13.666 35.0684 13.6367 35.0703 cv
13.6055 35.0752 13.585 35.0996 13.5898 35.1279 cv
14.1172 41.7354 li
cp
false sop
0 0.3 0.94 0 cmyk
f
14.1172 41.7354 mo
13.1406 34.8887 li
13.1357 34.8604 13.1113 34.8408 13.083 34.8438 cv
13.0527 34.8467 13.0332 34.8721 13.0352 34.9014 cv
13.4648 40.7217 li
12.584 34.335 li
12.582 34.3145 12.5664 34.3008 12.5479 34.2949 cv
12.5693 34.2842 12.584 34.2646 12.584 34.2373 cv
12.5703 34.124 li
12.5674 34.0918 12.5391 34.0664 12.5068 34.0713 cv
12.4727 34.0732 12.4502 34.1045 12.4541 34.1367 cv
12.4668 34.252 li
12.4688 34.2764 12.4873 34.292 12.5098 34.2988 cv
12.4922 34.3076 12.4785 34.3232 12.4814 34.3447 cv
12.8477 40.2861 li
11.9854 33.3213 li
11.9824 33.293 11.957 33.2725 11.9287 33.2764 cv
11.8994 33.2783 11.8789 33.3037 11.8818 33.3311 cv
12.2363 39.9404 li
11.4844 32.2695 li
12.1895 31.689 13.0176 30.686 13.4395 29.7437 cv
14.8496 42.6123 li
13.6914 35.1182 li
13.6895 35.0889 13.666 35.0684 13.6367 35.0703 cv
13.6055 35.0752 13.585 35.0996 13.5898 35.1279 cv
14.1172 41.7354 li
cp
true sop
0 0.3 0.94 0 nzopmsc
@
40.3047 40.9736 mo
40.3203 37.832 li
40.3232 37.8154 40.2979 37.8008 40.2676 37.8008 cv
40.2354 37.8008 40.2109 37.8193 40.207 37.8369 cv
39.666 42.2314 li
39.7354 38.5205 li
39.7354 38.5068 39.7207 38.4971 39.6992 38.4932 cv
39.7246 38.4893 39.7441 38.4775 39.7461 38.46 cv
39.752 38.3877 li
39.7568 38.3652 39.7275 38.3506 39.6914 38.3525 cv
39.6592 38.3525 39.6289 38.3701 39.627 38.3916 cv
39.6182 38.4639 li
39.6182 38.4795 39.6367 38.4912 39.6621 38.4951 cv
39.6406 38.499 39.625 38.5098 39.623 38.5234 cv
39.0283 42.6045 li
39.1719 38.916 li
39.1758 38.8994 39.1523 38.8818 39.1191 38.8838 cv
39.0889 38.8857 39.0625 38.9014 39.0625 38.9189 cv
38.376 43.5469 li
38.5957 39.1084 li
38.5977 39.0908 38.5752 39.0771 38.543 39.0771 cv
38.5117 39.0801 38.4844 39.0947 38.4824 39.1104 cv
37.8496 42.4287 li
39.2363 29.7593 li
39.6504 30.686 40.4561 31.6699 41.1543 32.2549 cv
40.3047 40.9736 li
cp
false sop
0 0.3 0.94 0 cmyk
f
40.3047 40.9736 mo
40.3203 37.832 li
40.3232 37.8154 40.2979 37.8008 40.2676 37.8008 cv
40.2354 37.8008 40.2109 37.8193 40.207 37.8369 cv
39.666 42.2314 li
39.7354 38.5205 li
39.7354 38.5068 39.7207 38.4971 39.6992 38.4932 cv
39.7246 38.4893 39.7441 38.4775 39.7461 38.46 cv
39.752 38.3877 li
39.7568 38.3652 39.7275 38.3506 39.6914 38.3525 cv
39.6592 38.3525 39.6289 38.3701 39.627 38.3916 cv
39.6182 38.4639 li
39.6182 38.4795 39.6367 38.4912 39.6621 38.4951 cv
39.6406 38.499 39.625 38.5098 39.623 38.5234 cv
39.0283 42.6045 li
39.1719 38.916 li
39.1758 38.8994 39.1523 38.8818 39.1191 38.8838 cv
39.0889 38.8857 39.0625 38.9014 39.0625 38.9189 cv
38.376 43.5469 li
38.5957 39.1084 li
38.5977 39.0908 38.5752 39.0771 38.543 39.0771 cv
38.5117 39.0801 38.4844 39.0947 38.4824 39.1104 cv
37.8496 42.4287 li
39.2363 29.7593 li
39.6504 30.686 40.4561 31.6699 41.1543 32.2549 cv
40.3047 40.9736 li
cp
true sop
0 0.3 0.94 0 nzopmsc
@
30.9902 44.7139 mo
31.0166 44.7178 31.0449 44.6963 31.0488 44.6689 cv
31.0488 44.6416 31.0293 44.6162 31.0039 44.6123 cv
30.9727 44.6104 30.9492 44.6299 30.9453 44.6572 cv
30.9434 44.6846 30.9629 44.708 30.9902 44.7139 cv
cp
0 0 0 1 nzopmsc
f
30.9072 44.6572 mo
30.9355 44.6611 30.959 44.6396 30.9629 44.6123 cv
30.9648 44.5869 30.9453 44.5605 30.918 44.5557 cv
30.8906 44.5547 30.8672 44.5732 30.8613 44.6025 cv
30.8594 44.6299 30.8789 44.6553 30.9072 44.6572 cv
cp
f
30.7686 44.5322 mo
30.7979 44.5361 30.8223 44.5166 30.8262 44.4873 cv
30.8281 44.46 30.8066 44.4346 30.7793 44.4326 cv
30.75 44.4307 30.7295 44.4502 30.7246 44.4766 cv
30.7227 44.5049 30.7402 44.5283 30.7686 44.5322 cv
cp
f
29.8916 44.6006 mo
29.8643 44.5967 29.8379 44.6162 29.8369 44.6436 cv
29.835 44.6729 29.8545 44.6963 29.8818 44.7002 cv
29.9102 44.7002 29.9346 44.6826 29.9375 44.6533 cv
29.9385 44.627 29.918 44.6025 29.8916 44.6006 cv
cp
f
29.7266 44.4873 mo
29.6992 44.4844 29.6738 44.5049 29.668 44.5322 cv
29.668 44.5605 29.6875 44.5869 29.7148 44.5898 cv
29.7432 44.5928 29.7676 44.5693 29.7705 44.5439 cv
29.7744 44.5166 29.7529 44.4912 29.7266 44.4873 cv
cp
f
31.5879 43.0225 mo
31.6133 43.0244 31.6387 43.0039 31.6406 42.9756 cv
31.6426 42.9502 31.624 42.9248 31.5977 42.9219 cv
31.5703 42.9189 31.5469 42.9385 31.541 42.9658 cv
31.541 42.9941 31.5586 43.0186 31.5879 43.0225 cv
cp
f
31.4063 42.9941 mo
31.4355 42.9961 31.459 42.9756 31.4609 42.9482 cv
31.4629 42.9229 31.4453 42.8955 31.417 42.8936 cv
31.3887 42.8906 31.3652 42.9121 31.3633 42.9385 cv
31.3594 42.9658 31.3789 42.9902 31.4063 42.9941 cv
cp
f
31.1465 42.9941 mo
31.1738 42.9961 31.2002 42.9756 31.2021 42.9482 cv
31.2031 42.9219 31.1855 42.8955 31.1563 42.8936 cv
31.1309 42.8906 31.1055 42.9092 31.1016 42.9375 cv
31.0996 42.9658 31.1211 42.9902 31.1465 42.9941 cv
cp
f
31.5977 44.0059 mo
31.5957 44.0342 31.6133 44.0596 31.6406 44.0635 cv
31.6719 44.0654 31.6953 44.0459 31.6982 44.0166 cv
31.7012 43.9912 31.6816 43.9639 31.6523 43.9619 cv
31.624 43.96 31.6016 43.9785 31.5977 44.0059 cv
cp
f
31.4063 43.9775 mo
31.4355 43.9795 31.459 43.9619 31.4609 43.9326 cv
31.4629 43.9072 31.4453 43.8799 31.417 43.8779 cv
31.3887 43.876 31.3652 43.8955 31.3633 43.9229 cv
31.3594 43.9521 31.3789 43.9746 31.4063 43.9775 cv
cp
f
30.2266 42.2842 mo
30.1992 42.2813 30.1738 42.2998 30.1719 42.3271 cv
30.168 42.3545 30.1865 42.3818 30.2148 42.3848 cv
30.2422 42.3877 30.2656 42.3662 30.2695 42.3389 cv
30.2715 42.3135 30.252 42.2861 30.2266 42.2842 cv
cp
f
29.9619 42.3701 mo
29.9346 42.3662 29.9102 42.3877 29.9063 42.4131 cv
29.9043 42.4404 29.9229 42.4658 29.9541 42.4688 cv
29.9775 42.4727 30.002 42.4521 30.0039 42.4238 cv
30.0098 42.3955 29.9883 42.3721 29.9619 42.3701 cv
cp
f
23.1738 44.7139 mo
23.1426 44.7178 23.1191 44.7451 23.1211 44.7783 cv
23.126 44.8115 23.1523 44.835 23.1875 44.8301 cv
23.2188 44.8291 23.2402 44.7969 23.2383 44.7646 cv
23.2344 44.7334 23.207 44.708 23.1738 44.7139 cv
cp
f
23.2715 44.6475 mo
23.2402 44.6514 23.2188 44.6807 23.2188 44.7139 cv
23.2246 44.7441 23.252 44.7686 23.2871 44.7646 cv
23.3174 44.7627 23.3418 44.7334 23.3379 44.7002 cv
23.3311 44.6689 23.3047 44.6436 23.2715 44.6475 cv
cp
f
23.4365 44.501 mo
23.4023 44.5039 23.3809 44.5342 23.3828 44.5635 cv
23.3867 44.5986 23.4141 44.6221 23.4482 44.6182 cv
23.4805 44.6162 23.5039 44.5869 23.5 44.5518 cv
23.498 44.5225 23.4697 44.4971 23.4365 44.501 cv
cp
f
24.4844 44.6963 mo
24.4492 44.7002 24.4277 44.7295 24.4277 44.7607 cv
24.4336 44.7939 24.4629 44.8193 24.4961 44.8145 cv
24.5273 44.8125 24.5508 44.7822 24.5469 44.749 cv
24.5449 44.7178 24.5137 44.6924 24.4844 44.6963 cv
cp
f
24.6777 44.5654 mo
24.6445 44.5674 24.624 44.6006 24.626 44.6299 cv
24.6289 44.6631 24.6582 44.6885 24.6914 44.6836 cv
24.7236 44.6807 24.7461 44.6514 24.7422 44.6182 cv
24.7383 44.5879 24.7109 44.5615 24.6777 44.5654 cv
cp
f
22.6826 42.6865 mo
22.6523 42.6885 22.6289 42.7197 22.6289 42.75 cv
22.6348 42.7842 22.6641 42.8076 22.6973 42.8037 cv
22.7305 42.8008 22.7529 42.7725 22.748 42.7393 cv
22.7441 42.7061 22.7178 42.6826 22.6826 42.6865 cv
cp
f
22.9902 42.6865 mo
22.959 42.6885 22.9365 42.7197 22.9365 42.75 cv
22.9395 42.7842 22.9688 42.8057 23.0049 42.8037 cv
23.0352 42.7998 23.0566 42.7725 23.0557 42.7393 cv
23.0508 42.7061 23.0254 42.6826 22.9902 42.6865 cv
cp
f
22.4063 43.9463 mo
22.374 43.9502 22.3516 43.9775 22.3535 44.0107 cv
22.3574 44.0439 22.3848 44.0674 22.4189 44.0654 cv
22.4492 44.0596 22.4727 44.0303 22.4707 43.999 cv
22.4668 43.9658 22.4395 43.9424 22.4063 43.9463 cv
cp
f
22.6826 43.8486 mo
22.6523 43.8516 22.6289 43.8799 22.6289 43.9131 cv
22.6348 43.9463 22.6641 43.9678 22.6973 43.9658 cv
22.7305 43.9619 22.7529 43.9326 22.748 43.8994 cv
22.7441 43.8682 22.7178 43.8447 22.6826 43.8486 cv
cp
f
24.0889 41.9678 mo
24.0586 41.9697 24.0352 42.001 24.0371 42.0303 cv
24.04 42.0654 24.0684 42.0889 24.1035 42.084 cv
24.1348 42.0811 24.1582 42.0527 24.1563 42.0186 cv
24.1514 41.9893 24.1221 41.9639 24.0889 41.9678 cv
cp
f
24.4668 42.1201 mo
24.4629 42.0889 24.4336 42.0654 24.4014 42.0693 cv
24.3672 42.0713 24.3447 42.1016 24.3457 42.1318 cv
24.3516 42.165 24.3809 42.1885 24.4131 42.1865 cv
24.4453 42.1836 24.4688 42.1533 24.4668 42.1201 cv
cp
f
39.7188 37.9375 mo
39.6846 37.9385 39.6523 37.9561 39.6523 37.9775 cv
39.6504 37.9961 39.6777 38.0117 39.7129 38.0117 cv
39.748 38.0088 39.7773 37.9941 39.7813 37.9717 cv
39.7813 37.9541 39.7539 37.9375 39.7188 37.9375 cv
cp
f
39.7373 37.7412 mo
39.7031 37.7412 39.6709 37.7588 39.6709 37.7803 cv
39.668 37.8018 39.6963 37.8154 39.7285 37.8154 cv
39.7637 37.8154 39.793 37.7998 39.7969 37.7764 cv
39.7969 37.7588 39.7695 37.7412 39.7373 37.7412 cv
cp
f
39.7168 38.1172 mo
39.6816 38.1191 39.6504 38.1357 39.6504 38.1572 cv
39.6426 38.2295 li
39.6406 38.25 39.668 38.2646 39.7031 38.2646 cv
39.7373 38.2646 39.7676 38.2451 39.7676 38.2275 cv
39.7773 38.1514 li
39.7793 38.1328 39.752 38.1172 39.7168 38.1172 cv
cp
f
38.6055 38.6895 mo
38.5723 38.6914 38.543 38.71 38.5391 38.7295 cv
38.5391 38.751 38.5664 38.7666 38.6016 38.7646 cv
38.6338 38.7627 38.6641 38.7471 38.666 38.7256 cv
38.668 38.7051 38.6416 38.6895 38.6055 38.6895 cv
cp
f
38.5879 38.8799 mo
38.5527 38.8818 38.5215 38.8994 38.5215 38.9209 cv
38.5137 38.9932 li
38.5137 39.0127 38.5391 39.0303 38.5752 39.0283 cv
38.6094 39.0283 38.6406 39.0117 38.6416 38.9912 cv
38.6484 38.917 li
38.6494 38.8975 38.6211 38.8799 38.5879 38.8799 cv
cp
f
39.1563 38.5518 mo
39.124 38.5518 39.0928 38.5674 39.0898 38.5879 cv
39.0879 38.6074 39.1152 38.625 39.1504 38.625 cv
39.1855 38.623 39.2158 38.6064 39.2158 38.5859 cv
39.2188 38.5654 39.1914 38.5488 39.1563 38.5518 cv
cp
f
39.1895 38.3213 mo
39.1543 38.3232 39.125 38.3408 39.124 38.3604 cv
39.1211 38.3818 39.1465 38.3984 39.1836 38.3965 cv
39.2188 38.3955 39.2461 38.3779 39.249 38.3584 cv
39.252 38.3389 39.2246 38.3213 39.1895 38.3213 cv
cp
f
39.1504 38.6787 mo
39.1152 38.6787 39.0859 38.6963 39.084 38.7178 cv
39.0781 38.792 li
39.0762 38.8125 39.1016 38.8271 39.1357 38.8262 cv
39.1719 38.8242 39.2031 38.8096 39.2051 38.7891 cv
39.2109 38.7158 li
39.2129 38.6943 39.1836 38.6787 39.1504 38.6787 cv
cp
f
40.3281 37.3701 mo
40.293 37.3721 40.2627 37.3877 40.2598 37.4092 cv
40.2598 37.4297 40.2871 37.4443 40.3193 37.4443 cv
40.3555 37.4443 40.3867 37.4258 40.3887 37.4053 cv
40.3906 37.3848 40.3623 37.3682 40.3281 37.3701 cv
cp
f
40.3037 37.6182 mo
40.2695 37.6201 40.2373 37.6377 40.2373 37.6572 cv
40.2314 37.7314 li
40.2314 37.752 40.2549 37.7686 40.291 37.7676 cv
40.3242 37.7666 40.3525 37.749 40.3555 37.7295 cv
40.3643 37.6553 li
40.3662 37.6338 40.3369 37.6182 40.3037 37.6182 cv
cp
f
40.3447 37.1631 mo
40.3096 37.1641 40.2813 37.1836 40.2773 37.2021 cv
40.2773 37.2236 40.3037 37.2393 40.3369 37.2393 cv
40.373 37.2373 40.4023 37.2188 40.4043 37.1982 cv
40.4043 37.1807 40.377 37.1631 40.3447 37.1631 cv
cp
f
40.3262 37.4639 mo
40.291 37.4648 40.2598 37.4814 40.2598 37.499 cv
40.2529 37.5762 li
40.252 37.5967 40.2773 37.6113 40.3115 37.6113 cv
40.3467 37.6084 40.377 37.5947 40.377 37.5732 cv
40.3867 37.498 li
40.3887 37.4795 40.3613 37.4639 40.3262 37.4639 cv
cp
f
12.4785 33.5527 mo
12.5098 33.5498 12.5332 33.5205 12.5313 33.4863 cv
12.5273 33.4561 12.498 33.4307 12.4648 33.4355 cv
12.4336 33.4385 12.4102 33.4678 12.4121 33.499 cv
12.418 33.5313 12.4443 33.5566 12.4785 33.5527 cv
cp
f
12.498 33.1768 mo
12.4941 33.1436 12.4648 33.1221 12.4316 33.124 cv
12.4004 33.1279 12.377 33.1563 12.3809 33.1895 cv
12.3857 33.2217 12.4121 33.2471 12.4453 33.2432 cv
12.4775 33.2393 12.5 33.208 12.498 33.1768 cv
cp
f
12.4814 33.7207 mo
12.4492 33.7236 12.4258 33.7529 12.4297 33.7871 cv
12.4424 33.9014 li
12.4453 33.9346 12.4746 33.958 12.5068 33.9541 cv
12.54 33.9502 12.5605 33.9209 12.5596 33.8877 cv
12.5469 33.7744 li
12.543 33.7412 12.5156 33.7168 12.4814 33.7207 cv
cp
f
13.625 34.5322 mo
13.6211 34.501 13.5938 34.4766 13.5605 34.4795 cv
13.5293 34.4834 13.5049 34.5146 13.5078 34.5439 cv
13.5117 34.5781 13.541 34.6025 13.5742 34.5986 cv
13.6074 34.5967 13.6289 34.5635 13.625 34.5322 cv
cp
f
13.6729 34.9502 mo
13.6572 34.8369 li
13.6553 34.8037 13.625 34.7813 13.5938 34.7842 cv
13.5625 34.7881 13.5391 34.8174 13.541 34.8486 cv
13.5537 34.9639 li
13.5566 34.999 13.5859 35.0205 13.6182 35.0166 cv
13.6514 35.0146 13.6758 34.9834 13.6729 34.9502 cv
cp
f
13.0488 34.4521 mo
13.084 34.4482 13.1064 34.4189 13.1045 34.3857 cv
13.0996 34.3545 13.0703 34.3301 13.0391 34.334 cv
13.0059 34.3369 12.9824 34.3662 12.9844 34.3975 cv
12.9883 34.4307 13.0166 34.4561 13.0488 34.4521 cv
cp
f
13.0547 34.0264 mo
13.0488 33.9951 13.0205 33.9707 12.9883 33.9756 cv
12.9561 33.9756 12.9336 34.0068 12.9355 34.0381 cv
12.9385 34.0713 12.9688 34.0947 13.002 34.0908 cv
13.0342 34.0879 13.0566 34.0586 13.0547 34.0264 cv
cp
f
13.0547 34.5381 mo
13.0215 34.542 12.998 34.5713 13.002 34.6035 cv
13.0137 34.7197 li
13.0166 34.7529 13.0459 34.7764 13.0801 34.7725 cv
13.1113 34.7705 13.1338 34.7393 13.1309 34.7061 cv
13.1191 34.5928 li
13.1162 34.5576 13.0879 34.5342 13.0547 34.5381 cv
cp
f
11.8652 32.7324 mo
11.8965 32.7295 11.9209 32.6982 11.918 32.667 cv
11.915 32.6357 11.8867 32.6123 11.8535 32.6143 cv
11.8203 32.6182 11.7979 32.6484 11.7998 32.6787 cv
11.8037 32.7119 11.832 32.7373 11.8652 32.7324 cv
cp
f
11.8955 33.0088 mo
11.8643 33.0107 11.8398 33.042 11.8438 33.0742 cv
11.8545 33.1904 li
11.8584 33.2217 11.8867 33.2471 11.918 33.2432 cv
11.9531 33.2393 11.9746 33.208 11.9727 33.1768 cv
11.9609 33.0615 li
11.957 33.0283 11.9277 33.0049 11.8955 33.0088 cv
cp
f
11.8867 32.3398 mo
11.8828 32.3086 11.8535 32.2852 11.8203 32.2876 cv
11.7891 32.291 11.7646 32.3203 11.7686 32.3516 cv
11.7715 32.3838 11.7998 32.4092 11.832 32.4033 cv
11.8652 32.4023 11.8887 32.373 11.8867 32.3398 cv
cp
f
11.8867 32.9951 mo
11.918 32.9932 11.9434 32.9639 11.9395 32.9326 cv
11.9277 32.8174 li
11.9248 32.7842 11.8955 32.7578 11.8633 32.7617 cv
11.8301 32.7646 11.8066 32.7959 11.8105 32.8291 cv
11.8213 32.9443 li
11.8262 32.9775 11.8545 32.999 11.8867 32.9951 cv
cp
f
22.2832 28.5483 mo
22.2227 27.9727 li
21.7305 28.0713 21.2227 28.2354 20.707 28.4692 cv
20.7598 28.9644 li
21.2881 28.7559 21.7969 28.6211 22.2832 28.5483 cv
cp
f
15.0801 30.2031 mo
14.9023 30.1523 14.7285 30.0859 14.5557 30.0122 cv
14.5811 30.2603 li
14.7402 30.3286 14.916 30.3911 15.1016 30.4448 cv
15.0801 30.2031 li
cp
f
15.9658 30.6021 mo
15.9424 30.3501 li
15.7969 30.3408 15.6543 30.3286 15.5098 30.3057 cv
15.5313 30.5444 li
15.6738 30.5718 15.8184 30.5903 15.9658 30.6021 cv
cp
f
18.7305 30.0161 mo
18.6992 29.6909 li
18.3105 29.918 17.8945 30.0879 17.457 30.2036 cv
17.4863 30.5005 li
17.8945 30.4038 18.3105 30.2456 18.7305 30.0161 cv
cp
f
20.3516 29.1362 mo
20.3047 28.6602 li
19.9258 28.8628 19.5449 29.1025 19.1719 29.3867 cv
19.1465 29.4053 19.1211 29.4165 19.0957 29.4365 cv
19.1309 29.7925 li
19.5469 29.5327 19.9561 29.314 20.3516 29.1362 cv
cp
f
17.0723 30.5796 mo
17.0469 30.3032 li
16.8213 30.3408 16.5938 30.3701 16.3652 30.3745 cv
16.3887 30.6226 li
16.6113 30.6226 16.8379 30.6133 17.0723 30.5796 cv
cp
f
19.2393 30.9268 mo
19.2734 31.2798 li
19.6953 31.0269 20.1016 30.8149 20.5 30.6382 cv
20.4551 30.1733 li
20.0508 30.3813 19.6445 30.624 19.2461 30.9219 cv
19.2432 30.9248 19.2422 30.9258 19.2393 30.9268 cv
cp
f
17.6309 31.9907 mo
18.0381 31.8896 18.4561 31.7256 18.874 31.4985 cv
18.8438 31.1772 li
18.4609 31.4063 18.043 31.5835 17.6035 31.7046 cv
17.6309 31.9907 li
cp
f
15.6816 32.0864 mo
15.8223 32.1084 15.9658 32.1226 16.1152 32.1309 cv
16.0918 31.8833 li
15.9492 31.8774 15.8037 31.8706 15.6602 31.8525 cv
15.6816 32.0864 li
cp
f
20.9033 30.4819 mo
21.4355 30.2764 21.9512 30.124 22.4297 30.0552 cv
22.374 29.5029 li
21.8828 29.5962 21.373 29.7681 20.8574 29.9971 cv
20.9033 30.4819 li
cp
f
16.5371 32.1387 mo
16.7578 32.1309 16.9844 32.1152 17.2178 32.0771 cv
17.1934 31.812 li
16.9707 31.8535 16.7432 31.8853 16.5127 31.896 cv
16.5371 32.1387 li
cp
f
15.2324 31.7632 mo
15.0547 31.7197 14.8809 31.6602 14.709 31.5933 cv
14.7334 31.8384 li
14.8926 31.9023 15.0664 31.9536 15.2539 32 cv
15.2324 31.7632 li
cp
f
15.832 33.624 mo
15.9727 33.6445 16.1152 33.6523 16.2637 33.6572 cv
16.2402 33.417 li
16.0957 33.4141 15.9531 33.4141 15.8105 33.3975 cv
15.832 33.624 li
cp
f
16.6836 33.6514 mo
16.9043 33.6416 17.1328 33.6172 17.3633 33.5732 cv
17.3398 33.3213 li
17.1152 33.3701 16.8896 33.3975 16.6611 33.4141 cv
16.6836 33.6514 li
cp
f
21.0488 31.978 mo
21.583 31.7729 22.0996 31.6182 22.5752 31.5542 cv
22.5234 31.0093 li
22.0322 31.1021 21.5215 31.2788 21.0039 31.5054 cv
21.0488 31.978 li
cp
f
19.4209 32.7627 mo
19.8418 32.5166 20.25 32.3086 20.6436 32.1348 cv
20.6016 31.6841 li
20.1943 31.8887 19.7891 32.1265 19.3857 32.417 cv
19.4209 32.7627 li
cp
f
17.7773 33.4824 mo
18.1836 33.375 18.6016 33.208 19.0195 32.9814 cv
18.9883 32.6621 li
18.6094 32.8945 18.1904 33.0781 17.748 33.208 cv
17.7773 33.4824 li
cp
f
15.3828 33.3232 mo
15.2051 33.2861 15.0332 33.2334 14.8643 33.1729 cv
14.8887 33.417 li
15.0449 33.4717 15.2197 33.5195 15.4072 33.5586 cv
15.3828 33.3232 li
cp
f
21.1963 33.4717 mo
21.7344 33.2666 22.249 33.126 22.7217 33.0703 cv
22.6699 32.5303 li
22.1816 32.6162 21.6719 32.7871 21.1504 33.0107 cv
21.1963 33.4717 li
cp
f
16.8086 34.9346 mo
16.832 35.165 li
17.0518 35.1465 17.2773 35.1172 17.5098 35.0693 cv
17.4863 34.8271 li
17.2637 34.876 17.0352 34.9111 16.8086 34.9346 cv
cp
f
17.8955 34.71 mo
17.9209 34.9736 li
18.3262 34.8604 18.7432 34.6904 19.1631 34.4639 cv
19.1328 34.1514 li
18.7568 34.3838 18.3398 34.5732 17.8955 34.71 cv
cp
f
20.749 33.1943 mo
20.3438 33.3955 19.9375 33.624 19.5303 33.9092 cv
19.5625 34.251 li
19.9902 34.0049 20.3965 33.8018 20.791 33.6318 cv
20.749 33.1943 li
cp
f
15.9609 34.9424 mo
15.9834 35.166 li
16.1211 35.1777 16.2656 35.1846 16.4121 35.1846 cv
16.3906 34.9453 li
16.2471 34.9502 16.1035 34.9521 15.9609 34.9424 cv
cp
f
15.5352 34.8818 mo
15.3574 34.8506 15.1865 34.8076 15.0166 34.7529 cv
15.041 34.9912 li
15.1973 35.042 15.3711 35.0811 15.5566 35.1123 cv
15.5352 34.8818 li
cp
f
16.5625 36.708 mo
16.5391 36.4795 li
16.3945 36.4824 16.252 36.4912 16.1113 36.4863 cv
16.1338 36.7061 li
16.2715 36.71 16.4141 36.7129 16.5625 36.708 cv
cp
f
15.6855 36.4424 mo
15.5098 36.4189 15.3379 36.3799 15.1719 36.333 cv
15.1943 36.5674 li
15.3477 36.6104 15.5225 36.6416 15.708 36.667 cv
15.6855 36.4424 li
cp
f
17.6543 36.5645 mo
17.6328 36.3291 li
17.4102 36.3838 17.1836 36.4248 16.957 36.4502 cv
16.9805 36.6748 li
17.1992 36.6533 17.4238 36.6162 17.6543 36.5645 cv
cp
f
20.8955 34.7002 mo
20.4912 34.8975 20.084 35.1279 19.6758 35.3994 cv
19.709 35.7354 li
20.1367 35.4951 20.5449 35.2959 20.9355 35.1279 cv
20.8955 34.7002 li
cp
f
21.3418 34.9658 mo
21.8857 34.7607 22.3965 34.6318 22.8701 34.583 cv
22.8174 34.0537 li
22.3311 34.1377 21.8223 34.29 21.2959 34.5146 cv
21.3418 34.9658 li
cp
f
19.3066 35.9453 mo
19.2783 35.6436 li
18.9072 35.876 18.4902 36.0674 18.043 36.208 cv
18.0645 36.46 li
18.4688 36.3408 18.8867 36.1689 19.3066 35.9453 cv
cp
f
17.7813 37.8311 mo
17.5566 37.8896 17.3311 37.9365 17.1055 37.9658 cv
17.127 38.1885 li
17.3457 38.1572 17.5693 38.1172 17.8027 38.0596 cv
17.7813 37.8311 li
cp
f
19.4248 37.1338 mo
19.0566 37.3662 18.6377 37.5596 18.1895 37.7119 cv
18.2119 37.9482 li
18.6133 37.8232 19.0293 37.6523 19.4512 37.4277 cv
19.4248 37.1338 li
cp
f
15.8398 38.001 mo
15.6621 37.9824 15.4932 37.9541 15.3262 37.915 cv
15.3477 38.1436 li
15.5 38.1787 15.6768 38.2021 15.8594 38.2197 cv
15.8398 38.001 li
cp
f
16.6875 38.0068 mo
16.5449 38.0166 16.4033 38.0322 16.2617 38.0303 cv
16.2842 38.2412 li
16.4199 38.2422 16.5625 38.2373 16.7109 38.2295 cv
16.6875 38.0068 li
cp
f
21.4863 36.46 mo
22.0391 36.2549 22.5439 36.1357 23.0137 36.0947 cv
22.9648 35.5537 li
22.4785 35.6309 21.9688 35.7881 21.4434 36.0117 cv
21.4863 36.46 li
cp
f
21.0391 36.1924 mo
20.6387 36.3857 20.2324 36.6211 19.8203 36.8848 cv
19.8525 37.2227 li
20.2861 36.9873 20.6934 36.79 21.082 36.624 cv
21.0391 36.1924 li
cp
f
16.8379 39.5371 mo
16.6963 39.5508 16.5547 39.5674 16.4121 39.5713 cv
16.4326 39.7764 li
16.5664 39.7725 16.7109 39.7637 16.8594 39.751 cv
16.8379 39.5371 li
cp
f
21.6328 37.9482 mo
22.1836 37.7412 22.6914 37.6123 23.1641 37.584 cv
23.1133 37.0654 li
22.625 37.1357 22.1172 37.29 21.5889 37.5127 cv
21.6328 37.9482 li
cp
f
15.9912 39.5605 mo
15.8145 39.5498 15.6465 39.5293 15.4805 39.498 cv
15.5 39.7178 li
15.6543 39.7451 15.8262 39.7607 16.0098 39.7695 cv
15.9912 39.5605 li
cp
f
19.5693 38.6279 mo
19.2109 38.8584 18.7891 39.0537 18.333 39.21 cv
18.3555 39.4365 li
18.7568 39.3047 19.1719 39.1338 19.5977 38.9131 cv
19.5693 38.6279 li
cp
f
21.1875 37.6963 mo
20.7891 37.8896 20.3809 38.1201 19.9668 38.3779 cv
19.998 38.7051 li
20.4316 38.4717 20.8418 38.2725 21.2285 38.1084 cv
21.1875 37.6963 li
cp
f
17.9277 39.3359 mo
17.7051 39.3955 17.4805 39.4463 17.251 39.4834 cv
17.2725 39.6982 li
17.4883 39.6631 17.7168 39.6143 17.9482 39.5518 cv
17.9277 39.3359 li
cp
f
15.6348 41.0811 mo
15.6543 41.2881 li
15.8066 41.3096 15.9775 41.3184 16.1621 41.3223 cv
16.1416 41.1182 li
15.9648 41.1162 15.7969 41.1006 15.6348 41.0811 cv
cp
f
21.7793 39.4434 mo
22.3359 39.2334 22.8389 39.1162 23.3086 39.0986 cv
23.2568 38.5771 li
22.7715 38.6396 22.2646 38.793 21.7344 39.0186 cv
21.7793 39.4434 li
cp
f
20.1133 39.874 mo
20.1445 40.1924 li
20.5801 39.9619 20.9893 39.7637 21.373 39.6045 cv
21.334 39.2041 li
20.9346 39.3945 20.5293 39.6201 20.1133 39.874 cv
cp
f
19.6992 40.1309 mo
19.3516 40.3525 18.9316 40.5479 18.4824 40.7061 cv
18.502 40.9229 li
18.9033 40.7881 19.3174 40.6143 19.7402 40.3975 cv
19.7148 40.1211 li
19.709 40.125 19.7051 40.127 19.6992 40.1309 cv
cp
f
17.4004 40.999 mo
17.4219 41.2041 li
17.6367 41.165 17.8613 41.1084 18.0947 41.0459 cv
18.0742 40.8369 li
17.8516 40.9004 17.627 40.9551 17.4004 40.999 cv
cp
f
16.5625 41.1143 mo
16.582 41.3096 li
16.7178 41.2998 16.8604 41.2871 17.0059 41.2686 cv
16.9863 41.0654 li
16.8438 41.082 16.7021 41.1045 16.5625 41.1143 cv
cp
f
31.9551 28.4692 mo
31.4443 28.2354 30.9355 28.0713 30.4414 27.9727 cv
30.3828 28.2856 li
30.8672 28.3589 31.376 28.4946 31.9082 28.7031 cv
31.9551 28.4692 li
cp
f
33.5703 29.4365 mo
33.5469 29.4165 33.5195 29.4053 33.4951 29.3867 cv
33.1211 29.1025 32.7393 28.8628 32.3574 28.6602 cv
32.3145 28.8755 li
32.71 29.0527 33.1172 29.271 33.5361 29.5303 cv
33.5703 29.4365 li
cp
f
33.4258 30.9268 mo
33.4258 30.9258 33.4199 30.9248 33.4199 30.9219 cv
33.0215 30.624 32.6172 30.3813 32.2109 30.1733 cv
32.166 30.3765 li
32.5625 30.5522 32.9707 30.7656 33.3916 31.019 cv
33.4258 30.9268 li
cp
f
31.8076 29.9971 mo
31.293 29.7681 30.7813 29.5962 30.291 29.5029 cv
30.2363 29.7959 li
30.7168 29.8613 31.2305 30.0142 31.7617 30.2202 cv
31.8076 29.9971 li
cp
f
31.6621 31.5054 mo
31.1445 31.2788 30.6318 31.1021 30.1426 31.0093 cv
30.0918 31.2944 li
30.5654 31.356 31.0801 31.5132 31.6133 31.7173 cv
31.6621 31.5054 li
cp
f
33.2803 32.417 mo
32.877 32.1265 32.4707 31.8887 32.0654 31.6841 cv
32.0205 31.874 li
32.416 32.0459 32.8232 32.2544 33.248 32.5039 cv
33.2803 32.417 li
cp
f
31.5156 33.0107 mo
30.9941 32.7871 30.4854 32.6162 29.9961 32.5303 cv
29.9443 32.8076 li
30.4189 32.8623 30.9316 33.0068 31.4707 33.21 cv
31.5156 33.0107 li
cp
f
31.877 33.3711 mo
32.2676 33.542 32.6738 33.7441 33.1045 33.9912 cv
33.1348 33.9092 li
32.7295 33.624 32.3242 33.3955 31.917 33.1943 cv
31.877 33.3711 li
cp
f
31.7305 34.8682 mo
32.1211 35.0361 32.5283 35.2324 32.957 35.4736 cv
32.9902 35.3994 li
32.5801 35.1279 32.1748 34.8975 31.7705 34.7002 cv
31.7305 34.8682 li
cp
f
31.3701 34.5146 mo
30.8438 34.29 30.3359 34.1377 29.8486 34.0537 cv
29.7969 34.3223 li
30.2695 34.3701 30.7793 34.5 31.3242 34.7041 cv
31.3701 34.5146 li
cp
f
31.2246 36.0117 mo
30.6963 35.7881 30.1885 35.6309 29.7031 35.5537 cv
29.6484 35.834 li
30.1211 35.873 30.6289 35.9932 31.1797 36.1982 cv
31.2246 36.0117 li
cp
f
31.584 36.3623 mo
31.9736 36.5283 32.377 36.7256 32.8135 36.96 cv
32.8467 36.8848 li
32.4336 36.6211 32.0273 36.3857 31.627 36.1924 cv
31.584 36.3623 li
cp
f
31.0742 37.5127 mo
30.5498 37.29 30.04 37.1357 29.5566 37.0654 cv
29.5049 37.3213 li
29.9736 37.3525 30.4795 37.4814 31.0332 37.6865 cv
31.0742 37.5127 li
cp
f
31.4395 37.8477 mo
31.8242 38.0088 32.2344 38.2119 32.668 38.4453 cv
32.7002 38.3779 li
32.2871 38.1201 31.8779 37.8896 31.4785 37.6963 cv
31.4395 37.8477 li
cp
f
30.9316 39.0186 mo
30.4014 38.793 29.8945 38.6396 29.4102 38.5771 cv
29.3564 38.835 li
29.8252 38.8545 30.3301 38.9736 30.8887 39.1807 cv
30.9316 39.0186 li
cp
f
31.293 39.3418 mo
31.6758 39.501 32.083 39.7021 32.5254 39.9297 cv
32.5547 39.874 li
32.1367 39.6201 31.7305 39.3945 31.332 39.2041 cv
31.293 39.3418 li
cp
f
40.3125 40.9658 mo
40.3281 37.8252 li
40.3301 37.8076 40.3057 37.7939 40.2754 37.7939 cv
40.2441 37.7939 40.2188 37.8115 40.2148 37.8291 cv
39.6738 42.2236 li
39.7432 38.5137 li
39.7432 38.499 39.7285 38.4912 39.708 38.4854 cv
39.7324 38.4814 39.752 38.4697 39.7539 38.4541 cv
39.7598 38.3799 li
39.7637 38.3594 39.7354 38.3428 39.6992 38.3447 cv
39.667 38.3467 39.6367 38.3623 39.6348 38.3838 cv
39.626 38.4561 li
39.626 38.4736 39.6455 38.4824 39.6709 38.4863 cv
39.6494 38.4932 39.6328 38.5029 39.6309 38.5166 cv
39.0361 42.5967 li
39.1797 38.9092 li
39.1836 38.8916 39.1602 38.876 39.1279 38.8779 cv
39.0967 38.8779 39.0703 38.8945 39.0703 38.9111 cv
38.3838 43.54 li
38.6025 39.1025 li
38.6055 39.085 38.582 39.0693 38.5508 39.0693 cv
38.5195 39.0732 38.4932 39.0879 38.4902 39.1045 cv
37.8574 42.4209 li
39.2451 29.7524 li
39.6582 30.6777 40.4648 31.6616 41.1621 32.2471 cv
40.3125 40.9658 li
cp
33.7412 43.0146 mo
32.4609 42.3975 31.1318 42.0283 30.4014 42.2646 cv
30.373 42.2627 30.3486 42.2842 30.3447 42.3115 cv
30.3438 42.3389 30.3672 42.3594 30.3965 42.3623 cv
31.207 42.2979 32.6045 42.7744 33.6455 43.374 cv
34.0176 43.5879 34.3945 43.7646 34.7666 43.9092 cv
34.3594 43.8311 33.9834 43.7314 33.6855 43.6074 cv
32.8672 43.2666 32.2402 43.0088 31.6816 42.9678 cv
31.6504 42.9648 31.627 42.9834 31.624 43.0107 cv
31.6191 43.0381 31.6348 43.0615 31.6631 43.0645 cv
32.2383 43.251 32.9453 43.7031 33.6855 44.04 cv
34.0723 44.2139 34.4941 44.3486 34.9238 44.4502 cv
34.3477 44.4023 33.8643 44.3525 33.6484 44.3193 cv
32.9629 44.2119 32.3574 44.1455 31.8203 44.0361 cv
31.791 44.0342 31.7637 44.0518 31.7617 44.0791 cv
31.7568 44.1084 31.7764 44.1338 31.8076 44.1348 cv
32.3564 44.3691 32.9297 44.5713 33.6855 44.8008 cv
34.1055 44.9287 34.9092 45.0635 35.7578 45.1523 cv
34.9795 45.1221 34.1895 45.0791 33.6055 45.0273 cv
32.6885 44.9482 31.791 44.8145 31.0996 44.6455 cv
31.0723 44.6436 31.0449 44.6611 31.0391 44.6885 cv
31.0352 44.7178 31.0566 44.7432 31.082 44.7451 cv
31.7266 45.0791 32.5967 45.375 33.6016 45.5225 cv
33.9238 45.5693 34.293 45.6162 34.6885 45.6563 cv
34.2285 45.6514 33.832 45.6406 33.5752 45.6201 cv
32.2871 45.5107 30.918 45.0654 30.0361 44.7139 cv
30.0137 44.7002 29.9756 44.7041 29.96 44.7275 cv
29.9473 44.751 29.958 44.7832 29.9805 44.7959 cv
30.8027 45.3564 32.6738 46.1631 34.7842 46.2705 cv
30.0762 46.2578 27.1699 45.1006 26.2861 43.4014 cv
25.6943 44.54 24.418 45.4346 22.2295 45.9043 cv
23.1582 45.6084 23.9082 45.251 24.377 44.9307 cv
24.4053 44.915 24.416 44.876 24.4014 44.8486 cv
24.3848 44.8213 24.3408 44.8174 24.3145 44.8311 cv
23.2715 45.2471 21.6592 45.7744 20.1406 45.8994 cv
19.8379 45.9248 19.3682 45.9385 18.8223 45.9434 cv
19.29 45.8936 19.7246 45.8408 20.1055 45.7861 cv
21.293 45.6123 22.3223 45.2646 23.0762 44.8691 cv
23.1094 44.8672 23.1338 44.835 23.1289 44.8008 cv
23.126 44.7705 23.0898 44.749 23.0566 44.751 cv
22.2441 44.9502 21.1836 45.1045 20.1016 45.2041 cv
19.4189 45.2646 18.4922 45.3154 17.5771 45.3486 cv
18.5723 45.2451 19.5166 45.0859 20.0088 44.9365 cv
20.9004 44.6689 21.5762 44.4268 22.2256 44.1494 cv
22.2578 44.1455 22.2852 44.1182 22.2832 44.085 cv
22.2773 44.0518 22.2441 44.0283 22.2109 44.0322 cv
21.5742 44.1611 20.8604 44.2412 20.0566 44.3662 cv
19.7998 44.4063 19.2285 44.4648 18.5479 44.5225 cv
19.0547 44.4014 19.5527 44.2432 20.0088 44.0361 cv
20.8828 43.6416 21.7148 43.1084 22.3945 42.8867 cv
22.4277 42.8838 22.4434 42.8594 22.4414 42.8252 cv
22.4414 42.8252 li
22.4531 42.834 22.4678 42.8389 22.4844 42.8369 cv
22.5176 42.833 22.5391 42.8037 22.5361 42.7725 cv
22.5332 42.7412 22.5039 42.7158 22.4707 42.7197 cv
22.4395 42.7217 22.418 42.752 22.4189 42.7842 cv
22.4219 42.7979 22.4287 42.8086 22.4375 42.8193 cv
22.4287 42.791 22.4023 42.7725 22.374 42.7744 cv
21.7148 42.8223 20.9746 43.124 20.0088 43.5283 cv
19.6602 43.6738 19.2188 43.792 18.7402 43.8838 cv
19.1777 43.7129 19.623 43.5029 20.0586 43.251 cv
21.2822 42.5479 22.9316 41.9854 23.8906 42.0615 cv
23.9199 42.0576 23.9492 42.0303 23.9473 41.999 cv
23.9434 41.9678 23.916 41.9404 23.8828 41.9443 cv
23.0195 41.668 21.4551 42.1016 19.9434 42.8262 cv
17.5098 43.999 15.3818 43.8096 15.041 43.332 cv
15.0557 43.3271 li
15.4355 43.7129 17.5527 43.5869 19.96 42.4287 cv
23.0342 40.9512 24.4199 40.5 26.3379 43.0801 cv
26.3457 43.1035 li
26.3457 43.0908 li
28.2676 40.499 29.6523 40.9482 32.7314 42.4287 cv
35.2314 43.6309 36.6973 43.71 37.4512 43.2783 cv
37.582 43.3135 li
36.9922 43.6738 35.4863 43.8525 33.7412 43.0146 cv
cp
26.4785 47.4277 mo
25.3926 47.4277 24.4473 47.1611 24.0625 46.6533 cv
25.5791 46.1553 26.1152 45.3896 26.249 44.4766 cv
26.4346 45.375 27.1309 46.1309 28.7441 46.6318 cv
28.4209 47.1533 27.5801 47.4277 26.4785 47.4277 cv
cp
14.125 41.7461 mo
13.1484 34.8975 li
13.1445 34.8701 13.1201 34.8506 13.0918 34.8545 cv
13.0625 34.8564 13.042 34.8818 13.0439 34.9111 cv
13.4727 40.7314 li
12.5938 34.3447 li
12.5918 34.3232 12.5752 34.3105 12.5566 34.3047 cv
12.5781 34.2939 12.5938 34.2744 12.5918 34.248 cv
12.5791 34.1338 li
12.5762 34.1025 12.5479 34.0771 12.5156 34.0811 cv
12.4814 34.083 12.459 34.1143 12.4629 34.1475 cv
12.4746 34.2617 li
12.4775 34.2861 12.4961 34.3018 12.5186 34.3076 cv
12.5 34.3184 12.4873 34.334 12.4902 34.3545 cv
12.8574 40.2959 li
11.9941 33.3311 li
11.9902 33.3037 11.9648 33.2822 11.9375 33.2861 cv
11.9082 33.2881 11.8867 33.3135 11.8906 33.3408 cv
12.2461 39.9482 li
11.4941 32.2793 li
12.1992 31.6992 13.0273 30.6953 13.4482 29.7524 cv
14.8594 42.6221 li
13.7002 35.1279 li
13.6982 35.0986 13.6758 35.0781 13.6445 35.0811 cv
13.6133 35.085 13.5938 35.1094 13.5977 35.1377 cv
14.125 41.7461 li
cp
13.707 28.9082 mo
13.7119 28.9136 13.7178 28.9194 13.7227 28.9253 cv
13.7041 28.9365 li
13.7051 28.9268 13.7051 28.9175 13.707 28.9082 cv
cp
18.8945 28.771 mo
20.8496 27.4565 22.4121 26.9067 23.5996 27.0474 cv
24.1016 27.1777 24.3252 27.5469 24.4473 27.9902 cv
23.9102 27.853 23.2949 27.8174 22.6387 27.9014 cv
22.6973 28.5015 li
23.3916 28.4478 24.0215 28.5317 24.5723 28.7334 cv
24.6719 29.5874 li
24.1211 29.4121 23.4795 29.3584 22.7881 29.4395 cv
22.8457 30.0254 li
23.5557 29.9829 24.1973 30.0903 24.7578 30.3354 cv
24.8555 31.1772 li
24.3008 30.9624 23.6465 30.8906 22.9365 30.9663 cv
22.9922 31.5391 li
23.7217 31.5073 24.374 31.644 24.9443 31.9443 cv
25.041 32.7764 li
24.4805 32.5127 23.8135 32.4189 23.0869 32.4893 cv
23.1426 33.0518 li
23.8867 33.0332 24.5498 33.2061 25.1328 33.5742 cv
25.2275 34.3955 li
24.6602 34.0654 23.9805 33.9443 23.2344 34.0049 cv
23.2881 34.5605 li
24.0488 34.5596 24.7227 34.7764 25.3242 35.2295 cv
25.416 36.0342 li
24.8379 35.6182 24.1455 35.4561 23.3809 35.5068 cv
23.4346 36.0713 li
24.2109 36.0908 24.8916 36.3623 25.5195 36.9219 cv
25.6113 37.7139 li
25.0127 37.1943 24.3066 36.9893 23.5264 37.0225 cv
23.583 37.5811 li
24.3682 37.6299 25.0557 37.9678 25.7188 38.6494 cv
25.8105 39.4307 li
25.1836 38.79 24.4658 38.5303 23.6748 38.5439 cv
23.7324 39.1123 li
24.5156 39.1914 25.2109 39.5947 25.9238 40.4111 cv
26.0225 41.2695 li
24.3379 39.2549 22.1904 40.1377 19.7598 41.7314 cv
18.1875 42.7646 16.5039 43.4326 15.3135 43.1943 cv
13.9648 29.1406 li
14.8672 29.8496 16.6279 30.2935 18.8945 28.771 cv
cp
26.4707 40.4785 mo
27.2773 39.4404 28.0518 38.9414 28.9336 38.8506 cv
28.9912 38.5439 li
28.0381 38.5264 27.1885 38.9082 26.4805 39.8779 cv
26.4961 38.9072 li
27.3008 37.874 28.1221 37.3779 29.084 37.3203 cv
29.1396 37.0225 li
28.1055 36.9775 27.2012 37.3564 26.5059 38.3252 cv
26.5225 37.333 li
27.3203 36.3184 28.1914 35.8369 29.2324 35.8096 cv
29.2861 35.5068 li
28.1729 35.4326 27.2109 35.8086 26.5313 36.7705 cv
26.5488 35.7607 li
27.3379 34.7666 28.2637 34.2988 29.377 34.2988 cv
29.4316 34.0049 li
28.2441 33.9082 27.2227 34.2734 26.5576 35.2148 cv
26.5742 34.1846 li
27.3535 33.2197 28.335 32.7607 29.5254 32.79 cv
29.5801 32.4893 li
28.3184 32.3682 27.2344 32.7334 26.584 33.6465 cv
26.6006 32.6104 li
27.3711 31.6743 28.4102 31.2231 29.6699 31.2778 cv
29.7285 30.9663 li
28.3926 30.8237 27.25 31.1982 26.6094 32.0864 cv
26.627 31.0337 li
27.3887 30.1318 28.4844 29.6831 29.8203 29.7651 cv
29.877 29.4395 li
28.4727 29.2749 27.2705 29.6602 26.6348 30.52 cv
26.6523 29.4585 li
27.4082 28.5874 28.5586 28.1294 29.9678 28.2388 cv
30.0273 27.9014 li
28.584 27.7183 27.3389 28.1035 26.6934 28.9048 cv
26.7539 28.6445 26.9248 28.1343 27.3574 27.7178 cv
27.3545 27.7188 27.3496 27.7202 27.3467 27.7212 cv
28.7822 26.5151 31.2578 27.0659 33.7959 28.771 cv
36.0664 30.2959 37.8281 29.8472 38.7285 29.1372 cv
37.3789 43.1943 li
36.1895 43.4326 34.5059 42.7646 32.9316 41.7314 cv
30.3975 40.0674 28.166 39.1807 26.4521 41.5547 cv
26.4707 40.4785 li
cp
41.2705 31.3896 mo
40.377 30.5273 39.4277 29.1538 39.3926 28.1465 cv
37.8506 30.0469 35.3125 28.7749 33.6973 27.5225 cv
30.7539 25.2451 27.2734 25.1748 26.1846 27.5469 cv
25.0869 25.2393 21.9102 25.2676 18.9961 27.5225 cv
17.377 28.7749 15.0449 29.7241 13.2988 28.1465 cv
13.2676 29.1538 12.3164 30.5273 11.4238 31.3896 cv
10.4375 31.3896 li
11.9512 47.2822 li
12.1865 47.2822 li
12.1865 47.2852 li
18.2324 47.2852 li
20.3125 47.2852 21.8672 47.1553 23.0293 46.9209 cv
23.5156 47.8184 24.8623 48.2158 26.4912 48.2158 cv
28.1191 48.2158 29.4639 47.8193 29.9531 46.9248 cv
31.1875 47.1563 32.7891 47.2852 34.8535 47.2852 cv
40.2256 47.2852 li
40.2324 47.2705 li
40.7129 47.2705 li
42.2275 31.3896 li
41.2705 31.3896 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Rose) ()%%Title: (UVic_hst_4c.eps)%%CreationDate: 4/18/08 9:57 AM%AI9_DataStream%Gb"-6HZ*33E?P5ec?Heu%,_F9VV_o&n,r*22sUnn)`.176*N%R%R&C3PQi%?]\ZHaX(QXKa!E0kfep(oOiVn7p?C%3?!XY:Y5[^e%_n1tJ^O,SGqnp&Gp%+_qIchCBY@\SURD/O_^V9O+m`/n,X&q^,Jlg6O[.C,#H0ZY:P-97()4iq']D_MDp\)M.hnQe:qsh_e]DHg@%J,K-1pm9TNGJAP(4acjIpTJf8p[A*o45@TbrR:DhrYP*Kk;W-ZkBHA:?@UVX.t]PAIWtS^k5MuBqY9RW]D"PI"Wn<BIn)Bqp.)%g%C;nL-rl*XHqiBXjr>Ot6qsG72nF_k;7K+<Urq>ct#NuCL`'PE(^\l]5*8:]p\UO6jhqWY[k/S#$?[m=lmd:&LRd9sth89ctY<UeS%)SAXCJ:ed1GQ03?Tc[7VQ<c2V=Mlb(Bm@\Bh+qtWrqph&a6fA*+5Ztk8++j0hqTtBp?t4nqrWAqpKT0BT:t.i]YAgngUD)b5UQh)%Poonb]C51UTko)LI/b*HC?Vu%2])86lhB;oI=SSNGQ/9Pq"%cGneIhok4N*LhD:Je"i'ommd4rLrHE"Y938OP\4\^J/G-McZR\:!%cr7kfKXV(;DmT(*bLL&J=G>=c<:XfAP@)"QoDP/f5IVe@R;DfhQ)jVY"rhgBro*gFn+s8"[k%B7qJoSjs&K)?US7]052<i::&l:T%J(a-Bk3A;jndBp<7j+qCYMT?NX=LmgPs`_)0`GudY<TZ(`-C`os7Pf0m1+XAJCJ,fa*[`T')o$KIij^YocF-ZO5G8Ehg3W+T$R0g%5EukI8dXra_GVgkWKb\@Xg;%Z;_+.7UfVrT<\.6$QGQGm)bV34=R(.L-]^dqk'4g"k;.R65,X'0T?m<2q970(Mn-OV*e#>`MbiX4%hG7M;D_-Tj_V\H&qkQC:n$#=W)p;WMn2L&F0u;1FTC=er@?9n:f#2gmR^#BX)uGVE&W2"RG;;)PrE'F(Ktjn:q2@!J+)EstR'F_7%_Vb8:pRGI6D<J@tgTfj$7TtCnYS?dAIq)28K%t/@N^jNX@O^Z9N\FssT>gfgDnO!EnbD-_DE1&Q2jV>[iGTc+V@pm!^E;@31k7/Z%qU%%Xp+b.'']VpX_EI)5A';Dgr*HO/a,<US&!k&g.:luWn7h;JIuF9ChcPd#)uIZ8iFh[>QGMEP?R]RPggSFs)jn4%L6Yf(g9B[4%.81+106Bl*n(]tD3kq$OL+V!hdCsVTZ';tnCZjmVHiDuio?:`[jtUN(E"-IV@J]AtSY)=adb3>eQK"mm5#\r=IA];W]$lbdoKLET%jZX1,,/kfkh6EYjeb89T\R'a5>!kOLQariU+6WEgrg/+$i;<M?J#9DYA4ZaD5<8=`s3!X'n9lb^mNOmm4b(r\o$?:1p\ccF9OF>c%%-`9;kPCY9qd9=Wm>(KtNZJ,]ETMP\j1ir*(QKZ1:M7W/WT<Y2T3RD:ra.nhGP^UQ2pq$9q%QWf1Z"a"-KJ+tq1P+6Km,0m>CU.*%3M3[]kftO`%<Weg($Z-R3qKiU<Wf_50B%H=)skm**!d%Hh).EN1e"gC?,CTYZB>!$;K[`:#Higfi?6J0I!s##;etm9)+a4(j:1`L%:?>G<[ZkQ$kAn_%hN74UDE68PAZt>Y.S$+kpk``L3Qn%ocW/^-:LC#@Wo;ma^?dB$Jutt8m%&,ul^;2?:d%.LPu*WO0Oe1)!OWYW%A`,;@EB7PNcNQPnqlpPm+k2+ig-BMSN#cR>]ZFa#dfJ3i:E]upiRfrH&2nrjGf5ct9#B[]>Cn],/Wj'S\Q+Lnlo11jo<[(9Bo0`n%6qcu#J=.Nu4lP$*%/\:Z"RX&=#_dF=VOXn;/"BGN)5H]5l?M:$r7Ci-?i&FlI/86Y:ZuHh_0;D29W/$l(8W[3)JKKI9DD.Jg#m#P%[V)*S-/iNF5Oib#.1584,?Vt"_r#jdj/gmm*^4qJ(<.Yc]N/4qde_4[SqL.R)OZ25c@qa$:[om0-\X;ci(:,#Agk)-B&Zti#U:X<%(nbs;22rYd"mMPVd.&*pq>JBZ$AHZQI\W.'^[UZc4ZaH"/,Y<B_nV-4I@B&L(I#qcL-9RFHe(h5<k1-`.5D[8o.QIW#Gb>_9nqLm%*G;0M.#bCG[-eRt'Z<@Jg-+aM1LH?V**N`qg;a(ok;;pY*#k_3`^?X8`S4_qU8*#M8sf;://e6%WcT7Npe73n+D6oN'9!Us)Fp!(%%+J'0NMA-@7U10X?]]H3&WXTOY^Pa\gtO-M-?P8)N)GFX^cbO%k:u>0<\]E<6d(2XlPg`QX#c0L/7(^N:@$.pjD-c<,g';.Dio6P%CQp`t3UEpGf])h[dH1B$&^\qUp@.i+XlF'\pK=0[m79,,9HW.]ohpOL`p]eul0-PCOq\MC<PBff$E!H0*\3WZ)e6is3q02oRKmR3%N7"?F,(Y$2l:CQ0;Ms#p(<F5!>GNrEA$-hAkLASqarh\mcM@,(j!+Ogd'c^4NA%-%fBplFOd=&EkmWjV8_`bVFP.)OA,(t1jj.lX%rM!&s/1!Ge:6\74Vt@-?jEGOd-K&_'7U'%#BiZoX4V5k*YX[?;)olXLBM^_-aDm$.;dW6Sfj)Gpe*8T8_gh1p^5%.J,s/MTJ)q^&%,3?+jRGqLtlF^,l<#HuRa&(q/*LhI0M.SkhbJq"%oXVoR6iDBS4athoY4.erYt(aQd_G7#dJff1m[<h-C`]t5PE&*=N>nG^N<:<K%].Tj>H/h_to0V#0[5P.>WJ-q;)B54f84+ffjN]FpB,HmIrCohD6o3Fc/RW9)5E=r'LaHPE.EPB6.#(#0!F8fHLU9N1#Yo%HnUu2u%eIU[Ip=bAd3-,It+n-De)a"R*5mcJUiAd$JUm9rl\?e-dTA%-SFK5U97%pBQB9GB"m]CE_o>E4>OhM&<Q".1!"5?U^Zf4&c`!6,E%SBKPdCq2:#ULQ=^m)^<C>-=jtf.eD5^jAF4`2[=%1,PV^OnOH'Qh:d./,5@;gp.ua49%Z_OjQodnu<S5rpEmWS1IeX.*1o[97%cS%9P[![,M%_jD=8jZi]:8^NqCaSrc!m?3SSX+^d/8h_]"RZ$DD+Gc;gG^gb-Ce*jjlhN,XXiERW[]*$499+&s;c,AJe->i9g6>pU%(%W2_(bNhJQ8.?EOKc\\&YUUB.r@g^9hE8h;P@APl0)TQ/u=mN9C8o$sfg?1Zs)&n!QO$%3Ba3C'UqgkMNYD=\Y-b6*\#,/=Y>FY#*%/L0X*c$tdX&(%!054Oh1f5)>K.1iRbkXV_1A$A;ph6g2>W940!aS<e6]4OqYa1HD$[=*kj#%"IDkGS]leoN1OXD<o.J"L=!M<D`=%NuTS6!4UTNI!=0lE&PnL#em$U:g1l![AD=E:SO0'o`P2pII.ZX9:7D:=^P)89_DYm9mI`4Gb_?<bj7c"jI-8nU$5A@RRS!:T4.[9%8"DBZ/LMR7d@a.b;^cXVYD)!N[8QjGZ1T6NU1fZm6LCn?hX<M]2**t*oaH56q1H<I<Z,$UZ.j_"CP:.mEX'ml'W4>\BT:GeD+6`%%^7T*qOW9;Oe=[&->,/NNd#N2946_XI$;k)Pcj/=\?0X&;L->8coU4!*p`S=IAjNK3Ng1nE]Ysq@@LGm?a,G&sBTDn%Eo^AYD'HMb%ZWSk`_V.no.>*tdkig9'U9ntYn'l06o+GtW3u.S@h!^oc0%r2KO!Ngi4,33&J;<DIp':Uuj:22[NkY`:&h.!I1*cMTet.n>\%b"I%p5p:d/k1l*l.&_.o68-udML<p<CW!].+6h;.$U^<cgb\26DHiH,T]>1K:]qd23e+;[J$Yg>]QRd()@53a%-)8N<2RR6-$4_aFPlM%/N]Gq.PjWmhQtcpmob\DHMRt]*T=<r&iapWlF8Y4O^:,);(8HPJFLEA6?Xu;[*9N/BVQtO`G`>cFDKCu.A]Yf,nXoP"u(6lCZk`A%8&Y`%@t8njIQp"ZkMcRsCcq%=oRa>RbT2q[/'Z=UAc<2[EhHg:%"&sF-MD-_oM-=q*r1V)h@;;hp`&u&Q[Bj\DktY0ba#cid-QU;%ZT?%V1Kl;F-d6E?SU4P4I`Imhs)pWN;Unr>>7o$n`gV!9r6K]4V>i*O;-<qTOC*-;\UPpb?[S;,otU(A6"Wg$>W]XR1T&Sl[3*ad%.r!/Xj'U.sMmGCXZJi&7S#FJVjZh@O\B]!]ldFSImoVqCSEIgoNqtg$W?^_R]QV6.ZXYP9FoD"qN)JS0a*/%2=n8?-0Dt\F]DHg0%o69RXIIlj^LQ=Z=>R'$am[r?%kr3N84C\.7qPO2YfCpBGX+,Bomc+hmGl*8?e'IaF^&.camanX,r,Hqj^O,k6O'h>Y`j\$Y!h_Jj%I_'%Aea#.YI/R`,^Nkk@0]2>Jp&"c7GP_C^(-qolmDh.-m[gTFgKTX3GeZ>Qs7kUrGJAFtm_6)Ir`*a2J-h+ps#T$,CO4q+YMM%3%f5HfRb;\hGJ,$'k$^AC'#5Ibm\b>(Lqti>0^OQ4"+5bjk]jTmtp*Te,'4,jrJ,TAL5>ScbpDIN;Q\XJ5]79G46`7p)o'=or5J4P?%^\d^X5CU+hGe1?4h&kLeIi-O%d-J/*h;,jC@;'2(]RKb6m[mk$s5C5_EL?apk3[@H6YJZ-1qn>3!<WaShu<0=%sQOY%t?]?a`!e;%`qQ[o^4*gAGcMJ1&(!!!ZT1Zf=K=:X%N+6IqHgk(m-a@d@#Y-Trq1JRJ>`BopTrbkIJ`m"m^q<L!nu>2V_-iPm+h$uh=PX7hbV%`%YDHm65[8ruI*UnsNotBT@'nWDLuRadldPOsqJa-_Y1Eg[Fh3UbiS&njDQc>cSutkee+%N>m8*CS-BOe_'Mm]K:[Vaj%ldl;:WMMc%E82Q$Z%1MhNq!sHrofC9#^Y=cqJ\J8%u8(%:_2ZL&*XW9iSY77?k6l'TD-t7e,HjAm.]RlaSQ*t;V:l[gY9CbIJm-+ohbCjel$Q`%2:bTPFk'Mh=3G_HQ")h)OKYKS-'qS?$,qOe[08*5EX3`X+n'Ks-0Le=bTV=pE&QbIj)mDZ@lgE6Wi;ea;MlnK&%8N5Ar>br*Dc2B%&"o9>#U2.'(h3R1ktotAkAVG:e,K[:V?UKC\WPN<DC@E.)iMu&#%Nk-d?PnGYhdrPDEG;`:"TL3!d=^X_&^@pE+cC:g`c(uG)Enc%*TO;2kGW_@ooT',^#XWO:T:N(oP3VCG*on#S`Xg"a1:MePR$FOKGY7?!#FKRb0')mq@5[)Aqbn6:kXN5%PA-UnN_aK#gJu(:l>R9%n9\Li?a92dA$\]n#o*F&i3M4D]?=I^\d]e;S0,;ET=@Y^CK^^u:L8gsYK?.']]t\^l.7cKZn"@dV+]Dc+6);s+PcD!qVC*nn.g$+%GNR$`$@t&KH&H[O`aF@9VltPn\\R/oW5`'gr[..OmCB@&i/,@NED,DKO6DVg+pXr8n%[]Wo,iP^n%Jhll[*$5>>TS?J+Ctdj#iQN%#P/De)9ab$="p6h*oY:1r.0+qnHIt[mc9Dri:as(dD/=]]a%pac<4fHfj<Es4kbPE""Q">,En,&LV.c\=u-c*373E9du;I,-N\<.%K+WjRE#S\aW:l?u(Jpc/e)J^jdpi]6P/[_N^4*S=s8)`,h=Y.CJ9]*rW6[!A?3e%#i_$7%Dd6k!:%53$?MfZ4iN[0M$1lYhHM.M,%e+Mo&S1e0sjf^lH6?tCN-EKDoqL>S5;R)&J.,3u[B4O#ge<jn>RqZ7i,KgsmNj>3:kTuqm*ih=.F.c*l&@*Hi7*LN$\J>9%,Yu7t%(>0<T-=filS<,lWK/sR-68jOVW_C@513"l+=crJ[+Pu4:IlZLspga(3KImoZd93>46.s[Q/h%QW`F77*kYKj@r.W<WISIh2p9j]P%D1b(Qk=$mH_EQ"`V2[!D?KK$-&q@c*)qY):lYuZgg;i5$?)L?IFSVurq?/E4I4:@dr_.+SQi6hH<ZrF$KsXQMRO7<fW+?`B0N#Mo%jUtQd<%M1S*4`[2PYI]R.[-L!9"HUg4qV#F(YSXV'[&l(l+-?V9o_DSYk3L?$U7FHT0LKCOcrQC4("GRcf='o5!EhgnI&V"=WDfm%1%?pXhLG2<>HHeu+&naJ2pi^I;,sT,rE",PetH6gc=Ar4M9O"2-6sLlSd\1I-1Na$:nGe-]V^*D7kuY,A6u!]#pq!(RB0)h1ZO.+%))*trgdHeD')A'>lpSb_7%;4,A:CfbMC'_iTkK1d+c<-F)P^i':1TKm9mWU@9PBceA]hG1>,Q2/ZA!%M50q_g1fN((AQ+kQeOf+-%[TLX`'s!Ve<jl8`G4!R4Y844lY\M,u-8oB>YF>=;e=ic-1j,[\_3*k[_<dKT1`3]-f5(ZZTQ,uQB4jp`F!C<72?#FQW27&Z%,O;=%lk]'6k+*Dt>+3.ZL2Skrc.__7gNT)*^[)9ST2+TU;QITG-%Y^qei?h]@?lPs),t[oF:RA$n`3;.B8R]VP"qT4D03W'P@ZXJga(@e%Lt?3%6$R_"-V'dHI9uPKEL=ZlUQZmYB-stl@DkCZB>\&g1jptZn^YE[QtR\J^ZMnp#j?+GB*"]ES--1pDo@8a%8NGbi)q,c+/qK+%W#oaRYbqA5n/urDEHg`m*'5ZDCMdj<]O&eBD$SD2`O#4+F<Aj$KTkR22pV]1Dc$;gkU\Ta;_fVbEGL%Z\C3[n7*,V\Q*\U">e*JS%k3i0FP_[U[K]r]2j@?GdA?V^\EL4NW+F'jYd8J6F,S$ccB[kUWTAk%jk4P4Q^OQ"@YG_(#C.lfAq>u,nd4IDmKO8hCMbYqa(EM>+%dnBI)a2p-NKO8hk1t,+m7E5]j/cDD'=fq`X%Td,2=?lT1M^uHMC@UQ?o]9(XWpo9'QY0UQ93&?)iRYTf-XNjmVib9arNpM^Du5Hb%nf$se+7[crr41Znq:Y<N5N/u_E*9n%r@kk=,F?/iTe7T?dJA`]>[-WjjtrMZG`FERNl6Fs0='Sg,t),M)-B91<cJ,*E<=^2##ihL%/+LDQ,-Vj<K3!QR*.[.@JG#EuE*En3*dCQchNWR]<T$l4$(09MR+E3L9FK(g"&k,ngbLRoMAq%rl(*A#SUh5P@"o_i@Kbh\,Ae"m%Nd1cQGn%GG^e%i&'<p!mlo!hkE+$-[@(Rdo^Ls3f$gcLJ>E6Lj1U-*Nm.p]u)^G"$5fOR=,7f/b!e8P3k:?%KYT]%Br3$,=#)%O0%Tb'IK,S1RlKZ,!c`Y!mEFZkA^@R6Z3&1eCr%#2`&bkM1$k61F)#4'<]7.M"/Sd,jm5u^hq=U,LD-_T`\.$595RKq4U6,[=GFVR=$%!CYfO-l[dQ/SM((A7G`[R6akSOI:k1K]`Z_q[<h8"ek3q]dM5(9r3\g,hbHr_)e<q87YT=&I<<PZ$jV!oX!,G+((dl8\XeGK@TtY%OY0ub6KcSgl1MJXf7aC@8([K!rE<7sR#$"<21>$?O%Cn4VPacKl89%-T?k$71&I<Nri.Io:[',7dhfXqg+&n<r=\^9bBfVk`-g:E%Su+.qT=1i!ktB6u/aI-I'(]h\HCDRdHnoiiO?nb(J0*Y''9kO^b[9Ifa?N>HRP(RCT;u[#QW1*5e[22HWn-?J>14ctlZ4qcl&r(>%[&1g2e638F-0_&O;kDR$Sl3sj@)MAV`$^-R*t*UhjMOG@jm7:C(pd@G(LoLu>WfUe1UU$HM/+]SL_2jQSA2"+ncap"V\m[Jf42DO%o4,(\CO4bes7DpZ1uu\m_1XI1W*HpBU0NFgHE+cEf;9YV73-1DDLSf+nqTAFS:/!EW$+&Pigj-CC3h>t[&R3V96mF8]p`9M40@eu%oMXO[<Ni9dnkQ6,H=FedW`l%XCH9CFb0sUQ_[(<[ZueTE(:sKi0j_'*.1Sd_9j4>$'g5`XlS0,]"YU;VWp$iY)XD[M'\DASU_85b%#^Fo5@BAXs;H+0N<glVte.QXecsro^*c"DUq&2nbeN?an;c]d0rGZt)^H9)W^\bu'^7OJr:mM(,3<&rNEVqsFs6lkPE(Q+6de"/)%l-W7p?G\!Og.Bad\>2VVBmL)PoOoUHTBDB7R*YA?^VpqjGq]!c!97?RGj"B-#f8E7-lSetS-6:'knDaqa1":iI6`P)+0^d6qk?T`%*/'kreB0mc7H:u',,/ioc'>2dGSOUHUt!'</f9hNe+PC2N-KuaI5qg`euJH]?h^1AP5e@-&tJrrY@MK.CcOD^Hkj]4lX?6-)7J<)%CHoVOZV4HMCQ]7b,hjt-d@+CL?2Jdcj>sa8e1SPW`$(Yg6Es#'p*TGShl\)'CffV3,5Tlk[&_?WDqC[ga*+$-FY23jC<P,_jR#M'%:"#Z\/rFXRqb*OLg:6?_=?@&%I\+<)^U\%Xr5JMlebSIH!r^),q5;g'VlaP*8+pk;n(8I8@8'J``ctrO"OC.:ZO#eq*?h]4>Fhnn%2D`nJGA^>T-QGpe1s*\aag>tb8#D3g&"OGA=?9Bq&q"QW9foPGR[&DgBRM,Q6k#\j4u3("m5mN>lbB:t2C&8f"AD5;J`K(lrF)+'%(G!U[4`,:*MH%*_-k/PLJYe!sII`M2"=o=?U'Sk(aU4=L-]7O[PK[F6iFkT-+PFTZ,?)g+,oOQt"Q]n]P3[r1aq/K3,Z6`N!f.Q:%8LIN"E+/9WT_&8TR.)$9DA9EoQbAUM%sVfms1.N9]9Wm<]IAFcAM*efmB(CkEfp<=\a>bTNJ/f[ds&C3LI1]3[,#`-6Z-Xc.Sbu:%*es'&]#17#(7g5/F3D7<TeB+)9=M@V?.q]UgiYn\M?DqlfCY62L1n.m0,\P]9%W]uZ%be!dn@\!+sn\g51t(fAAaJI=Lf2AIdrj`%eGSn1Uau74O7^nmnL'ms:HAG>+eh7*1C"B]T<1gI)p!7dJ&X=7*)C.eGX`=)ksB46o)`tkh;6K4fsKUqH=<;k['::#rCP8/2#*<H%=/l(^e?dYQ9AR3*AmZH=9^6-Q?DbWE?"_rZ@%4X)qjY[e1nb>FD+UtV's4(*_l)ikQkl03`dB`2*=9m@nrW%Sc#tBiL\5)<iF\\=%`X'0qpF#;DWGQ0ic8;jgY8;J$b-4U<Dq&cf-+0.qX>[%h[:u*<B6e?+R;HI:\aD?)j>LH+$ob7LO)n@^Hue!.P1nKk.-VcMYX**6%8W<DZ9Z(2ACHYdW2T55nA*do;U=7q.\k,@Mb/d=5h+OVO#k^UL^,"A/e+T-m*])VLUO17QG_pqug2t>]Cil;/DEuZFBY"d-$B5:a%FPf!Rl/jh4VT*gZ&QWMsqPu:$1Uq+Elt)@0[Zui]n78+I]U)._[RJm.(1\WRV5d?j9EqBG[.S-@d&2%-gXVcLrm]mV_j/W^VbLu5%96[2(8(,Ysd!INrT)Y&Q-^u0ABu>Yq\.A8<(PVc8e&mfYm7CU\;V'\=nu#1+TsAd>b^HLd=*<q4l(/X\X\@_ZC$q8&_9uU?h8uC/%QL8Bc:Q,!O-?6Mn_hD>Jc0<)_QQXCVZGbbk`Vjfk'3`XjZ@4/ZG*R[A5E>tR4J'WF7-^U+p.nir?S71b5toOLrHK2dr!DmMgYk!<%L=5\[LmkGrRUog2kJbrpr*],3'kQtCS$X8qZC.Ts/%e8`kTJ_4^QAieOWqHD$#Bh(%bG6r5ihBD^&eoS_qO85jdoT1N:ACNnsgFi%.7s3kWc!]FcMW[);V&.<AOX"5"]0)_Q-Uo'4U-@,0?m(3m,;+!%aVf]6[p1.odS'$PkOH^q%2nrVto_0As3'&]R'E@=jWb,h<_Zi%dk6gN3`51;aeM"K,:S:sbkM/7j86IE2gG0W;#,@FF"hD)="NnMg@gZ_B;L=^ne\n9Dt*:H!q=OJYl!PMhu8DaI7NdVq$-ijH62^=%._L>E<cc$N!]RIKnEql.p^L$iR##+Z)Q4DNLb"oq3UZkT++hli+7q2$*U#K(#=:+e7mO)B52G5YE#5Qd5T$(!=rWdERoH$n@"\;D%:0JN`_IE?_!`4mQ:i@>>qb\<bYX<V6o@VjLg1=atV@U%cg/b4^B^8..B/lSlqG8h-CFf?uD=qMteimd78UYmMJj'jfFqC7i]XaRS%)Tq\8"CQ&7Tt.;:+(rObTQ`Gso['\k*?f$K.sYgb'"ZP3eVF!W2e(-8&V-J(LO/i0/T/KlG<317`N?u"p?JFL`-`9_K+@:MO7Vec%0LIG=LO.umc#**gL!@9@S_2Y[qXWK,I:uBDN,CFinM'BBdGg0]IAdt5(AC+>coW7R)O4IG4)L8u\s,;#=u)`8AKV:/dRZ]370*1\%&,!fG(,qDL4!!81in!%!HaUDD6-KOB524+AcFZ<Y%(/>BlA_8j[uge02Y6))C"-?b7M[`LPrWj0-[Ze&@Qp.N<?:K':iDu7pp\^0%91D%&J`YmgUccA?Gk^_=pTM?PoV0548bDB.he,MNI/8En66.K<W%.aVl%>89/-CAj16BprQn(h?0<QcRd!537mS@$>_sh3;Wn6*6%p]mfP:b8GU76EYjKQLH8i%P.5CQr&+/u5OQ]Na1U)u>cs4dMj,/]VaDkbX9,?Y2U6>GjHC]5X#eQj36+U&ErQ9!M^k?p$a8UX9d3%KpI(iD8I%[@Xd@@9(j`Q&<O*BqgkTjGI+l)p<$>W0bRt'$Wkhf1oe^h%XJQ'N0ZsF9GMJ$;!A^dm'jQ#=!iGQ6[VQmodUmc")"="%d'Mh^n5he#IYECEQ&-sWT_/WSl22;f+7s8:Ob1GM0OPI2WskHrlF+M"_+CC-PX)oS,dLA>G'+`)D+='<TR(08^Ye8e_S*E)[!SI&%,P(U<,QMZp'%'o8%K+"l,2[-NpVR@X9\P.+AB$OmrRe.TPE*8"ARkAuqZ1gH;sZgk`I`*?]'n[S+<<d^WWi!'I6UOoK*e6]FQI:o%X8A%/)N9Lbrd\9R<jr/c.ng9+_:1tI>29]FVSQe83R"]@j6D)\OU@7#X2?IZ=`5mS6D++F=U9@na<$de:N>+0/-:o_Nl!=-#-5c.%%bLhEP@%SKmEdZn2$SU_2/M'/4@<P/-$Uf)\ScOS@_0C#0Ru2^-t.6kUWF4C0HTb;e,i*]?/H/ldpPRH<$nA=AU-KOB*/J=L'S'a%BluYcJHh<`&s/6n&?YAU\YcUN1X&j>V698W-DE2^pG08$(?AM@8?>&hYt5tLKu1Z/i+ASHc-VIX"0;/F>pTkq-8)2MLJFt)hQ2;B%C3^>4""hYO$3S"Z*-T@>A=e]`k[c3%EJ8u'@KZ<6a9alYl5oRUC\TIjL=rmg2P@XOQa].c\Y:'J@33oC&3php6V;6=mj^"='g2m+%P0/Vc?W!CHmstVT0HGjuPYVJFD0.J`;5Pu7,NpG1T4p!+jW2hYaN>[ZeU<22:JoM5+:hXIg$.E!Sg&L(*2N*,AK]<"mI&m1q<`)"%i</uRB"&lsWPM,I%_;ONBmEn(K74"WEl1UXhH4ZF*'TF0+1"@]3@RYtMGW_CiT=?h(1[\Zh?1Xqm2sa8j9&l!!&Ja`!,6[)[H_Fa%;+ZOD!>F;2,L/qnr.3?/H&m?<LPLWHh);F=)i;Yl/,]IjJhfMp=kER>#_76$LTUVS7poTk"B:4h*)j!D4g'N)?asFtBiXMM5[IS<%&t0L>k/Za/QJic4.Bd091dN1R[;b?Reo%$COdV-P8^\WhK*_c\Jp9H&LP4Xtcim@,\s!kuJAk\YeZ\5>m86;EE_Z?q!$IkJPXg/7%C),31;+BcW"Mi%!6bT$XVmcO$J)\I.dPGEq]\k6KP&\iY7PSh;%OsBR1a:%>Lqens3J,@YF)OK5%+WoM,V%eW)aUl5&k&05%h<ID%4^5K-Br$n7p47-5Eg8m01H;`G`/;OcWsK<36Y-Ngn'Iu&3+B7KF;qb;IEE;(c`pa*2^(;kd]Hfgq.`&QMZZmIe&d<p^k[@HC.@^2%\1;/Y"Drl@BB5+?oUlqE#4PmJa5fuW/[lk*5UPmPF1'V&]C1L3<uF0=@m`>)^C"o9CEo"!/UHF>%h/Nf1860_dWL'\6kH:")(2EK%kTjs5$[^DGTGsk*aTf_eF,Y!_.$=s@.c_Nd)gWAhUh0,\XIUjGBA#\>%>E<8,*^p9!X!u2d<(.*j,bbS4dJ<0)q#HBLUtt1g`DQ6%Y-XJ`J`f(+>l5.mRTA(<:4!k.bmi&ja**KUNqe18*X9%Q_bA4^@j*+A()/t[$6(b"0SijY,.S<2JEo>bH[]aW>&IKRBm6NT&-M)c%4b9GEhjWA-/`1>"jlt@]B<ZFmQ%1D#:]a1\7=!<p5ag_r+d9u[]j]Lqfr,<-mAZfpP"[2\n"C@CmE'Lk<Va("+YWEGf40u?a(A$c%=Pd:m#bFHh>>9JIKdrKDR$gsP<$e'Vh(;F>jSU^nj>m/!KhdaU%HtQ)f(4,X?+pu:]LsBq%">Q@n/:f<H5U_]'66m<M`hOWN+WoH%*pB+W)Ze,9@.r5L-Zt;aJR;hcnl4g1L/t(`NZiT>S6]+:rUSLDpFb1>qbe(L%seI)'+k3o)B);f;gf=a`6ZBnL%i$@[tFI[Un*W4%7(d22LJr"ch2\m//Xp@H9ZFqpG1k828]o_<T[W.%1l-#B89'[X?,Anl+(\m$Ah9fd>=MkE>jn-lgE7WJZD1KB%3T%@^=]oU_T2KN%qR*b-+.r5a)714FSG)#ML^;8h:4"/.M%@[WUqYNG^+SWQNeF3(L8!I!K)/ODG5c$#/dV_@UHuU/U-^*$;dl5Z+nVY\U!N*Dr7IqR%DhPd1][N<1F&6W4G>%b*?-aQ6e=tbY5/=IcaU"U\IEcHdcf=LK`/bH*U"2Cg^ni9i=Wb"\]lp>V?E;u0+'qqFLh`0@RaG@p1<QE;%9J&#o'b*c4T'JekY*i$1W]4'lRlJmk0SGpgO,aZs2@%P9#!V5-XteZh2e*r&h=sOEXg)b1DeIn7f@K=tI?U&@Zfg\fc:t"$#FV"c%OW%jFFX^/S-r5gd@oW.>Q&'T19:)A0Nfl40JlE\sin]1X;^EiRbn8M$"G9\+7F>KTPVAo6+rXA[IETtSf7]HPgl$>`4Bb-V#1Ut(%L-"s5hP5D!^i6pRY13R*G&_bfg^B<Ch2fbOp2_74rb1bmlO<WFpNLh"GJAG%qtn"[qfa.]q":uu&b=9d&uO"F#%>%Iq?qGm\jmT$%)>[b%n*'Wtj9olo#P5,i4n.EBX>';Xo$ni'Ia][k)8pLdj9/Vg)a4^,T`WAn<bb)'43%%SV-#6amqH\].X#<Ek]W+Y[+FqOcS.(3%@UOcJajRZ0GrK@VP:uU2Y.`@;]%Pu[jdslmV"GUR^iU:_%rR,Lf9#HeXW;C9CVac4PIrg<>M]3g8\U=R-@KN1TOik6oZZ8hK(h*O%kH%<j`-P=WVo;:jVQ&(!JN!'_1[EcI)`,4QkhF=oA*k"JIQ]^(3^n0PVHF;T:^t,+@;JYVhpCik^iNZ+YQ+1mou!9f0J]h[Ui6E:%o]p,ojRnT:We[%@'b5F(6P#V!$@QT$V5lWGVd:h&Dfc.Hmd=^@\aK^jgK5^5:*o_p%jlMs;fC,s]`@No%lJYC.!?S:m)3kZnDZZl%BNS=pZuN#s<9gLHAOoT81JCNiB`9jSh;u@hT]&i5iL@IJG2Ians5jOp5oFQ:_6t%j&O2=#pj#mfTam%rl(?ngRoXD=Nk'1sr$0\f%TD8N_pV<'0-g^B4Q[AYPnZ7GZ3P>Ceiub\#TDd6pT6G=^ZX6L?[tk"`o&o8t1rIHo:'`)J12)Q<R\[O4ST+(TU0dnZlFs6;!8l#:%TUl:j0,`Oq\H)&_]VXchC;MqV,Z@sF"mS\'O>^H3%8,h3"*LY4p_4pW<!7j3LcI.KB+oIt%)iUY^dJa,9iXh5PBTNu!1,W#<=nbe%oql2$Y\.t^(4bnR-I4qjXLA>NGU-tG;;)u)El[mJ57=>C!tC!-8LIEhD>*<UiO&BlrVI,'2n'mc]R0PPrEj_4#LLdZ7QeZT^Y\o0%'*$_TG<\//p:%LQ+23$piADDLHM=mFn@ubgb\7cJ;%\^.&a?5-1IP\2:p2-`[bN])#u,V/%c@hUJUa5Vct]taK6Asf*?o3=E/ouU%$\Br>O+J)P.PLsAXh2h1gqFKBLpJJF)C'&]^l5KL@b;rq9-dP.)T>H,O?uDB(^l.46@"65`b5Oh-!MN_TP'cb!K9*hIZ#+O"?!rb%lL&:ln,DF@EQ8LACKL)!Od+m+%>AHs@kK7k."`N[Lu&fb!_&O\)(h)C)&R4`Bir.Pou8elRY!-l#"MqoUM=5W;?[4kSn_],pTY&Z%,^I'28KN)+@Nn&GJ$@>fR/MQBFps>;VVR1YAK]\tAg;oteJW2Kif^sn-[ms\V/!D*dWY#sXe6q>K,#*)#ud^fBCoP06OU5m$?*6q%0;N4]$-=%-@#G8B0p)5s'bXgbR(9s7$ku(H:_+2-TdE-j(haNo*:t!r-<NTNB8096+$ZBJ%oY]d9>LoT6eUB',;Ld[;4n"&7aM2G%V0.=*R;at*<Q\4J?<'+X%*9Q4:MU+YJFC@""qjf"3CZ%=#[$lO!dosk.H<F'].Lle<e(Yr;USg7?UCS+7ZiL#!,WRq_.8ug+Hr`4%q]KAUr%9`f>'^(88808d'(e*HY8bY]GfhbJ>%aZ[`HEs"#*p@XJ(un,rJ0&V%=ea^S2<,aA!s"l3&@2G5t[f"0FE3cQ\fop'/+r+%$9[oKIL-WgDdt&qg3+\ha3D=RZ(,p]TkHse`lc/nF9":]ehbstbjD7rM8VZ?hB<)T5_ogW.2>;^%M]U128GlKLc#=n^+@26^YT]>%KCMOc#RI3:g[+BkOCKk>=4U`;SHRCi=6s+44RN^]%Qns0B0Z>AgAc<,3(06g\^<6u(;QDs_7nm./M8F+Lqo]'!d=rHiGA]*5^^2g%4pX/J:\tltc0Z&9HMtj=`sC/b)DS#?1D`L6O#5lPHKoali8@Tc6q*^dG=fp"R+dq7C`l`/L9]Igk3+UUgf=!BSUn_VfWc@rk>\D?%`#W9fN9+Lkm@DE%,d/3h8LdZ.+pMTj:#]*:#q?!h@<N/]gJYT5'sa4"9_O$25I)X2O/O08PXlJhc,C!a.Yr)GcoN1D>i<\VEd3QO%4J3k6o>J/3))Wo$J80X*4)QfVS2[J$Gci0a#q;m/WL;WHV$Rb"<^"HL!>RlB=;k7OE;1MCd1."#6qU-F7RmNEcn)bnB9&FBQq2U5%acKVR22M=8WRf4"?n3hR(@6?U8V=U>ZiFI0"12a,N('R13g2/0rHZ$t)jP?Mi_k[Jb'E8-e<DIl)"7mV:M+6s->3Q8#Z9S&;;lT;%8P'l>boYS%+LUR9OBMYNrcdToL3Y.pLe\i+WbXPDN5,0Jg"hLe$$F0L6BeqO7^I_HMb'oe\l:2\Y6fO$glEd$lYI.=%d<\dLa^9J%P#*l*qaSA/?k`eYbBa<$W.5J=.p/m#A0C$oUb&HIOnB^Lo"(q:Bu@Ye-RtsK:5&Q^[[/da\BnCdc[K,`"g8mu1^8_IOYAcAq0q%Z%H6I/[_bK&&*"lBYMdp98[<Cbl1QoNKm:;%@9_@ZaOC'aR=,c1u&e-X@p5W_t]F9`?_EH,"_DX&bVS\udVU]-MjEX/dh?mOi984<H%eJaIAbG7*A\kK'79k5ra?1Hhl!G=c3,gK6,X:D:%609r0\B<!X-[Pn.!rsZ:mQ`9cG8TO)2]60.o1GM^XR!&E-G0guT4rp[s3p-*%U+8:F2nH\ZTP\4W,(=lp2Yckg$uEoNPcnMu-Z6+D=l)X<n#VURAd=Yjqkb:9e.l!tk4iX(jptj0P>CZDm<:@IhQn2MTC;"hK2A'V%`i8*%'">58$sJf_aHiE$6g1N3bEH609M1n!ZMp(L'S@]0_UnlnQ7i]0+1kYi/q^=RX4B`B;:*pQJgDs`*"!1Z?al:j7m.u%0MX6M%ju?p[NS]jm#dXDn&6MEC9nO.O&]7O_8:PAi`3>nZ0S*qjg!2X,#(`$hcU^h[!uQ>T/.!Z=Xr+c2(LG?u*ots"PL5"\Ga<tEobR?D%#U.u.-:!d:T$(.-XE(/*fj1cEqfAKEWNg;:$BkmN2M$Z00lGsL&>f>u7>Xg]!YH<Q(<'2uhG[6r-[uH6BN_VrAtq>;U09>!6AM)m%'q)_o?6V#YJDQJ;$%Sl'd*rSm@U`*"1H,p+KG1aTEY'f])`fEgU)5E'"&'"e0g&eUH%]R_>[`'m;&UZ61&,1JKD9,''O[eJ6jsUZ%/#/K%APE*OC*%TQImY']ki96SEaXr!Lh[kB0sR]Me&qOCSAG7l7M&@'em!,V80ecUG>rPa;UFSCKQk%&O7t=YB4%<Bok$Xk+:Q2I%*[io>(NrD>WIW9o"fXs"YG"C<JQ/m*R^=kK7Cg5Eko$T)=S8dkX3b%X\3$geXNB`om'MY5$$VWXBGI?L\qlVRTb&ojZD:S:>(t5[%:9c4C6Cec@.L8=GY62Vl/'Ppn-eRLKO1nODXpd]?<tpR?43e-J$p<;e4JUManLu:BknTC4AR"=#Mj"6W?q.AN!0[0dJjhA?9Ep);%A7`X#5d1hZ#faA"=B#kpF`sE[,W6TcRfmuJ9p[A^`H@=&_NJ;HgDdK-JRDE'?`2N:E@#/7=qeocAO!(o!8:E;S6iHue/9(pRV;'c%S6f,M3]aeQ/D4d)jGF=]bYA@_75`;UgrL3^esc2n>bR_*M?\))+=@)XdjkDK#3.B#2.^0WAO3N`5KZ/AkS<G^j8>'HP>L>!@):8)%$ZhtCGU`:=0.@[k_Kt?0YrL=+=tic(i4p)Dha"FHp?5hQ;(ObRfFpDE/C[j_/6<5oMrVZi('DNb$^.R&9bP+pVT]dsAk<-0,h]1;%DBRWf?eB'N>F'aHRRLRl-4Vu]/=*]Sb\8ui0$X]j70djBqAa1W2AXu&(-TC2/87!]Q7=\ZKor20#"l3uLg3^`Ra"mDd6P%b,P?2$%RKXgFKil]<:<fUhctqhB-o7=:\.klr<2WmClsZ=&FdgQ/oS/cEVce&.$^VrK(*1Vu`WaW("@4N)d4BSkI&]i.7<%N1!7NLYMnRpK%c/JdjFEU6^fr-]OT\4-@1j+udDmr;Z9s\5=(0RRQBGT4hR*,pq>P\^hbneMhW:R[NCbZWO3[<=0@1*cR0T[hdW`"6j=[9>?aYo53%]G1W+01]+Zjd.f.0Z@Ihdk!,9GkRacbuR[$U0l>"ZmgfH[F8qH]WHNMZafF'I9G!7#omtHUY,].'8+$JCro=j`F^C)cj:%-_,5GJ%,?K,8?0e]pV7l@SC;jWTc7Q!&/p'XX<n'^">>Qi19M,\-XV=OC,Z]"`=2,kYb[]QH3e7q$P#qm8s!=Q(Dr89WrG_MeMqJ$9@S(uH%1V,q-P!@18kS6L%In]7=IkSW#On3KhAfd<i?ra7C#pp7`<6Sfm&3"p?S8X!*,ApHmT]J]N_r?i1\scWdq&ZG.n;VtK(s!D0r^qbM%%!urr^_#!\KRc_"XE*>,CUFPS<pQcPeJ:'CW2R&Ng1%&d%P537^:-eJ,;h6iptC+6lSg;F-pImG2Mr*7;gF4)L4sK%"ji&mWo-OF%X=:Zr;\`pIYHq[*$87,<Y&!S`*>jBFF`@l)OTC`dW/QX3C^edM\J;@qTgC`44h[nlL>39datPdG:;\>2OM`h(l/<OEN-1'jX[?ms%.YOap@"keG*#0Sdm3&I:\tZJ7CVAde+@`Dt492(5ZJ;(I(hFY=^'RhD,)_?C`[h$n[7XdL`_.S7ZpaK"9f=-]ctI,]c@\AmBrW=5%7kHI>ki7&:93o3mK$P:QC5k]L7NsMVIkk&[JaoIT3S^Ve.ksV[]>`E4cTu)M0WLi2dh:ab\+u4aX90\hlontt*p<u!g:SNrT;GJD%W)hW43oZfkB:]6n1]>ec&PY\4)4ZSp[OOE43F]-&k9$,MgWZ=@G$ktb?p2iScJN+L)R]ik_k9#!1)AKp7cMr<$oh.n,>Y((hse)Z%hrrFS+;urQ`c9\QYqJZJ'"p:E6lgHgnTp_tR*X;?_2HK^h%,cl/dLYJjrG!:*BKOg6n3kQ]`<VL<F`ElI905c[UbB!j/MF(5`U[%%IA\i!(gn@A*HEr+QB3>7/(F*<`5N@`FTAFQ6Fg9W5%mJJ,.baeoP#P)@uc:#O*Rg8\"F0:9\Ubo:L<#lrFQY^>ZA[e^7sXQ@qPZr%E5-\/_[g0r"MU:V*BO1IBIlb*\H)&_]\QZi!Fs%:ZkNjo&?t,i5"n]tEFS!(VI;e5]uc9NFTX&AL/u!$B:&fJ"(gRB5[#>[ZBc<P%HtYf6JWbj$0S4HOP(Up:+sX:0@0QnQF;g:(&pk#MY_EJ%AM%P1U8AN"1=/++j,WM,^FQk3_5cF)5"pR(:30>-\STbT06FF&2Cm/G%LXnDrHnf14Qc5dd08i;oYg\aX:M\1FJ-H^S`Ah+/Xt\-!e:Cp-OL/i*,_Ie]=H$EAo9uDoJ53"RJI>F40YD7rgo,8!)"Ep@j`/tr%?9/'*cK;u/DooZ/*K\"X\7)%QV+"S3O_.d=[=el;jo$I%=QF$K9PET8U(bVhcrdfp9?USK79b#SR7Q`Lm+?Q7(@)S;H(To1@AZt^%T[5/&*'(8,"$p9f%&>Rj/rOI(WMprPa"/i@Mrs[Hm+%!Ad*>+e=,RsWQLDl\F_D=?OB,cdpi9N@&JUfQNu20J;QQA.p^8HKMU<dk%Yl^<7<T?EY+d3IG.*&kHbi(rCUJs-P_eQ5"S'iV,da]QrEf;bcZ;<fKDlb3oQ5b4/b+c2WAqX4TMLn*$?:Q=Ro[S#jPo%YYCioVk%"sf[CRiimT\&VOE+a)Y/_Yh9*(,1@6MifIDG"a/];(sL(DE$[_cq%MT>3;'t*"B`(I%.RrR3L[$,a<kSZ,r$Hb^HFV0H.#Fp-X1,%gWc[A)7LlqN\]O2W<O-jnE*8-<8Jko'#Ff84f0?h,S'[.!c3:^`FPMN5DaOpftP<;7=c]N6!/Ha=YX1`,+ZmY[q)=Di"m7ir,Pq+%]!`bN?@K6*C<.5o:e-E*ZLI#!98Js=Z"eM6:q+AgOGU"tF#E4q+T(mF%tS9n`g?oOQ?X8AEQ4MV$mH@H9=><@,E0H4:0121G5NWN%ODOInBE^qW0.&%VZE?s=/jG2Y+u,7jaWu)r*]7+F#)\-2WI#KkB-1WsUY7!ZNr`PC3aP*_9MoFM![V4VNF_ZtC&^VE5p;JG%X^(;%4=s,Rg%nTWNsk/oEOQ(JOB5@.iU1gL2'nEFL<=r0XA7A'EiToX9U3:36dZb*hO21<2"u(]956GMB:%K^pN0#G]>?j,?+^DMXbH[@%cI1]L8L*l%>$#fMON7-Q.]T&G7eberQ%Qa(G\M1PC@&u_V-u*CfqJbV%iaXDbt6LF5j7b3W5;,4BuuN3A1EMK8m=ao-;d9\B]1le%056(kG[+EIid@^klG^frZ6%an.H!1])Z?al2]UdS+"uVMFpBX6E7]gSO_&.bOe5WV=]5Xc8=uhI2bXShbsQpj@S#Sj-9\IFjGJ4&%dEao[dX\^!<apsh>M9A,/U2e,/JrHd.%ig+Q+WK(.6EAMTN6-e`9JBuO1*&tL+"!],]d,9(eGL)0+EJ=NHrYJ<j`C2rNK2cUUZ+/%XW-dUdK$hV#V9]l"hPD<40NuTOLQSfdWtMITYbDCI3$,EQb4#,<L;qX=t*X^VG\8EN`VMRaCbrp6Z1jncm_PjqXJYU>I?H>WX@)/%!o0@n*drg(%^&jP=)h/B<.V-\+HVnr,Q^8s=%p[`I(Zn1..mMF-R)q*3b9/:kcQ>@#XmXl/.kllVMgTnk)(Qf7SS"2)gEr$@R1.+%f$AqeU6MabmgSI/VcG=M^[Y>+fu>cL(6#`\Z9Y5-8K<=u7D_`RSn$k:[;YArY,PUS]ljg:.3^rbZ7NCsY.?6egq=p4PtuKOBNl_Y%DIOIcL.G)R-YUqS0a91#@%ZClMJ834`aF#]lI\Fh>?D_HN9DZ6FUE"eiNeiSaiZGuQ&TBK4(%;-)lThe]Ouo5Ub<l&VJIdrKc*S7%XoYfii9.bi)YFCC^9n9%*T/?l&hc7*gl&*M3KYGoBOh3t,Ih<ae)J59Og+6fea0VUN)3&cC?m%^2Raio"\rEk=;Z:e"o8Nk4Ce"=%`^9"\0YjPV/ia8MBH"8Z*oig8a<I[h!0kQDoWY'^K$2$8ZIu/GUT_`D:b>UZiU@L5CO)Zb9kojQ>_.-tdDWgS"W]J@+pp`<3WfDM%-,p!W'D5#;KB$MN>hoV3-t@g`4RLdtDHrgJ?<.6qDK1.@K5/JUlC`4P14_H<3V*Oof]/e:N)Jo@K*elfB(h:G`D@%j,*([9H[\0q%]"%S\nZcA7j/Q;6`cjQJPuM0jCZXTS0CT^EcX.0o@ZNK[1#N5j,YO?cMDpP)0S^XQ<*]R#B=D:>/-]8B-?i2XOD2%JjWn@;f96.j%@9s!-*<"o.TuD3L5:<$<2=RcHaFSc8U/>Cr,23W:Loa.o#*'>$GX&A7j+20)o)3afpXAT/Q9<%4@KMG/Ia5t".IYqe]4_eRk!sOK%:V?*I/ecCF?A!cT9GkK^eP<68)\grTml?MIjs1pg^>GYR.'JfPW=1BLKf+DXb739TpL`7:,gEY]REA>1d98pr8K<3ugg>2^9PlO"%KL[V&fpGn]\)+]pQ(.:\9t_0LeOYqs6aO"9&]VmgTIWFC-E+b%Lug.m:kB,pL4u+]moMA1LKnd/5[e#Zn/L1EAR-!+]&NMA5D#bX%a#@eq[Tpna[b7:.H%0cd"00p2g\'GTgMsP_:cI.IFL+R3Mo%La(LWf@]a5BtV7ToX>DqHW4ZBF(]%KQhc#[QDNM90>kRU-5oDXk,%h&<?=C2jO"W/**bO4`,FP6mj.'dS+>LYJS9e>OU5Y:i2""sC8iHs%DUkKo\]PL5r(CD<_*ZH7^_$8Uq>;$NSG5Ppc(`(C#>+\1[s%b\<0=)D9.3,6gc*+Mj@@p=`sUQpc?k<]B8g$j2Bgc(uos;8^ZCnpDU9".)s*VQs4$O,J&^HW@,\$9h'A*,4-1A>_A3ZS@URGnMbt%3H^&c!I>GIR&-i4)"iJY0GFPC^ed]-kTkpOjNoL^7RK'BqV[7BGDsqOGauNGRO'8Z,)nkloglrX1l;8l(flItoY)pK2D>_6B;m64%Z3?e]^^Vl;Y1'i*C!:OHf>FFGrf`<?"-J_+p6*f[n<_1Zm;.(lIYi*<&r''*66Hi5r0o]Rh;FVAf5+R;dE47VW4Hk3AHh'*?G&/3%OAH%WB1VAmf;&U>bYZnM<e(?PCl;9UAPnE?&6i=31_.?Dl4BWL/P\ZH`!q^u=-LY6octr_D.,aiH7EAkBa#@`i?H9NQ)tp,FoY)Z%[729I80_?O[!\OO*#b)A0cj45kn7ca<"3DlR*fc8AW"F?%]8bMR;IALE,l=!^5n6'@3e`Kb10I#"2Sf+B3[$r(p>+U$3fNi/-J\n%d^G%Z#Et>d/>_j;_%5#6IViNO'"0\Q]/9^-7VcdM2eh1_]kl-J-5CDslm?jnc@[]*?Q>62_-7HBEKb1n2`BUL7;,7,F`Y;9fHlaZ%;Kc1Zm.+(XVJKe2`TIP\ZI[.ScA\G+7@+Xq^dF>mYHd]0p";_(V]@k<*u=;PI!3f0jpPS!AD+6m*`>VSD7%0:RFRB()iEi%EhrBG%$LG`MC\^4Y'"BiViu)0n24[S5.Yb($f&Vf-L)0h`D<VfeDq')%N]N99B`N/Z4.\<1d\:OZZ^X>/*Uifo"$NiSEs3T>Fqp0Q1)L=M%1Gu2E'%AN?er!52b`(K$3fUL)AZ7Q0@Zm^Z)bbg?!sonaas+R"Pt`KlDe]KP6-osrEGbb4cr[,NE&OkLPUSjJ+I=R/FgIE',@*Y;%2%F/1JH0Vd-!3&1,1$HG)*[8g4*_QR@EY'?^KV(^EiZKs6_8=5gE:=UhPWU[KrQ,0-u1;NRUT,kg*h%c&ZSm)i6pV]EQ!IX]aU3p%1:D_rO92ft_EQ#GI4e'7"^!b?edRCqdk#V1bmLO4mL\Rr[mkfB+@:>K&:ct.<b:o(GZqMl2FrYV0QAi!Pm]*M*M->GBt:Or6-^(H%jKZk]W[QifQ+\$gZ/Wjp5*j1<IGH6uC@/gA!@+tZeZ22Mm$2MBa^uB/)B^iV(2Ys7ijAlDU%'%r3Zf9to%snOMl'@N$T\R)O((j?%Ok3=jAY\[G(asA(N`8(B.u!$JH(54_S2]Z=;jQ"tNKl%RbHaE3G7ClUEWe"-D?+[=e"SAt&X9rd#:"3'D9riOOjA]hLM,O9U$5Z8%mPTS8V[G'kdD-EB$YK<X"?0X+)F#(K1((QS!kA@X+B$\.ZFO[E>qQQ$;23`)Tfdt?_#p`rAlDUL1]U#p2LrEX_o5[-Ig=X4D1sE<%QZ<dS`oMit7H37(O?koP[b*5sQfNQI$rXjdgo_]WY[J+>bS0Kj!fW]VUMPNe#1S=%1Sg)+*2Fb-=`ls07T@a&&?9)N9]liJF[+sn%2P#kSXXK0l]UkQ^8ptAj$>_1B!k9-_U,#MA)/sM9Q?DH34HhIu-5DoV`j1n?m,k]ZApMQ8(lbd;)J_0ViRk1@S7,e.2f/.Z#J>43%?l/pf.3.J[eRdGgWZ<K%E89#,ml;?;hgB7SDT/".l7(u_V.'k>b];XZJ2,ctAE"53(d[R)4+]3B,U?O:3lVB^Lp7h"0fE"b0ig!r%c)!G?Yc/Ts1gg_R,uURLC]KJ4.i@?bqk+nJQ=-,>pb&gJqlIb;"\n15B/je>iI"W-2o(tF:A9l$ha$F5CK^3FgnPa.=d6m]80o29%>Q\s+EW`gm7,1CEl@O6Bb!uOeq!8"K4;g(YaCaqe]eTOlod`du<dH0*;7;NpQQJ"kB6.a0ANPn]^J*Y:#739jG%l`M(#2,2df-nI%g+mT_-uWa+Q-C#+^`0,]'JHb3E$=``#95WcQF.WK4QmC@rs3D2UI`\sH!/&4W\[@]#4,O>!&!<g7OP3Zf;2(I@@l^hZq&%doWDUT%FD\0OQJ3\uqofuo_AQHu9&/0&<NB0f'*C-Pk%gin,1n/*f4p(tg\'GAYR\u0Ztn4!1!hTGDd@5JCANmQN]`W?#/]#.?_Bi,@'=LP%(P*9"27?lqp;YCOdOta'ERZ[-^h-%nC`tbURqA$V?q`WSAIR]d)R#o8;#SVXV%AG:)H&m.#gDYClSOe[@*ck>I3D]:qSohH.r_<<%&NEV^*%\FIC),`Ao7gE[?!ba[9ZL0dlsU#h/:=)#RBilIjXe`hCLCJW)gI?db^jVg+Lme"pE.c*3.ku/?C?CCX^,nW3EWd8euIsh%)ugm^0_!dV=SOZ15br2Ui*tCLN'7IXOYMV[Z)B;+/j;b_+DNYY67cHF&f+,#Zph#J^dd6)lpbq-N1#j9Kt4gRg04I'2247GOrSs"%lZjHL.)ZEh,1QmK5>Hj.*/p(^[>6hZ^jhtuK1\@[Rjpeo$G"HHSoFb"H:7?Y\iNccLos-p23hqeD!K[Z2BrNBXfCt99G9Apl6/$m%V4AE&OugR_&ma`Apu\O'Dm7^fSmV.*/L"s!U#E4U?MM=T!,d`K/_t9*5a6qk<a#025#j_iTLbqEg:1(6*kn9behN#HWiDjr]]*c^%]F9e1Bqj,b]\41CKLJhWL$C"-iE^ab6AV)]K,gl%B!%A/jUGS#G^iui0""*jNcR"]]L\KZ*tL&>^-?)2%$Vd%)<6,>>_ciHPrm:*%VS6K/Bh@T!1Ql)#o%l*e,"8u\ji2eDiL876j,@]Y(+P<sko*2jiSn#R?^!o6VJ%jO?j0m)"WXjb)fP!&F14hNAuL_9#=]\Ed6t&Q%ga47l?4JP<eQd*[.b^uTZ>W_Z2-EUNs"?k48m.r??BE-30VZ9N6uWb_D[BW%9rfV2X,8EbXk#j*ZK,K5bc\Uh&(gQH%KNA3(C=V3%mEmH<Ht)o5'b!4)mA(UM?Cf.dQ)Oi?.d3='@`?Sl%=fNi`Pn-l*iKe[PFe\CRB!/WiXsu$i)D(j,_QHq8_kAn+,uo5\,nh[KYeU5%d2%^XMbO+LXN'U).Q7j3eI54jZQ"O\aDFX*m!Xdqb3UWiTW[X3&eS$^J4=EX9e1uaTCfJqNL]K8:T6XGOF:jY7*\Jd@j'qe@0NpY%+OV=[<tn1Vc?bAgE-df_W!;7\kZl0g).Z`J)YIJD3l.@g?tB]Y,8'/k#nAea4CL.kRUd%0e@?>fm<IQf"aK=8,jOqPBo2us=&`1t%W+@:XE<]6kT0<OLU=QVs77g,sUie%Jk-u-]P&9ei!NNk:q1GCL24gHK6of5e%;Koa?,o2U1'kIBR_cjc0eukVi@ljGe63dG8j9B4%R*d$'EbZYr/grIZc1<)?IE6GFm_)IojOf9n$]9lVQhO-r6%M9mf00P!9UW5(SdC:53IN.`>8%\gdn.a,*s>$PeR_l7Ck<iU9,9%T%$&X[u&]NZH"@YdDh:B,):h30oW#S5/"_(-'DA3cj[Q1>?a+AmnE,H@(#U:@#/h!s/3bXL!i?3qVTRm4W+?Qo!6%R*$`FKYsN)l-T%Jg+].!8`)Z$46o7M!cZ>&1AK4R\2naO>s==:h8Bm0a\8bX=tG)J0`p1itd4jB>ZeV#!nA+rEq5rhSt-kB;Z"+N.M,I[IGj]'H&,%%@[RT2W0$D9\Y&p3CsZ5$!io2i=:_0)1$q]C90m!"Mb]WG$=f?F%t_[Nk56;)"b:C>,HsR4jB@e=F[6%mgdK:--uobHQ+EX(0P*DX%Ta;&/dTKgr6%Kjq9m@?d#h3[;9i)D*8`_9I&1kHO\tD<]9Z&J2E"dtm1gu$0aL/!e"4sN':KJJ="l^X[6QQC7Jn:/9+=IN%H;'A,%$KF*%j[)cd=MbKYTJ0\D[L3Ef""uI-$OWUF(1:EE0PRL%."VNB:cRei-o*f4I$k:uXK`S:TZG*ZM(f3m9PK>q@Nn_jB[eT5R_s4n%%HR/J9-GW^1W)[`]0f*)6TE8Ci0P$,Q/$3-I3ZeZ>_jsLTCBM:HJ'2ncKshugJFkYfp2hk##^9'34j"HKj^K46ls%pY4;=d5Yk^k%A^q"2J\fO]?3F1QbLSL(m567,DD[!7f53kW3:o!PZYi%SEki:i2*n;De_3R=e^DU;[Q$G"g4@ZRX^D1D?\*@OnF/3Rkm?M^'-Po]%4#)s?Z-[5kU#pM;A,!9Ghl%HQ*XgbLpojbqAp9s%,)KlZb<+uchopNLZGp.<UN.beRe(Nt[0*6/>/:8f^B3^eQG^ml*o3Mu!p"ZS%-[OG`(:;XMC2UL8-L"to.?L@M*N3ugQ=3*f%(4:`1fK4DMi5DAE*q*9b,W3aW-&6O_;>7M0>NROa-X1_0K*a7/n68`ZG!k;XXhoV%DIZ@:#pNH;:^="jK4UEHib@==)c-\28:ibp+BdGcc;6F`St`L@&_I;;"+7i`2o6VCeu$78Y[P,%SJ]NCmLHY-:ij7.Z"77o(CO8d%jpQfAM5*RQq0i-A19><XDA*=g\H(4DDcS_Z*iqER*8'?"KT;ec./7BaT"P\VR;ap_945e1>V'*m%IUEI<bO!Hf\Ner[#JDJ#&D=h%C7A[dD:CQWp!o_U'TM&;MH6C]-Velh0V]5:4cBBI?V&+9k(J3cN9W@K'GN?r_q=LS1dLW%.9Q<G]%U5pg+FW!K$H49*4ee6\gI=:%+#7_<!2PnaAWOOaLm]+Y!f3m]mI:[.P$'YF%<J69.]8&Q9+k,+WY[U7qSd__3A;E>4ZV4.JPK8`WN/'8)SOSB@KHRe`Che(dgSbq%e/"ET7a0#uHu3Y'6"!9CbB2:_`6Y(j4i]fodZ0i?C&W8VC@aNS;MO`%l7rm_C*Fm&MB.5V19o93"t!op3ot$pCC*YOR6Bb?a\LSD%%U7/8'Wb968^dm:B;L21k[<!d!,sSYgMT<&Au2K>eNnb',p9Y(/M1a_f3@4AXjBPaWs'>D$\h4a=pVqu@jCI8=osIFk]9M72[aS<%kI*l@(Rs,$k5pX<#U1V&I;PiM9figp("+kK4%0\:QiXmT\-u3_#\g6eZnNRoe7?Ob:]'o%1S2(bd.3K<R1sM&Q)l/77Q.uKKKn:1%ZdW'i(7N(*GC4B?<^$"VZ;@89/X_=_W+o'GJu<KZX(gPBM+uMq1SXi,lqbTA[l'5\k8]?^[(.3[/-.R7j9ckSqO*[mm21DJ<qO:0%Gu['s&'nIa.QT!fcRW<CM^n4Zn;21NGZu0(;EIRX6YW;)gH&?$Wtij^nsk4N?R9K"F9\SjB!k&dS0(=D2Re'QNfPo*;c'e*GG&NN%M'>F*k_e<Yh/gciNd9R$4bet%?UpclHA/@H+)"et(:HRL9N#q+,0VaBbe*S]`8q8h@BotW_k_Z^^gMt<h*N2b0W(W)J13OYhMl#)%++eK?B4*))U1fCIag`]l_tLF_:Ou]#j^c\.>&oo3*_OQ_c?L>BY31h\T`sZ78SQT+XSOX52,Pfmo[HBY<EnpZPr1uL)gSo2nbl;A%&P*s)ID1=k3%JPLOi+iiTq1*k$]bX2$]gH)IOH-m+"c%n(`6[1l7j.Y3:sWAhUt(%"r'PPJ"^B!_+>09`3"26+,B*Koh:5U>LFqd%X(Ui3=b5.Aakl)&8Iu%/Te*&l!$sS#!ZPIuCH%Qu<1$EaeWR]Pot(Rg]\VYG6R9Jm)S<LT`>5sk1mGFT6>f"0QJaL(^SI?+6-'9j%#Y0=9"`ShgUMdC-$'_"ZYR7[^)cZFGB@k9M.QY)ZbMXPI]U+V8.gV`jNp-S2h7*I9<rHGZ-]nXHh;)gGZP;UtK.?[+"qiWN:u`d.%c[EQ2^$l)jhg!73MRnA;mc`$9C&G18O6sGb?4LABjCZ$lVl0SA;f.p7:bo"&+lQ8]VGh6\">8]7;!K1rdHF.u;3A/eqXPEP0=CiI%b5VDllT]lmoq,=:IqJ$HX5Em3rr%W$S(eHlhS"@9r\(mU"6aC]N<)0sID,NiDa1maoCi(;cOPa/mHqrLDr,neNCCV=r@J`]0C]#!%c%1tc*=*VBcZUGD5jq#/IFA/R,Y3O>rPJT-bCXJf=AdB:'S.,5BXO<h*Lt*thYds%UEhShjFH`/$%Ne^]8=E8LnlCfZ@*C.%Cbi`%oa\o>ajCUdLR:,EiI.AodNsRHGou7O5Hjbi`<gWoo0-[u(M0(3!>S73_?rg]:+lGTfNV(fh>@e*7%Mk?'fkSUJ.)Cp]WClM.*=&R%(n*htBP4sWU#pW'Zj58cOXb"MS,ieK9D8NUj]+Uus-f,(<r>f&cF1><H6>J7K[/Y.Yd19rCA+_&'<la)"Dk^(@`I'Mi"WB[JIpbf%"#6&-h?Ma-\H]u)7(#q7"ec\`8`Nn3<mUpK6P[O]+GQ)GIQjT[0cdTB_7'uK^d1lHf!\)'JDCB+QY"PJOYi@_[J<t<HD;qWB^(+f%CqS%?/]HE<ZiJB@@@VM?kN:u9X(PtK$URWOPTumB@2+]/E'`[lIW88K?\+7[O].G*^rSpqI1Q`d;As:=A&)c%jb3C[RJ+6'U5Ih\%Gr?,Q#Ea._^8C=OE8k_"*d,*>;X[tKQ)biK7:!eSM;s;(;i%JSHU"sf$Y3fjm?Etp4c>g\7"1*7S;N%aP/kD;9g_cSigVXXK[lTc%"B9GD;W/*s27-sr.ii;rH<<,60^F3d6UM^t-T,U%$`BuX[98ZmQh^Og9Wu,GYW0H5bk9]>9fU7X@l:eK2QV`[F>"Iol)NEu<S&]t%HaP:RJ9FJOeY.)LKA`C@F]Q=,We6(/;?s3HK[0F]QOQYr2nU#^J`;K]m;_FdVUY=p!<J+Ul.+sjTq;Du2^N1nj8][YqO$&@FWABr%&BolP"I!FC4cg3khpTGQ%nnSXY^+n_c$?KQKq)*16r+cQ@7(-KD?_+#MoV7k;>d2GRYr_;9G9EA]N-_Pe^M#^PmiRW,ReYsc[a-l%T"(kSSa=*YLUXbo>Y@;@"p;mp.I^B>$eZ4QQ;+r=N]\2qY(2b3<\%!ci1/p#mLJi],8"3!XTKS71\!ph/'aMjJg-D9!fTR[jlJ%o%3!9Cp"2rA!3=neZi3gukAL5L%!ukQk^X-(@F6FRP9&aZ,.4CNp/c)'dDS]1WNb?,2.jTMV.jSuD68lW3/*&!-Yig@3lD?LOoT/os%H;dF>@H%>j>P038;5KsJ6JAl;kBLP.[RXp3m!1%)b9O>"p7/knV24&DY>-q/?Ceare_'pq,o^/2#62:KoYPs=asT0'oRtqP@jl7W%L/N;rrk,$sa_aG1]XV#lMc9Bppi3Lc,;,[`k"g%)NS^2!*S]L@PfTWlA<na:%g$&hMInqS4`(Pn\C.Bh4D%/*<b8tEIcL9Ap'[Oi%"'kKoEE0O6P3%#g(b'f6CMjKYSZPPk[=Z()o.b2Xoc+gZ<Ca#R%F[:K+s4Y.LR3SX'mFKH`p,\3Z=,%d<'igPq5Y)@L(oP5Wek^n%\$B`;"I.'61BS2T_,BW'>0n,"Fp)(*LjPd3N#!Ys1ra&+@lQp("LDUrKi8G0%+9*tiBZ3J6WlJYrFe^,NF=$r*l.8,3rg-T#+ioX%TPbgGdarofE0dH@28m3'[!97aQ+5E81jq6MG*SP_2n87KTiJDLJ0*+ebDrhl?@*fD3X)Oo1WC,SN<pGsO.$Y<`[Rl=4b-0]gp:)^%it20B/RVrI/5dt0NMrjc,"Qn]35fR>0(aE:i0tH@Q$,FO3aQWgkLb,U!/f\h$r$ssVep%ZD$d:\Cc\rqBF-JQR#B[u0cVHlf!,BO%Q'KP'N]8Lt(DK<lZEdLF#Ok'.I6j]QeCo50/q\R:Me(AY8!_u^1A,&V*`]AZ#2'4,/<0a,(VhgokjqND/]HZ4-+,C+L&@:;66-Xg%gi)/l\,BIai0dKMY58OMBW-C0N,hR72q*^HGbtNONS+McJnELSdb3GSE60`=c3YoK89q$%MuboBQPia_&HZ_WF.S'lF#`5m`nsDC%P<SJ&b0K#`>]U)p%XXEI2#E#X22@Kfr&+!3dKNY6ns"EuV1<7mU"GZDD^^NV,Na]M)1\JURXn\7,[=o#UB$Mopll#V[X`a9o<MXu%F]hrFT&3Bt(T5!`H.`nl6JBb9?)Sp\EZT3N05I[)Fec<bQ=lZ.%'3W+l!)$:^,%TRe;S!IeY5Z;S@cL8>/'(.DMBZ&DQ1\,QEOoI%q!+7$VJCs`D1!B]akZUG$p&#BG5_pHBa50[ChZI7(<P4g.cFlOL<<>Y;S:\Kn1h@KjOgAuN]p-jY0RUl[qkt!i%PLdk!_H)Ae+8&%#N`l[Jd&P]L1)((RaRCTF:/Ar9=C(/>A4:XB%6l=,:.'#h,_GkJ\9PhZg14><!F;G86VM1=<(H2(dYcGWa.R+^A4<hh5Gs=8s#Xi%[tG1$O.pM$>q%u/U)W$Yi\TJ^\..m&d(3SFkX0-*qQKs\MGLZt2.ddi;gc^kaO8,6+oJZ\qqFV@W.Sa;72P7)^V;6455uTdDS(Y"%35_e1h'FQ_4K8T1AS5[\5U?C.a6eb2-t@<@2Xk>Gm9#KrjkE9dTh1\12+EWi2oDmZ6&oGGm3l9L[*``jECcc[AC\LUoqHd`orN=!%3AJUL^XM3[8kXX9dO#km;$+95+,$1tTt#,LV!JW."_CEV54!slSE,^+EKN[2Uq^YEIu6PDcW0X'5DCfBFthn2$%aml`YH)gUD+B%%h%nmI;6oRCM\Vt)+#u9ZP>B2H:j#?BPc^^>jIgCUU/=cD?oI^]h::+/M7A-:+G*XgSCc#t:sJ@'lMk4Pa7dS[)!*%uCf8I\lIr&P%9q&a\hck/1F4P/dqaD-#'%36,NcY-El#8L2078M1.pm$O@Ve]e6X1_qO<f*C(F&AN\8g6-7V-]!9]um7V&d;Wf0<"?cRHj&35>@^%p8\G-IXCCi=;RUnBg!k.>aMgOcOdm%fW@VJB0'b9%,dTY=LJ4cW7K1=rrk+'-QSSSni9>MSSdl_PrP0W9^Dh*HmQf2)bnV`"eNE5%j6csc?\s^?K##oE.&(FIa1*B!"lnXh<s$+#^:2D/q/lHcDFr_S>YLs\c;^eIA4G+g4bp%='KpeG<s&&B^Yt.]9J?3BL0Mqtd117(%NCaW'(3]2dWM5lPHEG7'-2K)KP4)rt&>J(3kr3Z%]h@;+LXrq[f-f2T(gWI[[6C_+E59FN(ob1j=P.Vt%Al]ns3D>Jd_#71B0:0K%U%+'hL/?NtOhl7OZVXRTDLk<[^=>3ATlP<5.6Dbq2'5aq$tg0#&9)NBY8Kn?M86n=229Er&>5`P-[6]%me!AkH$>Bb[^_6a_Z57M%ZXp9YE+D+EkRT-n:8X5mD+@?)VL*&`D#4_P+1V)JbN,0bHlp?k]ojY"]P*'dS!*&TeGsGhjCNW-N]E%<;Ol-p.frZ1h2QpuT>ZXj%d_rhQ5X+`jQSCAUU>Gl94n52N_UJc]P/gY\HESt)[7!p+;+U]2FsX`gVrc&f+/;o(Bqu;70n:\X3!3I:ZE_PY>ho:GAEa(WlGr:,%omIYa:$jHsh)>iGQE9/S'Z$B0BJh_2!l]4HH0:Ph9%`-#.Ss]p[TrZ.CXTN&!>d=!7#0KP"&mL2cjo-6SN$b\:*s5=:!-$8F4)*4%3\PK1&pLgf<F1GN+*1UhBLe#E>RA67@utCX.D(<7(a\IfETSYRL85uD688m$13?:/m(B,KUImCGFPQq2)<O5$#<@n#pd)`ZKeW)/%l&C4)!=Cj!jP313e7?`S0uU*K@j?jNF`A3FlU-;>QLkreN=)#Ld\Uct!\=\S"^.Z.EJS>C!!0ZSDONoGH>UGGq;Z(^KRs:HkpU3U%:/ADiE73j-?mM'i!bm(M]^i^4P^pt!*Tnh58d06A/WH7Dk>4!`Efj'';FAeLkbOcoFt%UXGk;NLYV_hHdX/uW5&S;[m53Um"m2.p%:0ZY//Xu,GXN'2A/pVhIDMM\3Vd]+R(5r?6U/'ioWjQ]Ki3l'mcHD(iF^ELNfZ,UXaL0W;i+f=KW-+T#aLO^W3>t+[&STpm.I/T+%)e[^NmYT1ujfHbniC^rW<Y8f8<m'_$CB+QK`[qP?>(m@EHA.^"U$ntO_]a$SlP;V!HGF^37^fQ,)*7s.[FuB=$pZfV)M+8Ws/6[>%Yt3#_`/)Gp/JH5pcJs5aL>B?M!d:;`A2tVI5i-%6n)PK(TN?9QiA/;J+."-;PZfXH8qWXn/A"O*YEsF+]]2oskeIkdFYqhJ_-fqH%TrM1YA![44UTR&(fRWA=N((.pk2r?[5Ph*4o`r<.pDiDM*=*A<U`%X&F7FQ=E7Hl(7=VlpDnn;G4K4TVdHfC+H1CPB#E_D;!6MW+%<f@QP>mdNt'FjQZ'Z?\jk[Y&%_a8FG@#+B-1g53(7m(Krb`>HP&F5b'o"n.>@HUrQ*ag:7Zj9+rkI1?0/$OgG$<u'pRd4+fOdD$W%@Y'B94KXugaI!sD&YooE#Yt%=8QL,\X-ls+)VNr#*]9p^:-+^gUu>,Tio97ee/Ub;.6/t,\)f2=Ra;e72;4$*c?8V&/NgHl2+/5,%jf8Xf'$^pP/#$0E9OR-mX,FQ2BZ!^'-*A8^+_drt:J%#/KZcOG%'Ff0e1)S0^2P!#I9/Z-OR`ecYU.dGqJHb@lHaE@P0d9BX^%iE%#Kko)JR)fEo@c7n"LA`nji$n\HOa3nI]RKsaeWRP&EhRNSCd.:P^Z1K5sriAXEte?06%/1Ic*tlU;oQ/bQ1d[)t2&l;nth=452#R%?SPJp3s_-=kHk:R&l\AQ0e`cj!!CKU*S2"u1rs&nrP=mT'NZu4]rjF8Ag',P27.MH@O0o\7U9@OkffFjYCSnVAR_#8UhhJ(KrpqG%j>`s'8l@E3X]N0HaLGI,K]StQMX9/1TOtO'TFp(Q#<j])>o$),LtJFq\$,@Ack<Iqf%f7=((@f0I"@Q+(7Mbc<B$7R7TDj;qRBS+%%M?`QH/$ItB6kIQ5O>>V,"8f@>-AoLJZgYB!5,2'`i:`P=6o5mm@6+=YJbG=QFmoRO]Ylp!C-6sjja.EVNP>hjt.I2D;tm/gt<@p%).%>G&8j$S6^?6g4t>KomEBom`RR]q-VV<=X\fmOB[p)<8k/.2)V-8"5d:Ej[\s6@AQ'lA2:Do6lk2_.db;YE9BckN7ThZM(lcaY%*.,O3M!]1,]a^Mfcqr7eB2R"4_G/rW2Q0W`#QQ?\%FHAK!]!rm#].c.:TC<j5R,Na.u7@\*K21i.5S+h]+BY%`74Kpk1j(.UdIT)%7GcYOK2Mkjht;t?ne&B&KeBiun!H0QnU2q:<i\\V.9%37(&Ff]U-F@X0-i)?G,V-,s&>=F8d,j^6&LSCX^4$9"5E/7:qrOmluCj(%^8:TQfSQ2ta5eDjC>`9[K,H,?[bBeagkAee:!D>KU+MJ*=.Cd]r(:G[!M?NkW<>)X$0W["0L\X6$E[nCjd&t(T?[bi$Be>k=kdMT%fOeV'eMdel8Oio#<@NbSH8T/sb6A^n8CE[0OMZn/VUDCVI-1#PW#@?dUR<TIP,s69ogo>JHdiC]%#eb0W%j":(.!qB!t\>gM`E<7%GQl6kV%Yu'`n.mU<RDX?Gr^%,[U#GOi&ahFl&V=,Y/_eg"NCR%C9*MPM>"Ib2;&_J?'O:bZn3*%=o>/jPECM_=['o#/!+6AO:#N.%6>*rO(`NS=Ue%!V:%ZeeB-i.kg9q^VRr&g3&%sS8(QXcQn)P$_i:r6Sh2"q\Ma6.3U:\,E[)d5Y(r!pSnL3Ful=@D2b9n&7gQ:[`%#,ef&36dYhj5Ti92Qi\]`2OoPWT?lCg(O&dCUH_S`D%l$rD_bVkjE1ZBHi;R9NsQT4n:YGBQq3l+D5C2_1\m-eT;DRZ)`t;@_39d%9<Z-1(%ia(*XO"[@)R5)9/@n9He4K3_u]<Ra-'hFp!eFslW*C;<fg:c1#c;*TN-aR)),n2?\AL+0<Yi.H?KO:6PJeY>]I8d5AD`@%Bbf.;,Vc?&dJPtg+QX?9,a0Z$qs[riA,p;]3p8l%O/tE^F)a+o#hTub:[6KGUh7?``2/mlC6m?XL.j'+H=AY8<,GTJ95*NNd)7!j%#6t:!<+D`!>L]LBMA:k&MfreO56>Be"Gr'8GHZ8932u[o_.ia'?r3lWM@u&!dgQY#ITh<D1gSXAZoHl)KRJr7C(nV>.WMF>K]-Rg%"%;I7>d&"i&'II:0X.Et6A=R87A"]7e<#fl'mQD]dF2E!Cl0gUDF9P\Y@q'7S-q;1VKlk@+Moro"D/0Zdq6[HU)Vh"Y3&7Y7<JUQ%4O:gc/r(XK1eY1Mi$S*/`9%-'lCt.,RmrSc95]'Mc5,it27.s*%lGFY+'>G0]a!n\=cSB$j%1;uSe$g<RrDadBiISZ<m?%d^>;Ud%TUssF=?T$3:[4&lMK3JnaBKS&#>pX6U8e?.O>kkY*7K(2YG-/]q$'hf\fAblnl96W=_H/;UKK*H@c9UOU5BfE\tp-4qG&;*4MU?M%XA!<0l2ujAc":?27G2$Am(tC?AnRLrLVB1;YoVMP1kXl0cf<+s)B,V)Z\+_)`O-B2@V@=4&+NG?ba$eVS<f<sBV&P!GH;.jREEpY%!]h]%Qcc=a5s.-+PdD9[G&/['7^WS4Cr]B%AcPZ6@agjJ@)+-q8Kod^cg+2YD%d&uLoSVs1_Bn_+Qdc$;lU9I!juh?qCmq\NDA/+%cnR@`JV+=mW\96i=jDmlG_PMYdL`YHS).\1K6UieK9udeBP":u^pH5Z?<9^3"XisMMJG45En`,5S&?#/c+m;ke[\fTAa4a<=$s<e%M<`@)-"<uVcBL^h&s47jhhPgl<V@A;e"4M`XnA-k?Bf9d#,D%J0F"j-.8Zg"_ID'Pi`n^joA'IGAq8a'[PT:cLX1LH46Z8Z.AMib%GW^.NOR**]+FIp>A%B#TF:l;C@quhCqPS6Hq!-A_M6X5qVP$$qa:[jFSVMmJ-0`o40/Udc,-nc5QDc\<M.C%,+E05E>A.b\Zi`Bd%1CT=6Zc^VDJ%Aramjmd.fF5k7?(]\Z.F/BI$8/Hf3l==%lWQHDmV:GP.*i"lK2SWfk!P'^D:"183q6L]&<0?N<FF*`;6adX>1YrH%Q6moheCHg!UCYM;Y=2Ga<:^BG&j/JH:OU.HPub#R<pY,*$O7-OR8Ubi<??*F/*_L7]$VK.6ajRq5KPqg!7g-QEYk)qrei8QSe%js%'].7Ma;`L-<[QR_Rc3XYpRFEcChYkBUCbh#aN>m[4VqS^r92l)nfd6UCRR<.D?1#$Zq,E3_"6lB2<WE?/W2/@BY(5*/33;'qYsN*%&RR[n$Rc3ER&JE!RI4#d`Kj+S>H!qo#kmO5TiH@B'!ZJZBSJ8r#[;D@DFc93I<AjYJKa66E[6P(fZ_]'le/P['nfV=XJmpNNiseC%_'uHT(&P.r9[I),1QN>1+Z=1;Z;+o_W"*5dA5DIOe_B.bRmD#?#T$ZGQ7aGjM)B][n/=9[cI1:HWd:*k]$#b%3tL>?BiD3^:+\9L%=*.\"ma2_V>=ufn]opsIb7AhmWDeFIo7[7m(KI&?Xe%$sblDr>!G*srMkB'\9JTQk8l\;UQgb$Wb(o#q;:IC/;/K:Y]_Fnb>ZI\S%XqV@2h2:,MKA]TVOE2e-D2Cr7*@SQk]Dr#6)FKa6O=M_Rlseb-8n0tm=R:(DSRp&d>m9sr/R$=1Y'&B$R?:'nKTM2jX;1A2)hF*q%W"fHe*0&+[d;<BHA*[1<cjmE8imlFBf:<FmS:jkW1,da(+@RNJ%=p"UZ"Kf`RHC_DKH!p9UQmWmHO,Sh7!OSnlZ@+PV[fI[[tI8K%H/nt(geuF2A>"!Y&^oeC%;Z=,rVtZd$%Eu7Ys/)7!IoklLqs:3G>E-5XK_p5&qLK%>C[8f'"27$^.0pbpXB/?QD_<,jrE&GS==l_%?NSl&HE-`)mTQ4!+H3AVpd,&H+r6p)V;Pq<gpkR:,3k2/(7Rgrm@4Xfcss&_264*,\%jYUicdK3"-BjU)9AO%g-T]T,tdQ,DN&\Q%*@5X1&G52jh[4NmK?f*fa25Vk1$gkQb9OsfCp9Um(96KNoZ[N%LVnhpfL]4>=OjuZrb(iJ@'9Q=&?Bl.VY_E[.dgkXV@3SdLfYp-%k4_`&J/11]ZubHtaE3/^*s*uP<75S#T`[VG7@,N^?m*XN&'\eDi9YR4<]fj,(\a017S<i)k!V?KLaI2a[W#pC6hMiG,a(rZ^uQV7%;dEP_dL4NXa]>*f^Fn28e=739^#Y83?6<mO*ma(e#CD[?#FESqXEW=T//K5Pe;o_H3Rk!4/X>tA#I[7.-TQ<B/m/lZ/;H%CpIg<D%YA.lGTIkVaS@I7BD]-u(?\F''ceW"&2d]L\pPm46'h=LL:uFrZ(;2'gm`"651D=5/J>tTC#n-fG1Ka9'Vddu`BiU/A&IP4lomklS%O]E94RlQO`FGj$A#@0gGeP^;V*ra;W%`[o(:n`2Eqg\m(^;F&q#q_,C9:HY1qoYSC:AIXagKh5qMDL3D/t3*L@hY1c+B(m:#_.3,%:u6MH@Q?LMfltV]"mSWNNK'=oCl/ZO42>RJ1.>ePrlE;31c)N^@:%Sd%1L`VMq2^)W(\;Oj>N/@k.A3OGNQk41R>8Zq=VA#jP#@6%@4A6DOF0>d`8[lqK/6Oq6KA@D"rT*,QsQH+,+<hI(\)4[p;lNJWOZA((?j"p\tpio!iNe6rt+l1KoG^m!lb:umTh+`EGuNE&BI;,%D3+!u#Z-8<iA(WLeOQ6*S,q(U!h<j_kYPSp6l^`6j@l<6o8Xf/4>c2B+BUg;QjibWaT3S4i^A>JASDk-,MC93S)g:>1kc^_UXqF5%ocO_kO.[C5):[315#%_3OnJDT$OI`9_M>Q?b4)>^L?B,tjes!fM1g4k='_UN"h7i8#<70E2."]/;Qe-[5b3XdJS&oJU8e1q[H0>e%X`S3>(FlO>]iPbBpMuSt=E]$ER"IS80[MV8(^pmBIJPb(8-&g2DJ[:^^Zk^DK*Z`B]q&J4N^#3o/L>aTR6S*5";'Gr'cT;Q"QYu:%(RYJe/.VVpKSMKmm,22Dp3IJ>0pj%aQEP2qo*V^9=nqFF2<ep4&Nrt>ckUWCNi#7Bp6#djSo)Ht31O)[Jt9Y%]CsU@5%U:.+0\>(%%*U@!j[T*A;]e4ua3GtmGgVQR\2+>h@"NUnY*'r/LrFo=A.]mk@8\-)eS7\TMaN&6Hg(co=Kq&rBbdDDWR$93_#UM8,GODh&[Q:'%-G?0bK.%mcQC'Ia=T,B=DUV5On8r3kQk484W]P&aA;=_MW10&hDaLN-A(jN[>ni98WK,m/'O]J5Y*'#/"Ls+2hk1X&@t_?<9VS]g%cLds06Z<$5\?!oD@Ab8$8S]?/^`N4^dOdP>(?!S=YR=0C/D\60DjAG9$`&c+R)U0Z5s];p>dC]65+,Sp#S:(7hi9V'8R-*tedEHn%UkXT%7l')=aMaaSQ;J\:ApJ?/!;f%i0hP3M`pG`3Mht4RA'KB8+^&)+;jFE*.T8*\8r2bTSBMp#BoYq3U\.dH"&+CJ,[%]&I"n[K%MT?.-'ZDXhLh_+p((=lAmuU;<X.R9TP@TQ)(cCc*'((oa,XtjU.k2;Q<pQZSgnUr#ph1+:g,.Xlhj4>j(J%N@[#$WDajRe&P:6LJ%Dhr+J*fVB):7g;.H(C%2;A2&ga0:U=@R,as51d7FK:faoX:)ddnh,G]VmjaC,V'deeU*71``ZK(h!%EVT0=Gs:5dQR,f9R5]4Q>W%K8PEl"1p','s!d.8b>%GBCL'E,k3+1Y<]#%n&\i3ElAn@B]5DgFYF)%HZJ0W7TZTbeVQs.E6Li#7FGjl)DVlGm<Hag+[8Vtqa4Ws%Dhu"o5_eltELS)##toXU*>Bf:&a,ug*C763e%K#4>B8#F8>hK30h3&hq>@N65fd[a(-&3Oh$diFPlXEfnuU.23AlS$0b;m+!OU2=%#_D%sgKKUH/dXfK%!L,gfqb.KdV6pI;SN>9Pu=OTfE@u"C`M6cU#m_$rt(>Lk#+lTT)es*=T_tI=B+#o%:;&=i:aIoL/^Y-HOm7p%dnJh]*&$fS@[,i-?)e[kAP<HMX&,[1h3aW6-]*nUKth?B278$%VWb$POpjf+L.]MOi(QOsAo(6<XaFp&$9[%@Bol$q^)42r,%N4?%Z%gZp9!i9Z:p8@d^>jbI/m`.P4R&)ahLLK/.>/,e*!YouX'SWq=1BS-"4<Jk]&@&8Bu?mgcGj1c6_MK;f]S^Xe[l/i;pG0h7^?R!%OdP3GA8\BJBa$nRjdn%RMo]Z'nm_=oH02B=]:&D2>uK@G*U)'E3[CNU6'tHV,D_/!lcU1&B8ZRY=#S6`c:*<TBULb+9QMLT)ZV%T%8Lm=WK0_s:++>O1aNVeXk>F)1b.r@W"$rVT3'=It>8s1:>?Xk$h)mPdr&DV21)]gqMd.5QAQ"i00-R@CJV@L1r`[:dpg.7'):KZU%cp:Y>`3o6:)+lSR2F+Jk;ItSB>q?4$/ml0^]cgB(`j4fr\*_\:%7(GKc1[+S>7Eo*Tqe<;-,<m74^L#!7@Y0<2`%Glr&F]^Pr'!e%_`hB2<;FliL`ej0]\uH&!ChES\t\J06Y)f`G,VrrBHFX%i$5;;o@=McF\]e[M_V09_q]2H?-n]Yj?UD(('07QdAqi0Qnf=\oGmuA%)"/Stk^lr1qS$926@iaGUYlHjo]QYNAM\mrSPpejN0P1E!iZZnkkM)j_/r/Vp+3cUr.3YEB=:^/i'f4%Bpt/d@(t5l2N0.0RS"c9%"0s$WTpbB"!7tF#:<\^Z#`lEm%nJ"`cSB*jn`q^V5rKZTNFc=;U$8&d1AC?E4]/TeDT>+ejsYhffSb&8JI#6K5s/)jP<p",*;6*Q%#:PhpJJ=$]pm5#15^FiWidkCNNZ>:pfOe8CC1hV&RU^pdoiU'57-Ja<3-+tBa#+Tg)Q%f9l\neNeR%&-Di!7<"7JnSNo/+uiiUkU%N5ZLh\Z1N&mD\DqS>c&^$.'>3X.)=h*kLVu!'Q%5hc=1k"n:GMpUB(mUC<m!,#/XP^:ibfb]bKmd?Dr-DW:Q"NWjMa7IJXW@d6i_%9ZXOZ\h'fU9&2J&:B@VHmVU4npstQHT<LBOr)gbU!SX\U&#9Kg.[%herue%"/&uLm!Z!Df2EHmF&@C%hPA8g`70B!"3`pnNbS;Kt%L&uc7T/=)XH:(.@,^oLVAgY-5APG=HKf,K&8>[:Hj>"3GAAnd'/R$Ye8[H7S\Nr!tZ+g;N>DVVhM`L9(M4IZ$8*InAac5+]m.NNV%dS)gS!,-PEJ96JtU&'2!!&I[b+p[n;6BrM6GE*MNEu`l]!^+DVC;V.O"j(1q"jKqpGA``"jbG0/!h8V2LqrF"FsO(ZV-W!2*pNP3%S'B.t]t#7HoA1fi%(".dIH0E%,E=?dpEM<q]8*?F)nTnp=B6_K:QD^YB%&VU(,iVc#ZMV,kpeq/e?t/bRaHko0pAWK24/ZK9pZ,B%k".B6JAZ%J&V*WG>4=>VWQ&s=Yqqt")533g%#.AR^Cb,18CmCMQ'>j3\UB0nd'nP2C):K_W*Za'SLT8jJ\V9+s'Wt_Wm&\O6hP*H%dK5CR8&ce8RUJYj#h*f&)@9C)(uq]*HkNT4*'2qVB=Yj0'46(DhcT:!d@<<tj#+ct+!$=HLE3hpDe_Y74;bW5>E*q=q:`XNXb"So%:J6AlP#VmAF32AA%WO@R;oYfcAb]<Va71K'ota'HGg'D1O>JTo$ha(FUQE&aNkmpdZ)I$3D'#OaD`kCR3(lZaA]`6ME*@jAQ/0i'%S<Kupg+^WMO0I-%ca1)CN2_OQBg-6H6,rJ*27a?]VeM7eZP!MHRrH"Gg%WSD1l,'M>i4)DO>.8&hBCg*b.\([6=((;X'7%__uT,/%:R$gB+9n12)X:d2$Q3'NJ9GG,?s\!]7o%q[hrO/[:&p3tU0Eb0H>#DsS[j\WQ>jrK`/E+i[M$kgmO!P%((C7)9b\[@F]\^r-)k<1%$HG$8aC=Q;e2ETFXQUUFVt<MD)ZfY!%<f85P4fE/+VSQ114@n/gXJb3H>#n<pKl=_!)<bReEU_VMpfa?Z(H1u1ML_Nn;@ij6;h$_%L?_M>]Y`+:5QLnR:$MgM.3Q?L_,_?W!pO6.-\-tNb:NR]',(A'Ud@Y;(859YUiMM3I`jWZE(<<[Jr;&)"9/_J3u7hro-C0aNdgG4%YdK&io%=AZ5WmpAWWd18"C+Q$L;7l="1ZWa$&6+2]\H>^(9IH?1BcLqKN`A0qM9b*mSIqD1p?&iT\YEtO^i%127<T*Jh%lNfZR0I%*)6es/n.@[ZmA(^;>_8SJF5$35ob"e:4g2LF3=d1iGo:1GtHlOR_cGP'.&D>pFX(HdD`6XR+.,H>8NgB2g=ok/c]C^0c9Pk<P9Mc%.FEIX55H5Q"hr@chpls?mu2ki"//M4Hd)g)A-W-_O'PE"JXR+\(XikT\4<F4*]e?F'3PEH7:3:=<k-;HT($iu<A7>TBs\XXCc3=J%>S_8Yln>;CYgDfQ*U2[>W%nKRe^0QUBTF!__1Eo,8Fc*-!g!O<#JLgbNarWA0Crj=]lfU6c3qK;*SWGoW%t*1iPrEB?;3-F&qU5j%(2.XSC:jkc0'=558;MfZhO1"c+DVIV"Gfm,6lc=;`ch^FGH)JE%6TJqMD]7pXB!Mr?Q?L35=\AH\MrWKALCplC]af24#;2C7(l?W%1lR58CU.t/Z2b;Kiromp_*QK%S:TKq]N\"%(GYX]n.NIBlYufXomdlI!&d.=Zg?ApNWX:DJ^@-B!?;&&_7C,T;()/HKnqQ_"#!>]%dh,RHWq-W:auWgG(Ag"n+3O5-nBQkoOiSP"Gc\q"U:S;W&^c>%DBD2%pkVlXWK^_Zp`>3hX'QhN1$ga2'X<M`Tn=>$=f#T)mD36l%Lo\Q!Z%CjOi!cOldBM1'egdK`nfE`gRP?Q5;[nA%D_YJ>0nd8(i`r6#m%h_-n\Jfj+M]N2_*m4VTSHj$_$&BE*m]q)V1R)D/-DAI%A/5#r<R'B<VZr5`b]$-aDqad="(@s+kdb#MGdJfKdc0ksJ_biDUS+;09i^nee[V:a,OeLl,Jq0=aIX/)eqAi.>H82,@nQp0jpCDa%HmSNQ4ft)up4ULg<bju+6p8s-!]L6l:h3sW2buefX%`Y,h4)0Fj]P,nRl/te_QOG7_#p!_`V?]2UE(BkOiYNsbmg*A`Da(]<@qF*%`CVO`X:ke^;oj?'Q0RoX4p62[5p*<kgHOm+>lhr@%0GS&G=-MXd's[2f1/#rg`&:]0/qRS/WtcDn]A;XAn_@K*!2;NnZLp')n]L>%Ug6U:n8Bn]2HFajCesBD0tm4aP.e3W6.:tMf:*mF!B]MAJ4M3`,@r>.KdQREGlrr(#209B-oYl/ltM[.lQ_;pC0p^r]m/3`\Mrk_%]QdklN<5-NX5pF9;c7,8B7[0C@_R3WDW\V_=j6A'bbD_8gL#@QB%,7Pk4Dg#a-Ep"oDma,gf8>C&9Z,_kOGEB2?1n-qMN7OR%Y:[%4P?I)\5<bN$cGiFh%@$=+;iHAFL^_E?QB2#LRd;T2le"e8eqFuYVQC0La9kf$YD.;@S4?`X2N9P)X<8RjG]6;S7tk"ahSgH,eMga%goOdK(9VQcISg)JfN[,Xe4Z?Yh94Qr45^9XeoW6n@'MC)b6$_PM_8dT$NPKH?H`_U<!iml;0!4r(2Ga;SPXi.JVFml-=,LWC5Usn%;-@gn"'nCL$<,GDZV4T-DkiUL;P#%L0l!^:7PNd1%;WhgPXE2<Bj-Xd9kf;bBLZIU&.t!S@F5-97/9=(b4_>=-*+nFT.k#VEA0KD%gL:l/heCa^>\aq\Y0euFCG31%qk;'B/6M=>H@b>/+eh87+a<4WWB.[+3Z-6s%]G-\NNWFV()o\T@HGd^B8@B9:fnaDl$J>#K:4&f%RStOCi&YYhNjW\.AcX+\ECb)3Ot`G=6eu/Q_:oBSr6h8):jp:tA-kurZ^E$PK7,"3g#<-6@S>1WCrJ//W#ocV"]gZD5HHbd!Cdr^%HT5M;'U\!QD1Wn`]S*5'n>ri+dD\KY+_,_>MKqdLr3$DC.DVd48.83h[%Rd$)V7,f(g>]4*0bA(?XbDJG?oc7BI>).Zr&eh\0O<q%Gk-'o^`,t]A^OX]LXZQ89_Z4hEL\G&(4h+r)$H.7"8jBQ&%#fY99s!E4.E9<4$n!fQ"n;LL(+kc<=chF8?5Q-6@qH+0FLFE-!s=G%44)_jQ/S0!3,ejnY;p+7%$Z8bef(>r4OBR6Qn"ZF]:%PP"DeXi'uQT;,$?USq<hiAG\72453pp\EbcTABXHR&RT*9<89.^D68LMT%\Mb=a!YWG59=>-UW;;hiJ0m#poeYo.OaW$kGbGW7Ceu!E*Uo7QLpNKlZO\IbTTfhu4"iN1?Z:p6AcH/41'R<&_CNc9G3prHb^9#8%/S%TFFS2P9\(;E<*pm;SSXo2NIpK`NP-,DJ@Mnt0qWcXaMtPK^UXcb6GAcm<5<J]3lsc$5?=1B'(49cmkCk[^n`rtO>2g@pacr7E%!H?n=,<pE%/_urbN)GcqksG\[lq/Rf:QM/5nrhVVMNX$uA0BVHX""S*e!nILM(Ed9XrZCdY"W0EGeCuV*WLgMAe&-f]Mr=GXCOsX%kFml;;Xir=ArbW43W\Q*n+Q8!Q?o[G[(-g-\+Bfh.rdmF;i`m3@/H18;XL@Ojn_;L:g']I=$[fE::;qXa+e6Erp!P!hcAonbfKn+%dpq85/S'`a+.r9s/tk,7[h%%Se=V59=/;1FY<!1kYV9nL2\_-'DpEmd?WG1^na)-W@mehKUSEcs1eEp5Rf<7rb)m+oC8+h]>R3H(%)^Qr[TTFLg.oVt3phlF+Grl9N[BR68d*5Esq^>j1i:,rm>R7<%?:?jT_S&@\kJ:K,Kjk>,qQJJq6Ldp9(-p?b1__d7c&,^R'Eus$%MV^)sE)=YR>ZkZL#U5nL;qb"bO%/!7JZ`_feu`J':55)?)-+-Z/JnX`UtOXpO8,,!s*KQ(.hoK<2RnKB)eq4e,B0U0>ethMq3k9(%gkC7\ZD-_/)m.ah<Z6O08cn6LA$A-t82?/Q&Q_Bk!\HaFa8*7C8H$RZWIf%W-]u-KC_[nG>_MttY9n%Q*2&4EB/O48&8_m%)6oT!%N`XZuc5Xq9[)=qqno;[i)i5"'4TBdR;)du<:`'r@\WT"L1SQa\J=D9enJ`*M<`4I/#^Ms;-q&,4VIp.IF*Y8Egf^;$WQ//b(3mmB%h^Rc2^u&cD=+0]Z$AJL0bp0$hdO;%hek;1mI+/:AQ"JjHaI*`R?R51JFAWuMkuEV$\n$)"#DP(>\R01nXaSS#PAhNIe0M':dprP&%)L6'sp#IS28[a=.<nYRC_;o;cGo@^a.@EUJ:P6bfhoaDanhcdt,ocoMVcfo(nhf[>A<Wo@.k:ctm^qkNOK(G1SMQrV)PL9TE,bDo%4([ts81(33.o2-uh1k.c-;QQ4;%m6s2uUGcL_&,5hs8t=l0nK5n_>tNB\q0b<gr>KT"7sop*NSQc/g'LRLNi)V.B/HBG>H_nhd:-%9dWZ2aj\PrBrUZf<*:D@#o=3EZo<9a<I&=pR0/UGSf69#6sBcaF9=,K6-sboEW_;+2">Q?H+Ji'C59dk)i;.Wd3:NE<d>T%_:coY%9(&`BN@%GBQ)DabBklaD2L-4A4RGk7ZHU0dkJ,>$Xst/*9!Y4J6I8]')D)CF:Qrq"9?9Z@'Co+DehQBCajXqoZnluB,=#sb+\roL%V=O8N]P?W_"14C&mu-)6l,lo8W&^kQVNg-\BPlVn9+(*M'0c"5g2];05#+qZ0D88An)1d@RR\QecFmi*R],[e9WE+E8Pa**;V/9I%-qL'fj&nU3`SKVSNo[\sZ^V*$%D#efR?HYd-n;EO-D@LRRpsasC+?bno-$N>T1I)`LSL]N,+oY=)q:`qCKOSue5UG/SJ!dba.,FK%_44(!!0il'PW!C0C]O0'bH5h?p<?``eE?q:9'!fJG<KFMUhF-_6kniP6Juc*E@YB(<V+RFVJ$Rn1^]e=/G4?!5U*XmX7L:3@JG-f%n7`,8nK/n+o?c-ZfEE'`3WLV8T3]sPYe%+FY?)o<+IQGL1^5"P)/P8r:n@@e&mL48@0[js(HH7IXNV9*=QIG_$pS,dp./de!it@$%^P&,-mBu#gCSR\5YET12X=YE3`5>A]Gf+9h/JEKlk*ciq5JVPHJZ4I,W@Nj;-HWs3CeTX".'sEBo.)C0e=1jDD3tbWF4kr3I=cC#%ooh7VpLHaj(tSmEL4EAZb0'm2[t$`cS.R*0/-;#AX$]TATIJ?1Xr-p7%`Q!<VCe9;PMiH*/a8:BGbK3<2K:RSI[h&q?m<_S7mR->%#hN);4K\+<m.)Cpb%ej?@ZPXpjA:8qI:p-/pt6GQQk^gX4VqD&$&(7$M9l>5"b=Zc[^_LnNBciY&ScsoPS$g$F?'ercBn.J(G2'5%_p#h6=fLlnO;*&T'%LEK;b?QM"QDT`+BOdV"%@I2\l:6Tpq&uoK46S]+R1.bf\FL:J9/X/?S,18PHjufAFZ`EZ:4g+HDUhMjA<Ms%bRpJ'4YSV&!B2a=:IY&Z;eaQ-'t.ZWjU`]ha%-TLD^WJ`Cp.74`2psL8E*cIi3:X>^6E@6lX''dj:Pr%mK>OSGZLeRRe:]![NQuS%<Z6gBOTP^Y%*HDVHQ0+F]k>sOMH.H;l[ir6XSDQW<*1,8;^L9&h#KEY@aN$gQ%hbUrkV[Z%Sg6T78/[^p&s,\Y3F3d`l>i:;VK(u%(3LW+U#IV]D3lE;!8L=\"e1CjHIP]Gj-pE45$N-][N;qaS.H$O4Z:'5#UHWdbO[1@:.3PGaq6*Y3>s$NUYi+rHZh9$`bmO3qmmq"%70OljL`(2!S3+Y-:]l)+j>G'uH6[gf)iKLjs0q>3HL)4'O%g(ANl&Q,_8$D("8u3XUGQsfR0]USRLN)Z?G$mYP\Og)hD-5f#E?8;%Ig%R3UOEV^=)1`1@J6W)f8*,?Mgk'J%9Y@Xr;J<^U]]l_66ij#)K0/S<WsZOZiXFcoblB#eXV&^+Dhu7\Ags^Q)6G)a0IPC)Yd*=%$4S\p`9@gn=UODJ1K)pZpt"q!%B1V^querQMV]$8$hi0'jRa+[?CE60D],U6-+6Eodh)fa'#dr`BY\*1Whsp`g',5hM\fibLj2A^%e;!B+Gs]WR>M;QbhRp>"+QJZRT="e&j_1W?Z6=\CLr7SV?i]53>?B36F/V\#(*.)$T_5flJFX@"CG\V[=P@60_4loUfc02um3)mY%XCuZP*-+TA<6V;`TQ.22U<<[Z?PtO!`Or95%AU4g?)W18G>/I"6[B9*PXM\L<-i7n_?6gl=;,:=]36rp:^L&JV]uA;F?PAZ9+B"_%75]D&-K[_01XohV=pCc&^IncIL[%R9F3q@Ff)%KVlFoj<_`X_(mS0ZQZg1mtk=-Z<3C1T:@/^JCFL;8b\NrX.8N3WJ[q%'b(R.$b%7&Xp##LK^Y-Z;&98L4[62/Ks6!51D/2/l.r_gm_V!Dl`r:V15&-_q$CrRc\PCi[^L9h&pG[cE=IRT3W_20DsuXSn6HK[^]43l1?R%4QQ`mS9&sZ]O]"_`k54rc^='f&!c#<l)mGk;TN<iY3)4A4uFQ/&_N$[+H-,IDY*,(&&*A9+NO\Dd&=jJ&N6$q.ELHr@)/uZPmf=K%=um)ppo8*e&L5q/3Ee4^(.3qPU.B0l9P-a],%Y.^hi>q+U0Yjs5TQ%rMCEO'Zo'HCg'S!@6X5kmj,bD$8g+9O"KBMZLtE0N_uZ'S%a9,tM72_ra_UfEaD](gM6"O!R=bt]r5U3\tZ4"'YS\:=5N*VUc2SikOA?clW*'^.H?#W+e(l&E)K_k5KiiSDa,"800&[ACoa#'S\%>m_.c&$oZGReC.H]&lmi2`erPJT$q43>qBB!*^5Q/EG24J?op%>"WIDTppFQbKfQ%dTQlLPo?3lbbh/6dGm,C3b7)&ee2%]\IoKF%^5FUCBKXrHJp<'GD[_gR",&Mb!Up3`6rb5%*+0f(W9o+dLYT-HXs4\jJ[u_Qd,`;b=rcl\3$C%&`l9VrJ9D"oXZ)uQC9,cKircRu%+\AP!I>NYlmW1M%Jme_Ic6Ra6j>S9.S2Rn^:j31fC-SUuC^7A$6Y('k=mYP"-*jQ8U1qT'BXc<\d>,[C0Um6:CI3C6m4mU0lp^Y*%Q1<BZ:!NV"!Q7F6ePSB'+JlC7L+=8gaJKF1E!^IKl:fkL-&P!EMXcO@faR)p0-\Q)Am;"S0NpfmW$:)N&1YkgJQ't6"$#I5K3o&&%N!&0&n.'nDPpZ(<2%<S1.b"]@euT7k=/LC@Q<pY7VCGC$fsn:q47cN$I@&TkHJ3Pbs+hGqkn-p2:slpE:$HJe!=RaWZVZl?bFV_[%KXb]emK/P;C?eb3:+Buel0\0%V8SGs#f:SnQ>X!L*3>Jao+[g!A0d@@@X@du,TRXBb-A#OI/*aW,5<dZ]44L,C6eU(LF&U]f4bOZ%5Sd*e8#5NTo"b*BGjWtDAq3d4aC=cfoequh%ru(lU:R:e2HVhgR1X6H]<!0_Ug6KPmiX8I+kC%L1nZZkho2#GX]S=AJg$3q1W1Do%d_.WhRo(<-&&nSf</\7_ZC\&'@Dj?t0ej%^8ka<\0gS.A(k`r!Tk^\3;_2]d<pW@e+;be4]A')jSX"n<BK7rn*TeVi6u=nq0*lLt%OW@7G$%bI8_DS36;RR"4=Yl,uH^b\*IV&,*)@N&uV6_UmQgNLpn'4&2,bN`l&Fm"KFKj7CqE"",/*VU:hZG?p549[J=2!hiKfkaF%6</f[YQh)"^.q9&Och:BDq5J4Bn3qIF-1]=D5p3P_tI*9+Ek,W%Ar#8VA--t=&dW=XQ;_Jc%QRRs-@HMo4:+;Mq,WZaMe.[`EgMs%G@#5%D1c;YVIDfZ%\B7*O?4^1!NlM:1GX!\?72t5qM:!b&lqkP"o1Neqo-ti7;9LJ2'097.X1TE8rD11I9J7XpSiFUKfI.BI,4o6%[Nc!q\e*tt821\P$=/\.^>34]ldR#/YoRh><?hTs?E7XuDHCSbVgP!E(L%=T7S-iNK;<dcr&8B&b3!\9Q"bOnH54QdS9tujaCuQu%P,k>`^M>oJK0`2[NE^L%'M$lN[BlI`g?nul6;jC-,QP&Mck[fU9LneI9JIb])!Uj]YbMVW,N'!-MMOI6m&@,p[07h(ODHA8(PYh3%6.OI%XtD,@X3=-F2C2Q*%!)T\_!6(5WWHPPAB3i^*dlM%"@KM8]U%;2P"fFg$u&+1"sT6p%s+[oU+!^eRE8ngZ`:1l&Fi38OCrT%%cQ*Kl``U(0_h!PEBRV#J?O?KI-OLJ-,=KKigK]k$$"ZrZ^Hko7&>=jtl2aSmTL%uGPOH+g5X_]&J_H2H&>1sVMWl;5XN6udEhaHc%(#Z#k`J5H2Ei<8QDe2V;N3Y]We?`D9WWjWLIB&)_]i_-L6E.01+TMW)Ra"E7`=3t8=%73>`ZV7EZZ.2Tk0u5@BnAf_5lF+EFU^9`%2cB`<+[7AQ(4"b>a?M8&;6Y'2VZD]^P>[E/UeW//^f_4'R^UZ)ogWYa>i4m%\bB%e*YGBp<ZG?8^a9A&V_q6k)bDiW#dKSgK8A)h%Fo2:#*><Y"CDs<a8RAl>S!J/0!/D'QRpZqmS*NB)`R$5K2>o,75Wk2`&CuG:<q!mn'U@U8=Bj^Yhp_g:].7QK7!.)bQl6gLUs4u(%78LrHaK%HM]1N`6;D_fi^`_ncPo>V7Bm$]1.A"d0<hR?ecfre-R=_7;+rC+t.6X#o6.W0,=SZ+!lBrIU3Lm.dQp=n51jHhPIU>7,%5tY#>3rm=$1>e8;oqkHX'A:14E)V`/>7MeX7uCim*$e\ZrgWtt5QY"mie4bDp#Cdu,[$-c8ft)kNRXa+eJb^Z(\2_p_j^:YB-+TA%C2t#,BF!TeWEDm-A@>I3@c;TP&_^:j38`8e=GT67nWnTdWmV#=D0g*FK9njSUd:Nh:.2IubZub5,ZmsF!Ws\RpHY`SAlN2mQe7da%W&RGadJ0VM2bPg<l:R9XnL8H9L(u!eKab-mH;rn*Y4g(7>sIPG9>Tt_4]XpmY@t.T$D[u^^o5R].e!_gY0B<=bDDE.j#C$r6QaC\%FNp5,!B,([Wa=$-1`^$T^tP89(2M^I*GXUG<#cu"Pb"2!Z1&>#3g)A*r+%Mk$>5S_2^!q;?%I]br&<JkA44oL\14nCW0bIu/7HC<%g6JWNGFr11<A^dPc?ijpSgRu:e7=cc!:'q1V)(%Sl9o!F>\?E&f+U:8\cs!)'r5mqZH'mFB+^EMNL=2h,2YlqKlkJaeru`%U?YQX%H!=5&<j:\]H(KiU@/lo)aSe.'e%MU[piTQEYm2"]WY]?4PZdDTD5nBmBjs4HdPImPNfusC^me4:((nUS=M&0]fc2;+c*9ZJ'oJpk%<e2b<.!c>b6]\(A98%3i`FOn*lff@p:m5i0KbrpPN0rQJS"4Ro@VcZ0ROM>!h.5G_7(!a#</3LjB#2Om=ac2Wikn83l-u5]`%6%[%[Qq.N6;X3kE/C)2]2$L6YbZ#LlHSRPeX=oK"iZ2*=Jo'e7ldQDjWEjoY9kga&%LU"6urm/P0)`%4k;30#s#D(YgDHO9H)D?ArCk2%=j=gP!PLmHT%%4=$U[pT"Mn^)#I!8-K/ttd$Yo/d<+_=(eGLgr<n3/iOdGW\l*5NZj&f9B7ZPg""^UNB*MEdBb#a"OFqp9+R1HQG%((>rU;&6@EN7T;n?b=`>\rZu8]ua/BJuhAf3op]c7mqW4JZCLZ1,j#nZ,0tpD46SY2-7S\\uj^aTZ)mfk_9FI#PG*W,M;:hKucHQ%a3>f(QHjZ^+g=nd[-89LOq#k/Mq=F`P9HF<.^3\hFKcHu.4#V'@boY^F$`ne!&RWM<!<&[+lShp)%>Fh?aD8N\1gG>P3oE`B`CCL%6;uECn=/`T]/uI$W`JDX+Uo)/c,osM"Z9HH^nS8IP=_d+@LILKCGQr2U1Gu9Y:a8sm>a0)a)S^JP%dE56DiQ^-;bC28@Qc]6B"X9%@TCe!AQnIigG37>eCJ2\GF$/'0',S%PQ=ZaY=q?kjh5%`;br+#k9'peg@HpBf\6blZXop?SWHi+&m17s(<Em^e(=l##a;Pj.k=sM%H9$#FX:0RaQE7`Q:*[%oN<7#j$a&$f`J!Pg["+OgMRbh-ap@dS8nM<l-:;J^!phqs<7+h\=Iic7KBNWX<oZ<X<f"89#(u!.PbbbU%lhAKV'hlFZU>;/giT-"eLm?>_V^(,S?s7[Z(N$'X6<*"t@Z[5g%d%XtAWs1d%E4l!T4qHU1GN@$N_I=MQLJ!;99#/Es&R8">?PKl%%23J_;aW`I-DHb,=Xt3Z7^E^CMn)GtFke6pG6\j'h.Zt/oDDu4U)LT+M@]@H%R/0KnMdon,"pE:4-V--C5;"nZM1DZKW5Y")G3>>%X(qmL$tphc,)R,BAIr5dB/c)P_l&Ts\W^!X#g.bhUbi$oNiFRXf!E?Be;u`!R&:^DS('Ud3F@<K)W>ngP$j5_m<?Yb[kK^n?6pf^%ogH_@7X/Y<1Uen.fLmFM(nt9]]!4h9eRD7^GcmlXUFAq&>ga^nqQ&*HNrW^fejA,tkl:4\N2GSdU/Ac=l"_7!h'JIM^UooUdY;-f%%bbpEY^O2qHkWf?QR,QBdZ26*d'S-ggl6LLHbD6PNHc)1*\Q*67't$kU'<J`i'^_ME_@45\#?h[?tht""i>A[kk,ttO@8e]5?[](%G;8_2*XiTH(m8&5PJIf4ca.qZ.m5_.Dq!uU-FHGeKI'boc[BAN;`JK!fSPbkf2=/S/6[?73d&qpQ9bXmlun[\4H^!VSHYr8,m'>:%+k<D=i`Jo$5no$iTIjBL!RQQ(#t>K#)??^s%P$V>Bk$3$Jm?6Xda2gX(jI%kL8/JQ%RfrTFH4duA%<p\jtpLS8N%A0$R!_98o__l%V[!<Y*62E)iG$]fbTLPX&hO9]\f"8TXCQDjlV<T%Fa+o^!&qGeJ]5r<&Srdl0#Obr"g:&2&5Yuf9r2I7fgc._$pb2$oT@_K,q6dg%HnP<9!HU8/co?5oFg-%e<8dp(3l-1P&3`-p:k%UTQZl6R#L5O,N<D]`)7O*oYln22R[#9k?dc`"0[MV9oiWWU&2m?1rNEXp0a,Wn%9+mN69V#pA!pY?ln>>)YQ78%$K3B%a^m(Ec<[9C:oVpp1-HmC=->O[>D'oqGhI99\-We2PURsKj9hc[8,+q2jVlD\Z(kTNjWsGce%Rb!f$-b%5%=WXY\L.jJT\.6r=[iE](3`$ABUF\%Ab;Rs_]P8ggE!>hjT9)(!A66mol)PR?+[Y]la)-K/6uM@EKEjhe;8dsi>9P;N%p)o+8M""WBgSh1KQ'3&RW2pMD[dUW*mViK<Rkqk"VdPbq#-`"k93;h-Rnf,6$OksUP6Bl2bGt$VfWSso^uI#gFts7OAQY:;;GKR^%MH[tQidF(/:<ZC+d9-"#0.*tW=2^`rg;.g3^?lNA4`>fHhRp7P-n,gd)"#0.O_5@:YU3B#4^Zif\YRZe?"Y"+6\t#5<b9mq3Yais%="Wp`m+u1e%u^.%LJ9+!AbtPb<Z*G::8_W9*[!*4>>M0=cJjbsoiDPOY\_X@Q]j^QS=_\SI7D^c$U"TmBGAK3,t<-,]-=p5U,k>*%?9:5Mk#BoN@%e`3,r-7D;/:ERhVO*A#-L?uPDdH3m(4a-fWnI^R>]9$S$i[PCu`@qU?0'g7i4UU(:'spfi!L5-;L,dK:M%':LutW%=fRXPLgi(])d'q7R`OL35&D#OeD,k<?I`$8;26=9VD(hgS[6]0PmNip,04_7%i5(=6k'j/q)anmeTU/9K7<#i9bsq!EXiYc7.%=d%8lR(od&<FjJK@4463=?t(uW(.(.Kp20c,T:][D,fAhXFO85rX&9fVo:Tm;5X/.9j'R72JB1N!?0f1RP-/]JLp("t9fY?B36ZNU.q%O@3U4"BT']"<r"#po$m]G0"S,^.K*#aEH';,,[7`_lu)c@ra>kLb50>@DZD1`Q.R?hdfD@2pTNSXsOel2<er=cBp0>CVeF_;V4Bj%<s^/q+(4ESap^EU(-24[>`F?3La6QVd%i]5Jq(eF6<Z.%p6pS4</F@PH"O\V"7DXWZ<H-&=0H<9$kjaONRB"[c1bZ1*`P@EKCk.j%BNib1E1OA/Q7Ws[8YL'5*BXo>*3b(<bUORUM/LnK>#qm<ZugtEXNob"3f"[=EWiWd0Fb@6"EKhBj\]r)0?ELRn2UoHVcPEAm9%jQ%BGa"`Cjm@QD%CZBN!)l1&:L/^<e9m*"QHE;QW^P0^d%qk5i)Z)Tj>cLJ>j?]=!jUtBg`Sc;1^fQ71[0U%aDGkH<]*F#S,P6BcNcJ%=H(p"+%Es/-QuAGX9P?Z27FhW5uATbU^dO>E9Io="d.>M8A&K5RYj4tWMis_1Q0>3DF.nl;E@m9fleLRP!,e&k>K>k(*OEHSu&!m%k\CED+8iG.VD4YOi5/kXD5+RGEh8Yolp@p2MNa;Z+/;CDNG<H-d1WNuV7+PWYJM`rcJ<$]brVQ@L1'hIMo$[/J8C+S:0mIJR%Yu;%RN.EFqT)P,f8_WM9s)DB0Hn;S.+AYbcMW?\L]N+%5."NuDk9?rpOY*WRQG6"Uhj\0OD$=lXU`ZCLHmCOX%_OVWMC\+9H&Y.6uDFt%;t4S2EGYAdck/Uj5$Bl,^m7W&0]/Er"b@ncLF83ATJ]^_g&S/[]0Son/W2BJ4XP/aS+)tJV\;SN-+MD8=`6eDc?N`mRPS\D<b/Sh%(5+a&c+6coS`tAHXl/JfVlQ'eNZ=6:Vg'f$j@St<75/B5l3L,H!t]+]18j9S38Xmm.T.$V`UTZq3Eu_%,asRig<Xf!h759oM\cQI%-.2Ba#.4KWJD6NuA;_OA%7h,r,/i8&X"YZ4L8_,V&aCuPV-g;&U'hac6tk3R/Cd-`i!qV_>`]Q#A0!''F\U:DMFgB\R-ZjNIu"GZ%\+(pnL8m]Je90neU"U\E5UMmEq#Yc*X<9F&=%UP#h,pVSAeqbt=qe;;f9mX($I0b+]g3Q;Sd*YtK(?UaPd/?'I0`8J4a3*8<HP+F%KrP@d1r>7+)RQT`CRqh7R\FmjA9:CO?uT:+M'5u(<CtdGj@hP^V#g%LNg(/ZrG"<gq_#r>7]VSYB7OCB03V98,rrfWKMQ/Z\n6RQ%V;A6HE&K\pNg)Z>mL2"UJjC^GB[`US2!!E?fC@F2Sh,1*0[MLC,&77++r9N),f#r`U!E'7)c!B]q9Ba17I)88iCJTrFNFh%;9@sA%95@I)Z5.K]TLIXg=Dtr[#NS'@$9KC/'SC-F$#i<XUCAD58X+q\j(:Peo`?c^Hq#Xin-^dhj!Dq%OPpPo0ZY#&839o/6*apCclN_e%a/Uk6e$9_i2CT*=LTXhGS)GMm$C;Og>9t#<o#?,*P,`"@a]$$WS$&sq`+>$):^Yi*aE&-%d\b%ic@:G5!]E;l%FK7K6F:`LSe-I)%0I>G)+MJV#NVb*bi5c2D7[CqgRXk*>;+a6b4#6E`<UsN`d<JG\q<EC"'@J#M^:l!^Kj[oa.3Y_&%qUG#+8HcV^gtT!<u\3sLtSGc%-;Co&p1.R*-CYL2!B"LlK1V+H:t"rdKj/>Yn0S#sq=a?bEGCWF1E#%G(3;&)^>N*s"7Xu(a<K@rWaAXWB[h/n(>tD^'b/g5),..H%7#[BZp'`/=Tm@-HnUuLZ]p8eK:GHZ&o)DQ-Id:DT.O'OXHRE8kO/QLI+km)u"2'>d7V7[R7P;Yf)3_&+k%,3H!uPk^R;@EtfrX)S%iRW;DSTTQCO]1SGn),;lnh*Nb\krt\5b]^n@_1HZ#fNM_;&)1h4n,M0)%h_(E)O(#*/LPm1sj`HF-XSS?"DrWS!!0`n1h&h)TGNr%bD*:e$@F_17ck!'W%7qP7.*MgK"O&'M:+Z@phJe:5`YBk*6=%(P'V$cV)5p46rrqeZJUKEUZ?2?C5SFnM5WM,ltjc0h2qNrSO%Wl%%n>V2MUA:1AFGksOftJ&I1n2$AQ?&/jtu0WHUr&t-UNJkUN@L^.Itb0gG"L(*<g'm,(i$@Rq<+hY0'sPA&<X1jg$fJs'-_:4WDlB%HWKRfe0n#Zct'2QdM@D8U;D7^]SSN`>BN+RU;^:n94hjf>FIu:p.SAL0FPj,+7)ih+gP8PI$#(4ai8NidqflC398PYW.28qhk[6Q%_-T#7/jT1MJN8qN47`V'Z>RUs:::HrV`A"O2X7S%#3lTPfD+E]"6j,JH3s10ZeB/dqBhbS,@gSi--f`#C0KE'eB&$uSG=$_B7[kf%M*ObM^Rkd3^)WQ*nj!RlLCfOZ@F9upRZ[7XhM]WW)kiWf]tCp8b&A?+:81eq(;m+G4#klK#oA4Nf"4P/@k^2qaC'/ni2kQIWu1!+%K6J4af6BLnR'pZ\L^_pQ733\W/VVb'e8A2E%DJl^im:l:YhRHnJq;[qT\XY'NWRS:UXd8_aPai>?9?'[Di*<U.%H,2mCbWLLLCln%mTh.5!mST2)`SXI&0j04nNL`!QsD1f3L."ME:B0m]q(RF-G-fo$kd;pZ6UgT\4LJUL[F/SXP$8'9*8-Ic##-!Mj#GILcm@-k!'HA%]$ps`3VUeaHceVF.ZjCO5e;fJ=LfRlc8V:In5H*f$DuF55KfR47T@0t$T2G,k.?0q6,r\qpm&N<o\9W'/j`5IU*@"Pj3[43DVC++%Vud:!;Sa==ktj1`HYIl^@NfOH'l*1[VfM9M=`9a?f\XO]8_BDHfIK8LA>kiVMD\./$06;2<,s\.h.EsQ4Ih1_XKdpVPjir^.XRum%\oh]CPG(-+l?b9c3;KG^SKXL\c0Z&cMinosN@kAP1YMT&I(_l:d%mY9a'd:Kbu,D!1#&b.$KOL[O5R).3cnhFi%)(rm*_ZV43Nmj%'ruio*5i:Z'WVfX*.2C<:i'TN9SgKG*Eja3He#!JX:.Ko`8c@a5MdRd,)DMchun[Wbh.j2@6T*o*Yban]ieRO?ub?mr2kX2:a&F8%1I)hP]4WfCE71TDHCOD(;Zt:Z?t_)Z9NY"T[gD;4oT?*J(JI>o9(/H'LHBj/%d(8rc*I#YX*&pG!s66BHUATCnNP$h7>QgUdNHu"%0#S^uOY*gj+F(@ema@L*$N\$'%RbOd4&I,i/mT#B)s!@md4($kPh>3%eU\M7SLajmWn3rU%N/!F=`FUhmD83GPP*&'^rXeEl\pE*%:Pe(@\g0a\DJYLmH^IH^XQgDB`A)9LdNL/chVor\+j!:#1B?RCZfEgZaisuPJqJZUf@L1a`I[?%pnX"cT3?WJ+@gIeh,Q5CaD7A%%8sJ)(/><ELUkW!Ma^@UV+NT-W2Y>*sJ;6_-FnIT\Xj^l%m-.>0.1$Fc"tAGUF4tuO#;S,g@V7Mk0CP]WGBWqg+U(FI'((>j%OV["%cZlY\@qa)/Q#Y&&@L+7.p*rqCXN>Xu2j>"Ci3j=*^:0Z$j?B:H1ouD]:90@1\QD_CLYipNJcf:s6I(5J>^?djg.JM@J'!&Jed<,"%I4$7`U1B6E!Ek3s)G-ore2HL3Z(0&OPa[G&V>FXCf?HLHq9p:mhit&Gid)&Dgn-4!^.'*n<B2rF2k=LrT[#;Pld@Y>kM?3@aZ2jE%Cu2tV(kl#J;A%5k\4uB>"/ecZc61J]%J&j:7>VPb/A]/#qA'(s5aA<Us+D5Hpao2W`;2.tE00*F4#n3+/HGdO2qVo1Zn>G`TSBHB%LcZ3rT^djCU"7$jIcJeTc\)fEY2glAp&noC)nkJ\7L(*phQhl\6V]I.;5G&dnX*W;(uV#F?mR!(E%Dp3Zaj@TE(4#9Z6)+"Y4K1Y%nj#c4MH^UTP*=7%:C\ue-6eA$oTh1_a9l#:%02![;S[a"\,g,dOu/t,mR;0GGS"UUJNX@CpsdeW`J00a.&JSY'pP2D"709CJsnCO%B'jCSQpoXH2('?P!rR4[))T^8?1^\$po=$D$PY\Oi6OS1<cAXh.9C1R1VU%n^<1NJWr7XuX4FKEH<@JT;71>,M,Gq@Sj[,"?P3J6%"WT'PRdUYRE=b'8k^OMVg1$sJW6k[rW+D&Q/&ji][Va\-nXF*a>D&.7+?<T?5[gmT_H91'UtK'H0,R5=7-1:8@X=7d.&ll.5i";*%E?_GPH4]0KPbs>i>6[q=JZQ==8t;k?,HS?F>'<_\2W#\GMDBC=g(iGBAG@(,%SWDJ-q@p2QTAis`(uOuVun^c-0I"J<?OID"\ET!%`7W[Ee"HmHn5YNp+tM@S&Hrf'Lu.oA(_[g"I.^5o(i3QM+O4?ZD2H?@cPb5h+4LagapqMt]h*\2o+$c709HoK3RA\$W,b1:EkWWQ%i@b!74"r+ai3-]GW,#S_P-]^q_<a?!Z3)Mf%gZ\(7&!s5,>NV?J&f\16W!Vg=')F<"A`j;diHf283_kqRh2>,X-PSQA=K"Vje2.D%f^0BS(u\5+IM,PR^")3QY,9p6:e;j;bBN+8:&+s/ml5HTM1C?.IAW@[BPo\,[RV=+9-qnB?YG$P)A,4F+u<qIr]T8@]!b'.cm,Tr%;q9gY@WjAW&iVuC(.oQ8o\k.NWs"iH%^sk"l4'C!,LUN[=[S#p1af#rfFlmME#'-\Tg@60B-D3<&@r(!)OW+g1G?0bM?Yb2X_PJ,%geDXbAdb>2U<Fic[AL@mllDN:X\6`^lCBq97+&Gp5r,O$*]HZ'#TaRq:%Z-pb1YgP<hBe#c9'qd'!YE1qYDMK-%\Fek@!Iiq@Hmr%iJM'41$E?pU.8)US$]P5&(_/Z9go0^b-JL5;LCfqS^+Q._sUm"PC)m*nu`9dCfh+s"Zt8Ifd`5"lal";4&jC3<:<onikfSc4sl-,%W,8W03`cf731C_SFgpdIm/f\A1[hokf0`7U!/lEedNP3d1uJAr/Ja_Rb)PZ4Mn_04lNII/V8DXYEiauI-$!p8eV.P^KrAleNR1YG%'sk10eXW=?(6Z21REk6da\q@\!^;I\_!H^mZ&p;.>42h2\dF*if1Q7Ta0JjVkW:R:,uZtYCQ.=.X8RW7Vs\*]=9i7g0#ZF3#1@&B%fr'V"Wt,mR]KZEW+J9fr^!;/MLo;pZcB@?&0dF?IeQ]aS&dT(`WlZS:%L15,pMgg\(h]C+-WdU<F[7!lMhE*BaWgM0V$IP[(oXj!%aEg9rRer,:)7iD=S:`=7o>Kf1$q"R=,Yj.\l'i;;(UC),[gJ?L7+[iZTgih.;.pJbGVNH`0ShC`;[5.8MMMFs.ZT&m,1KO[dK"n#%jF<:c_Rgq;]JL5B58)L"VY#W5:4/T586A-\Mm.jJJjTcr&nb@m#joHp4DS-HGa-n^<Kss1k,E,;A:Uho.-ZM_X?Lcr!?7Kk<bH^:%Lk4FDLoBNFK5#V$V4]'mJBP[5>R;gjMj[OUrQkOd&Qo9T25CeA4tWg64DuFt%F&$F6BHm,S+U05`+Fi8c1PO<<ZNS#oun7H\`P@Q%nuT_ITL2Mt_:aPSg[14UbiUqj?r4tH_8=Q4aO,U0^j.]LMKD88WHpDTl5EaV$tL(q8qaG=)J1paC2tdS#.&VP8JS$8`i$j#M4fYn%atED"+D2g^5d07KSn:SOa]JSM-[\QTjP3-]_LKa?;1-GO-cM;]U$Lp]!Q"Q290k61C<E3BZD>#tQf9$+^UIH+K<0V;O96+L!&31#%QB,gcFS3qR8]aY9qPjkZ5rC[*2m`RB=cjrN=c=bK2>)tcSbf\s.DUt1SIoL?W+R$q4ec$gE2LJ11YOSO1@C>`R4?SuoJAI4r\PK"%D\,WI92*mm*=XiYL]d/$!t:.6:iSM%]]]g&7Bp('q)cPBPm`]p'$7uP2\Q#K[9(U.T8eAI<Kf6rMZmIg:6Z/t:VCD@PZ?YRHDPb(%IeABXKf+sT^"QUhM+G1o!kgu!"9#ksCRC9)VVn=CY/:.Ai/=+j'*aYT2%1o#V=Epb"+c\&Y/5oh7U\2a4#W<7e6[7n-O[4Y`t]f`%*S0+IHoF5o4#NZ@%LQr7LujBLbWj3<M[sNX!JsoE'F$F8adG'CC#Dmk4kLWG:*4^9\mUT5MLe,7HUHuJ]:^m[ed,>E\\&e$7Uf4V%SQF$<iho6Jhmh\Y3<1QO(Y>OJRP@]rLa8KFW+:?@m"1a"93.eD'duJH@):i+0]<r_S52$F%Ds?`U4h&B:38:4H.fN[>W$@GU;cXr%(fXs%dnKPja@<d*Ge*%_='@AtkK0`7^34):2<Z!O7)#=f3]<,g/srllJsFU]bNG_//C"&Z/M/Rt)ZX#aBG$h@R4f8-_pFRp.r8k`%D'GuCQuc`feQ:`*2(km];k#^7DAAmkdS@lI[0(Q0[nnGR6OUU&U*rkl`Ip7*\"a>.0_&U/f<VConV6f%!k^Lt,)q.c8"5anUq9`A%6A.MN2^)ENfqlfZgg-#(=H&%G)*;Z8FNA;\m9(eqP3J_/O;8GM6A:6F>FKhG?Pu8L=$Z&5VJJ\GGF_j=KEuFGWtA]EIA(e\XR7Vu%+dFl4>A'<SY/WUSH.mck+XBZ"@$>/53uGbl2IV[VNYc[]7-kK#>r1),(bg4rL(ab;+]=dE.UZ'rL$_GQ$plMp6aJD5+IN)8]INV0%.LV&LTs>9f=&_k3+;rG<#n=D.$cij;k(8OHkc@pd68HT-i93`dX%U@@gSn%8csH33oXo$09Q)mL`#o-0W%"eHA@,fb9*sb>d^;+>%;JuXc.Cm0b[C.k2J>J@F[D=`YODNQ0;0&suq-LD"4,;>TUd/!K0bFkU\9.EmG:dR+`d\QIOH+CkUnqT'YcWg,*0mJCOeUh@;=eK9%79MAML3rt?/p5>kQ'9(#&Q.)Q5pDr&#HI2&!.,E#"``r=hIXRB>=o8IX)at<qp&RpK>i<P0jom>EgE_HL(IkQ&6-5KR>k!K@j*J>%6l`cA>P>$!gR=n6.;Ct>J2pO<PL:!(+Qo330@=9KiNUi`4D-iWUj:3_Ii/HsOE?4Y64BjrMaWGC8_%AK)T'X-[@::p*%%[^0G.&J%I?B%1(k>;_^Ia>a[h_C7-Xsc,%`#CuEiM-FHE0]VG\X^DVu],*n'0$jPUI-U#[hL4DjY3nL]Y'n)*'*,J]-$CBiqeD^&m#l,m0\l%/o1GMYq%T6]nQ<,<MrCKhW)];(@3N]+s>"e@%)4sf9$VcLW'j\L+NnPZ#$TJHm7/ERY@Ds4j^l"!/-3/ihhp^.o"L9?n:X1pJ@/`%.ko5pP;L4AM<[g8B/s-'SOSA?&gDK'@Aast9Q\oDG&.i&VFKR9^H3\+@4^JKd2jW3\82?#Qf(RfWF/+>!P?u;W`+JL>]gTO>SBuJ%;-VGnAbF.R46j1*4W:39*nc15ClmFe17d"8kE$=g34B%"I+8ddOf;26!bXJEWjiMn!EB@on]eLk=hkH0G8Fda!S.`i'W9Q.ASTal%E\Ikl7*fUPe^:iHR)\VfF[:(^2V)Ra1q[<jm(G!T+q_p`Q</1?A88.^D)j2^mnKFB7%.V:66Fl_J_Eg=7<D<a=jiCi<[8rI6pPV1%A")%W63YU6U_#td@%gQh4[0;teWB*"aXZTJ`ge:g6=m"gL_`_P!!X".ArC/=5JZpE#tbAn(OCqgWqLG>R&*q"'O4V#'iJ<tg!O>b%mR[Kb1J1/!#+MV<iahn62,lYmYXR1GGJU_V[5HKCF6;cC:/CFqJ>XXLS9\rdZo8:D48mrNqT[WTdhOu\mL4iNRGVnV7A^V$9<6la%$C0a'eZ@Es-57c59<V6N[M$W]SbOZkf=BI6Tt11mo>N&ZC2'jm&<i9cl.^!UP0l'j\#X^KF%NHN)&'`DM8UQB#%[5B/Y#-@1]!E^%@AWQY0(H>XeTmO"dAjlWT:+M(F\WMbLdeZbl^HF?q2g-!;f;X9V'9PP[rd?d(uU+OCPa/:P/ajIC3qRb/%),\!)\T+)VtJV.@As$%+@:Wd`)_`@A&U^+<u>2kF`]%Mh%Wf;#C1!jQ0GW-n.O[(dXGNQR(dJM'=rl257ulC4Wc3`@VL?8P"0PYl=3TVML]/<QJOJW$KOU7%Y--sM'i/Yi1Ua-7C?7)XN^6mZ;C_t)ZGPnaXQg^Y`[JZnFS/*pAG&I8(>3"&q3QmD,@18QZTM987c>a-79*DD,>(!A+pRY#,!6jC%!$N?%!@M;=WecU9'_>KT*"^>o\L/&HKc+*NCqq:+@TCo?CtSg7]bpuX@VSaRX&BuaIg$UEL(sO7i+?.L68D3&RY^IHL-N-f9?<Mf%7/6U)KAG,.RepKciHNQ)RY<eh)C1FFfS:2n(8,*4]([QS#qa\AUb0\L&nB9uH!&jM*J78MmccQf\tCPl&s_j8daFV2fr#&O"M-sm%$j1O_Q,tc+`.[&V?i?%#Y!E5;#@G0[;e^ponn(H?U>/Ps0jc^:OC6;_Kg$E4#"#!,Xe'"iiBCJtGi'VJ2-[8nG<3:>)cd0+MDcti%8&cAoh]e*88dq).jQDuunsYHZPNf>R#"9]Mf\bRo6r]"*@F2rL=B5LI3OTSVg6J/8$bGk-S8As(<QlX)S=VSc1T=1hgr3i=#e+tC%E6=I[O=fD'ju8im.rt$?$$$"1b-8I#IJ)tdP<W?drFu;\8#HT9f$DV`hqu&U3*`'_n]p*gUXKPFg/k2MHRFRRX)e/r>MUA#q=\`.%SmA$<"GoVCp=Jgf^E<LFf9,^7<Ess\qYj!o3hVXC;TnnB)!db9%^T>U4,]"!H$;mKkirU9s2nj[\M?/cCVG"HU(YKc!G,O(kWe+`%5HW"RFHe%H`Y)W^0Z>-:pp'dHCd/#Wp8bq?k<oh%=YlVM?R-QP,qRANe`%4Q[Mq'!N&B>(:taVil-pq0II*e4ee/a:hKORZHp]Zq%Mb:JI6p>Qm:0d)r#HJVu<9-p690P`o]4h-4Q&"C]G]MDH'Z%:'5L;rNF#6.F!GW06]:RupHV_)P46'te%,n_T48PD1lV:d7:NXbO%DO!7Ks1nj$%QTfL][7V46B9&"CC3610WCjlFZq?)]NkXYV7t@Dns%$fnFno%HicQt:IPf69YL\IJFL1T-cT^!Pi?RGN'HZDZ*Sh&%":U8*`*iQGhOrt7K;%SX7R9F;(TLj'ct<*f=I:J(^Q8VU!u=jeUkr8[UMOE>)?-4jiE=I:!L].H7<Ks[.7j+UTq3+u\m1F[?"b)D%A=@3YWSJoM1h-Z?blMIE.;I37&1&o4NR2YJ)S;0OhO3cT"f,TR8:G\&o?dDu>=`D6?46ppE=:N@*C1In89^-?ZHj!\!t]!;$I%#!%RndTVO_C4V)CS''&48<>1c&[@3r:XV-1Iqeofs@Ug(RlSE,FTR)Tu]b8IKi2V'(p7h]`!3-P`X,N\6LO8Vfod*=_+h&,G;*'pd1J%h?25p;@9G%1jM&Q,e,,lit5]W"]nH'Y_/i1-]aBAfNAI[ZoVG0;@iggLP]j(&dFT'=7S(+\T6'dpB\0"SO(@)cj;Q[%e<Saq<NS3%&u0TA>ru."&d#X.CY?OU#:ed]EER8]\>A#_lYijJn6:\[Q/s@;(H7pK6BW^'0r[Cs`Z(rb5-"^E^B_84jc/\2=G/50_)?hVi[N2d%d`snPhC-]`OU/nl?tL]%&8)Ckng#qVNa1KT/LoV/?)`[0#N20$)2C;#lJ_'Vd:Utr=7hYc,([TFBA';;N8Q\7IB!Sp8*N-,a,mZm%(DLeGd"uQ:NA_4\-Ul"N4mBMu%$5(8gj#6Z:6\U@`Gi18!muou<2<nTrjsC8R4n*?*7VA=BUn'8.P^Ur7UN!VN:2;a5qb,F432Jq%GCh;q-2@fWG>]uA.I/+!j'];\9&AJP?.l_$Z@YOmbX)XG\/QGnip)hmpoSHsq7`/9G22%u7#pF^*LLiZ"M!un+VP*&(,aMa%J+h-%FL"VuJcM]7Csq>T'q'V[oTUC$^/f?pHlo;'iVR^UcI'.:a0H5S-"4H@ZdOkO56G1-CJ2ZbHJS,PoS,Iq7H14TQ;DHZh@t8sHJ)QA%IF9,K"dUs-]I*ju-9@(O/sb6D-qLNs$'pT#&\*#p#%+0Nc]fVKZ*rkWY%[grSm(]cDK?$-P/MKX,A!db6)?+oTDYE]'b_Pr<MJZ(%`LV+Hit_:GT=l]JPFM,-FB<)?A<BNiN'a@Og7<HlciFg`LLr=[J\MkYE]O,^Y&nC5L)`o%\RjeIQk1*e>^i$)Sg\ea6J527P0$Xp%p?_=68L6U2EqQ>7\(;E<*pm;SSXo2NIpK`NP--M^k0S>(=195UXH-*uXfgKjF*iE:fu]Rn(OK-RqWb2fi&fs`=(H':O*V$\'V0B`%b?_<Yj&uoGX`!h/D')HmS?B1,Ml(D>B8nr0Z=_ukhT*9Rrl#,onBWa4H;02W73<BaiIj)bK_*!_I\lI-WGH='qfl\WKkrkH\S_'f%_<Gb9M$PV?FleICodD6b1qk+k!VQ7>Q>_=2mIKHoRYoP;$:E7I?*_cgBqep%i\=iG2Uttf!6_DW4=Son5BKLs%GHOHd%c*^lD9,_%>Y=f\=0M4-mOdE"I%k.2MA]ZO;gGFNTX8<E3chY"#-('PEqL"<9fFW5^pdDP!0!cCjT77jWp2>`C;fGDr@`/,kl$,K@]0Lt/Vb+^%lBqmqWJX".ke?G+'UhjZY%_n]&"(YJ8f#SP\7iZNSbM["K[j_V`/`]/R,b-moL)B/$cD4!'/onS!jCB.;1/Wdq*$EFRqB?%Nub3+%4QA"d152'(YY!RRelt7NeX/A?N^u<bh.k@7s+uk,b)CohDHbF*/%VpbgbAO/>b$*.@2SKUjBYfn^I?Q(s/fQO2^AETn26E(;^<E]%>2TO;Y\$=>J<c'5<?l9(HWTUklt4qW<jjAS>kM1m/1l0d:Bg<NG2A#m#2Uc-c'[;Z*<N?b+;ruZ,Q92tZXPWWc]!_ESHXYX*mrV'%L$:)=!]0p%P4_9+-cp77EZ*)V]qABfo/CRO'"%u)NB5b@bpb&K`K8@&#p>7-IEL'5Wcp=pL:muugkGhcbXY5n$5)5_6AfiuCA4l#%`3AQ[eZZu7EBQQ`gJGQiqOl5HRZgk"6=EO^&]kLkVmGKb.=/^_?J=tGlbiKefDWK3FZJ[MM;>4K*n70?;C2SNd*e*SNf0'#(kJ7e%0.k-4<^5DPAKZD&e88duj[>+MM7V4FR#'e'&s9k&><pkDZA+sU+3onTTZH/m-sX"iF`aUjlIhI+1J(csR;Z@f/Q\!d&_,Xh'd[VI%(C_1YacV_dM]adl?3opmrA?W7.[l?-_g&rG\V0]g0.pYB2o:Ed7oCuaeqh)n>N<0a%Nu@K8Y(]$J:#MFN;V:c7W'Th`GfBPJ1OkD%DH=&TM5Y*+Z]nKs@i9ujF=oDbTl`5DJ\[dn(k\/'ask)\6Wgl^r[AOXj(!D2WF2Y3"DT-e1uSWu`$fuUXMj)f(+.^F)p"QZY@49C%`M44S!&.6S:R)YfJhS#D1HYkuHl$5qSe$!;m004QLq+c_b<@+:*)b;#]$rTFF:$l#XPOX85^rP:<E:?gfHkAg#314P\Ml(LKLf$p%g+dS$.F\Bu/5f@^N'ZgWJl"K.#n43F`>3@9CHtaVO?sgCfdLH>->Fl+)?R]V'e!7b?pG.'=lCTI=WDls412WqkRp:Q.`4A1'*7\)%VKiej#ds&7>(m7\-^W@pR$p/RP1fPE>VATFR<(WK`T?uQ_5d+_&@]"hfjJq@(sMpsb%qr5?NeZ?Tr+sSGmSr.$tHW(/*IQ?FQn,!%Nn28&TNZe?OkFtNE248.eD.``1'fUVWITPPK1ZOV)*t1Q^+pNF0Zsm-VcYKCA#M&HVPuDGPN9`Id=RP3nV-D@\AKMBM_Ik\jDcc3%eP&.@5V!sPdqcjT#l)hWRE5#4C^d!*d3&ue5OIs!6*qLA'+VGhlUBZ(2R3T(o0\-j@@1:%i0sJUD5^BD%Dm(ZX^0I0oG4CUOYI7'%[JF9QcKoC:^s%I6#-3\l]"ch%#Uq/+pcpjc3ZsJ#g+`c+%WP@62nqjGWbuK*2j?b,"uXTu#ggW"Kue#N,Z$4gp'f2m%.5/n>hC[A%AG<9D.CtZ)pA-_TF^qV`NW;P7,PS`^-^KNk</C4q_`fF<I4(pm00kU&UHRHVn.sJLU?rEB0O5VFG-M<*>qiV(p"bmM$ZY3ih6O\M%DZW`BhDQBal/VK->TH3t`<<MYFTfRBI!1h-J,iS#]:6\,7)RjDA7mTn`].:8*TGH]5:uSpjc8->7.)<2GQZ6a#gCrNj)rfFJl7iJ%iC!j:BH7s[<W?1'Bb[eu>M,c5<q+32/6n5"]"qS7XQQi<0ZBmrY?(n,l8ohXl5Cq_$Tf@A!ao-VSH1+^/XF!D+e`"qd[hld4lX:d%J^gd'@kC!M\Vb9\ft%Cu$iJ!id=Bd^!!Ji!n&27Vrru[CSX?hla]K]0;Sm"9Ht-D"bQt-bL\b]9S((kDpX)#i1FG[f+%;11NK6@\%!K?)MW3'TsP#i\b^-kV,deT\D%0W[]d*`QW.kl:dq:O:E`10a@_ou;-D"_88a[r[lZr\Qe6a'mTZ@)q&/MJp;MFBfh).[8U,$upI%K<&Tg00"jY9WQ&r-eZO>aY<RT(U6*NqAQY4]368J]`ML-j2gG9@QY0->sJ_lP[dO:MPQ#?F#QM;@YC1"X<9Sb.=I:=X2+[s)QPh[%jRJOoQ=LB8q#VIe!==8(3-G-omCbg/PP_2o>&E&n$+gHPF,DsGUL6+(^'Jo";Q(tC$K4DN.'SH*7gqOFL/-8D&Pf%\cNN<+NiA31%8M*!%d`!u7Gpn9D<V6NlV]-(GBj_,;/>J5>H40lP'9AO;>P\Nl6j4pU?k=uUcT!EW\4!h-P*O'V[4VP,/*WB)"&:&4"0Z6nM'$,K%,qY\%iS7g"\j9pL%,tZfXO(qr!(nOXPI_PlZCtnG:4-!t^Tt96(9UkFYd(STqmCDP`a'f9Qek_j55B(^T/C;&,Y"C],o>PqR@F8]%K^@_Ofm@YA%8'%S!_3A[qZp='_&W7fUF(PCVUBV[?JUOWQnVoj[l+Y6\$"B>ILmW(+i9s-#XBFJi4;X>=qY4oS>l?Y"5A_`;=AE=%cX"a>YW)SAQN_k9cEeL@$08bNWa(NE+nU2QF)^;SYUsN538q^*>.,VFiL3Tn]nB:[crXGk]5#Uqkh$`DV@H\,!'/!ubKLLMV<4r3%/!fs.U[m56e(/b<VPS2aLSP!6,$+apkNnl_e_JfHm>SCWH3]n;CEee/p7[f]0YX`BPu9R$S]j#^4LD.u,m$KC_S":/Rh206@K5Et%cV*m\B'N"1s1FE_Wk(lcc^.$C_$Qi636!*On/gFW;+Cr-])>T6M0%1D4IL47QU+!0CoXU>-V.Hq3u\:g(2Y#g$hM_H0B#)i3?S?G%okE^m`M@4;.gP]X;A"_*LU?b3AXa00Y01-h?TWJ#7J#I-hUBA(a+pPtj.&=4oKub=fD`"^a<,n[HIsc#8&INJMUh+e3:aFl*4`,I%B)K!/FsM@YSkR7:]92"eb"nhIeBq/eOnWMT]7su4U"Am>[LWi$\h^BEe1]9KakkNKPps\QW7tEk!/T&'CMZqXl"oIm*!+=p+9=4`%kr(B97Dd(GJsK_@-SmM()O/9MZ0^cBU+0n3MDf<"(bAC"ckPQaY/tp"fatQ;pr.jO/X(>=b4.7PROZj?,1TmZRt=@q.a)DlFf7?E%JBE-m<.i/i8%G:bbfIJ/Z7hM*NA'=4>9SKj'M:a2BX*+t;RWd_MorFNC'u_!+FA1IY$B)l<c!ai$UB@iDb[p%Z;&(`fB!jjJ;%uI%X9]B6*ADNfops*R7V%ZsW8p%8%C=8q1s8)"71]/P9!n-ROC\H(=XF1_(L.oR1dHer;S?L!=/NMpMq/)_#W4tD1M:97[i2F@&WkBY%+!K\G)TN/&7P!+S/kCs"ac)bWBhX/O@6b!</E[Fm1:B[&d6/oZX;>GpDg9iuCI?Se@(\buQK5&dbr)OjD#oI@!c)XW[e?c\\ekMf%0KEpjnk%h)O=%,j>*S>Z0>J9S7cH8cUbdjl"5*Z,fm'%`L55lr1q^Pg,lt3:@e7?M^&(m.AFe8PTDH^WM;<2U\Itb0g<c^5m7kK@%dIZ`qnElQj"P6ig`Pt&<"VdaD)>ngRZ6?O114qS4'<so&>:Ab``5YC+a>CD95,Zk+'k=q/$Hq'*M:_tD6OF8j;jK0Ca[;V='eh!L%+sY$6fNP']'m"/_/5?C?o\8hP=V6-X,Id1M\D\Vh,q%)(#]VDgfGhnUZlJc[%di"oh+gB9l1;71qr:pgN7348L623HhYqKUo;Bk3%r;Q5mn_a'^rq171il\[`#A4PXolg>fhW`ml_tE<OqVZ=@rUSiHo&J$PnaY#%p"n0<8,HK\O(W+G[oReIoO;t;Gjf*aCI?M8WuE:A%[_-hV_7a4LN]35q(@A%KZ_6k./!t_2D;i_j2O.';rl_W\V[(OXc7Ek8P!aFjrkUeEe:d:Wj#cHg5D+tkCH6"3/H#$an,.QUkBQIR%n1pT-m%#1[Q&^feI=>>HOlOp.eaDDQcPoJ2$S2)Lg%s^ulG:HrqD*d9Sitl@3'.u_jSn$4ieUb(+!4Z27eq2qPQ]=nX75*C_tr_<%Rn>Dn>'/rthKo4':>9B8GG!D/\h,Hk(->]\^Rma)SCrPnobk(q5$m&04MAB]#um/9SZ/HQ`ME5#dG]Rn.6L`XBB)#l7JA`fbi4s*%puLl5iNr3:K>SYK8*@@aYATfIR-aI3/2=U#LF_!A:8YdbB8[j454SZ*j*s+8mpFYqJ$.oD26XOTZ5P%eGYO(dWr.'@gJ'alr`/qn%YM88A^!uHL*Aod-8d:c#Ul+E/IqP[[`8c`q>-h0F,Q6NuS#WU2MH%4QWR'W)#QF`2o_)j6Jk]-OC_n?:c-U]c5R$<+XVLi%BO?]m%]sSdY6^Qc=1-O8S3G;V8!uX.89W2g%MRabUUjl#f+FIh(aT'/[(f-#l$\n]7(=;Rq-]>Fno>A=/['.'h/eH]&@tOh?jkmO4pf0!g%PVd(Z,6IX.BE5lTUR[u<Pu*f#+'(&I`0\":\"/C5g!-c]hha`!F6B#W]B7G5q/_=<hMQs"af7hXE02_PNX\X,OO8##AZdZO(Z-KM%4mMlUCU^ujH5c)ka3p?[S)Zk0TH4aEQ^/QcN9#NWr9J^gP0VSCc7ecAq:'M]BtM]6LR8?iEk]u&idZ1V/hb4S5O)6Q3b@M)Z@mUK%L"1#;?eRa))jjT1[s7_iH,-'n8`iVDIY1^fr6^SW$NB3qR$VYaa1Gj0G&98"CQLlXVZ_D\"$QWL)BPZp:29OuPI-n8/V#,=j,HD"%ZBsB^IKo<MBKG&m@\(Lqb!.`"=oY>u].mVuDKrb!Xh:a0QeK%IS<DI26JqZ@f\>>,Z2i84)b_.LV;'R*dpHiWgDB.0VTKh@7I"l>%=k^D]ecPh9$bHqt<*9gG!b1.AKYb:eRiZ\.pYf]W@eMFN-g>_Q9T5+^WE>\/8lI-$X!\S8>\-NROY((la+iL<oK`,U'g&t^li2?g%maBti_np&J?cM.'_8WTf?`r2\_s,k3:AHQD\$''6rklXGpRWC4r-3X[Y-EJW\$"M4E-1[Cp^fl/goakS,/'rNQ"KC;K.FG!mu<<2%]lRb-CTM^W0/mk:;/P02qfmVZpi%4!DT)L/=1hkMY'p?3q!7apRa'2hDoR+LYKWtImdE)_\b=;.UPm$E8:en77d7>\Ub-ku-Z\[Y%Y*M9a:t2ncnL%4j?AfbPlKG-`p62TC-aJdsH]R#khpK4/j\:JBTRTh4P-1s`i(3Z]r0J-kHA?`3mjo/F`%4npSVd_+eetZOG]h0p%B!7!N','YeLSq2Dp\IIVDR'hDZj?oBCKdQdZY:/3`O9&2]9SjC$fsEN)hna&PM(7?55BH15-'WeW'[aee1rU9&jL^rPac?T%>;,`%$RWmrJu7c5L4W^mfF^VG9%cmh%bn\ihW^e&N.3pW@546PQ5V]QdV^t@<g;dJR9%(i="?lPCaYQfUZftS7q^kb6Dk%sUGO`%a3i%M%4$S'Ff<ODjj('jG1lp)[RhjP?:']8UF(<8Yfq@3gl`Rr"hp9l/]GB7%=<!(RZYNWLD%_;YP@[g"J_rO.=%qe$LW@I-1<3FebhqF#%B#5=u[8YTQGj"%NDC&cV/JSaT)-#&,^[F9'q:rN%AQi%n5eu3$9[*:0[oQaQp#Y&HdJ00FSEHb&C?$@?*$-0)md.&WT76VV7['R3%_jBC,n8Ra`jWC8I`_Lr(Ek'sf5$37*leup;ZmD2:4?G\j]QdcSV%A'Oo'_Wd&!%7qO3]F"?_;]os80Oho&K$"L6%_PrEn0'-V"F)%0>t^7o;AlL^Dr<Q(]1cqcO<@ePBlW]i<t(k'^*ed`cZU=\p\R,$hH@e-6EMO]p#d859K>WHEe5B`Td!kGO0p3Hb_jdqq3!n!pu7c%EW=qus3*@D48J-WY9sk,Neu$\VrWufN4=SP[e7PErF[L5V\^HC?0m[o(Op'2m]DmKpXZgGm='M-E4GGYG?3>pIWBfsrd84gXKIU*%5._[#Z>@CkFaLgYqk%<e')4D^p)b@s+06"'cZ$O*Il`UKrC[+$0K\s8f1sYAqIOSnr_?tQDN"M"2]gm\QK[L9b0dn0:#@H8I-^h1%ka\68*koG**1uU_3BVPKO[7*urj2QLG]\6c2UoK,ho<Y*i:,`Im_n_of9UkWe,M(]KYMUS?E!loF?7+V_LM!Tra4CCDu]CF>FgZN%LK?<TDu\Md`S&@_<g*FYf&>BHH_b\T1N2&X0=i/'mJGlDh%B\=2!+`J]Cc$a^\ofLNW6oNi;E@`s8TY]p4RA:orD;(*pt%en*8ej%%d4Mtr!Cr+s&fZPRF=7t]M:UR4F6Yp73mVQr6KPej"T2ST%C0\^X,aR:\Q1IN]?-DHVSL.I?ECaqOd3#\Cg5>SR'['LM%F`KjaZE%kDO]QU[d18,/%0/o=s5QB;tX`m+H^bn.%H'rPq_6nVm<?2rWie@dd^;%/m6o)#hKt]R$7)LDO*!9jsbUXPhj*HG@=8X/#9mj1UAg%eO+@.*uX?o-&6nqqpT!Hg#;beeX(XG(Ph=Os(:$1lH@*8_e1jHE!uOjVrK<"m+KACdJE4_;j@c/_Yi8sMl1'9bLpBLdK^TS^!lSN%HfM'ms#T^63`qpprATak7.Ceqm,%TuiS!)a@'tK-I(!AWZ(K?K[-/a_(J<B1763iGQ0fKucRo!SY[-8is4kUt8O&W!qs2/k_t>[<%X$7[)rF5HI_9p6Y_kZ7eMdL>PPiZ#u<*SDEp=[pFmb[3'B7#[L=81%4@d:+Es4QAIdBf$KI`PF_e`kK\\GWQV2fU',^Pg"Y_mM>c%@T=N<F$Ul6b]p^CE%kL&-[Y#PAfX$aH8]-jHfQQmUk4kQnFYqANk/-.Tj-8h\c(dXp9TZ5>D@okANd,dmQDTFIsuM1m'qnToin>*%F8)Our5%@^-[QZi@-sQQmiBlMSFc3="MU-AlT8@$qI*U6rL$[@<9nQn\CJn`&c9U=:WJ4<9CM?0qKXp+nbhr2`f5@nFF(GX^K@*k%3IFT\Vc\7X^DsE,T0oKO0'(+ZCEE<k^DuZKN(a$+hXTIerc/o82X"UTh&(oemHgII%h9,9UVFD5q:WaJBA_#'kuhlhlKFJQk3SUS%d[)QbB%;++E>`&fdbCJTZ9'lH4$!OP[StN_&f6geH0]5`SNH6&9Vf(\rcl,#E(%<Vn+8lapIq;VUp,6R91*uO/K_75R"+c++n2On%mQYsD0p'9,#@Ud/Skf'5Fp5<a-,j28Yb_%Y3a2+)o7uWlMf7VB0pA<?lJ:p[-qoX3RF,O^\]\j#o8DXu#JuVTn=`IICR;B*ca8)5%5eP/s:Cg4?T8ucT\5?$4?C88Of^&ua:Y<,6e#2N$7jm=7Fn9jj7))jGM_dN>-kFh(-.hfe82u]tQBeM`$*.XbI4G-'Z_)_Z6g*RM%*m]]q`q6HI&'$Cf5C.F_2n=KV/BCce:p9H9/U7!\dIH0'PhS9LG][r2p[n$N;J*VT.kXH_+0TVNT:M#%pO^]^9:AI!9h[bcU\r]K%l[t[>CYILg)(7!0o-fA8T<8-?H:sWliY/$I[:']If!0qLHV\QDI_g'>CiA(W7jh)MNd(Bj:k,bK_]Qr(WjDLFhi(KWEHGX\:Mpc6%<]q0<[knEN7N]"Fktf>/Ech0LflN%Q)qV=W']n*"_nGa=-%jAEa!!N,(jAn'+'tVEM22rrgB`WP.,Bc;]X@OVhYP@i[+-g+fNS4T%AXc`85j=\U>Kk48V\_9&Nh<J(5!-Goj$#W@8N3YH)Ot.u`TK0Mksq)Qe$3S-r[phBrTVT">e';!^8^1g(D0#E3L)r(9"F1cX6&Cp%]Ue*Z@!t5p]meFdF"pp9cd0)P]ROr82s^F+?S@Uk[G]`WA)%5G%et;2Lq))D/X=^n>h=tmH6bC8JZt6FP\QJdf>``q-qt1P%t@l5%\3BbC>'m6U)S`K-N_9l;M0R`tg`B5an8]YN&1\c-8<VE32eh$d'9$g(cT<&rO.LiKN+MYFn8<$@oC6O?#[Yh/GKE]-Kq9@Ss*Dcg%jYH_2kEcYB=Q\W,f^qmB-2fj7!Bm=h9@r?t(i)[_9hcB(2OT_fA^6o27'FI>_0(/#bMhufU@$nO4U3SkEdILo49^5FXPY9qa333$%j^jH8$/@[#H1St<\:)#6E4Bd,oG^Ft-$%[\5oR`%jP@OEFH/;^94dVGe,;qB$XDWfP-/kWK4k4?c>*(KjVq<Tos<-G(D7!YHLLJ?%>,qF*?Bfc-'HUh3?)?/e](t:HlC5\Hj5YFR@MGCu>^Ptb^&($!?iAD9k<V[06Z^`F2HN=C_P:%.X?`OOg6(,<\>jkPIoMj"[_D20%\2\hNOdRt=Ti0RB+aD:"I.N<d>DI_aaCT_qS5?K^-V$tQVo\*Ka"\<5O4%HbIX&lB)jckd-i`&BiMN=KrRo(aa4p6.i&?_5`c74U%b@*4Rk%s=Sm[Z\?]sA]i)Dj5BPb\MA#:25/^KnB=oThhmEVmStVk<\I_a@V2`:_CLdpL7e++4%VQFlhPB5bHY_;gG=J*Q%*?b@EG%LG/!ir51VTK0N\tq=*S+j!UJ3qW3'N+9(W@Hf';>hL+e8r:lQCiKO"B\T-s.0<\W/jj!Ol]_fkEci5i7o%)irnYa/"I.NU^T=t3]%Q+&sSp;9sL\Bd3[lb2biEV8R]Sa0Y$oBuO_Z#LjLM'(OMbPU6n+8Yo5I.F1ZDuA_b=nsDSKDMYGjJTnd.p(?gpYU=BqlQcgs8I4l%(s_%-5C*!mRs33X'YjW\rPP8_LOZo4h&l+"GPf(%s2OGHWjRN;IduRGNAnQkleB\=\gnf4)0UemN[(t\[!TMn^N9CpZ')R[Fgp?4%ksfOCH%5SJlgE)3:L8)IYBd;H?=gbJd@J$6o'W-`q>SF<]Z(uTH26sOc!0B0a0GZJGQ'Z&p#G*&lgI$-<r0`1a3T50@WS@fQTqCW%5Q12uNKsM=\"E+q\N6e"<go*KnF>&RQ+m.<[Iq)F]&$]VIK)\4:&"?#[F-R,CUN?/^\-9>/X<3RfCiPNm\A$l`p^WaGMO41D63@g%G7X80X1p5n?N5CO?esO&Ie2Na9(T)bmm"=1HX!=rE?DslVlsj3@pb[>5JH["f0=\.o@o6,r52n9Z;u;Op"*io)rA+b52]&R[J96d%l(!2]Y2g\:hg\DO?=2"Cc0s\>TC'9O<Z9:"9BjdkhVD@L3kk?XMcsh#a\qN_qTl?NrH_,5GPC^nlT&d_o_eED@9]S#N$EN>rHDnD%qtf`!Y+<=6?<_?JFT(PZrp'/l++4+KVFo\#iM6-_V.2++=oI`?YLi5ZXu(V%UV$E`-XUcXl#6!]^N9(iXfig_Wq=G6p[MJ652Xf?%r9EU'O+):k92Ap*[6B(ds0ktl)iN\RipIa-Pi'1FfiVs6HKFG)YIioAG?X6T2m1CTbn"uiHnCV4oYZm)PFhd<GAd0PO4'mtY?X6j%bpWO6?Cnh+7HS@JQ%&GHqIjZ@^O,P#cL!3KIXg0:Gl.!#/#>*])rNs9pu)_gLMpI7XRs>)+2"qfda*F<jS*jV<D&E=I_XpWIf8#M%irK*kpXNme*^)XL2cfeJY!:ZEkuStaqY6F.]lJ6_?iT&uIN![EV:#mWJ,SPKrc3?qV;H[in;U/-N\[$&rTU67(Z0$Hi#e]jn_P@k%Dm&a(H]S1&m>(/EZ*D_!05c6TQ.#K6m-Ddl2dcH*>GZQ":LF%O]:1=apUfbWmr+iebUOWKiG(URl]&PgJGW,Kq;ub-/!]Q$k2PFc%VYOWum$mGg<Vkiee(f<CSa1cSG4O+l.h>s5Da!RT?f(SK[p&$[iJlM^o:#RCo>Ho;YJ5SSPA-jPfB83Ds!h#pUK0G,U&nfujsr[/%RdZ9%rpG.W$@b#SUs]dVIIu*,G[J"0pYP46l&QX!s*c`9f=uY'SPS,>rE.6FmB*35r6!nF]<D0UXRtqeH)9i%&$B]EDgubJg=&j3%\o[PPGIc/k_,n7\>Ue2II=:ecoCVPLqc'P!%.NGtCVT]=iepUQ9"Te!?Jg3VqUM':_n2Cf^!i#tq7EhRJ,&u^hk0;Lnuhl^LGplp%r;-9eIdd46X.+PYBAi2^Y?\d4gCNQ#9bQTPLSq]<rN3!T(X(r"T0.R[UMSD_VsABla%t.M=.B.a/hVJMrh%?qY<RI&Q/CEpk+aT<%r-Io5BRB@DW-)]Zp^6j=P)td9@uZcV"NUuX&;C0nL(G,95o9Y`qqM.@C]@@dCtW[;h<@-#IJ.tX[4Q/BQ)]9jkf1HPqq(hss*Bd>%mEHY(0:U.>hsL;rG;_):)h'sFEjVE%?`j:W4a\Qm8LdeVB'_4>c.?uYn5ju8puC\2NJ:eY/j/%&q;P02f6kRJ2j[jp?MqFgnFlk(%q^q^3:&V7+mdC'uCJc\7s8)5A5EZ!Co6t>_iV/]=SZ=tjZJjF,h`k2WS[nT(:Ym/G-QcFSh3o4.]C\/Im_QBis*c$M@Ektt?clS/%/*Us#N1IY0\GLL4d96G&?]qm*kPr.Q;u>n9MoVH^02+UC?2*[(`NAlqHZSJtj+R[3]g);(gq<CFn`Dk03Zs).m_1pc1];KG]Csk"%&*jTrF#U!]i3*5=k't.R\9-oQd`:A7NF.T&J)qI'0,.;'g&C>f.(tfB%nBj7BpR><B!Go%]l\3\9Wr7sGqm#'r11;Ihg^)5^$p@<%')m"Vp?1$!lG7hN$bcJ(dVBf2IX^n%H$T_1=+#;\Jbq1jc-_lEB^DCWo]9]afkYC'hYOVC28#=tDsj]ljlXO@SA03Rb/V`nchIe&%\>DOhh`iJukL8d]Dt1@[Io\5:C&[>?m^q#hO!_K.p//^tm58f.rD5H0(S<:-o]0<$8,&lTo1/QK/l(tu.aTfBcas'j^[:-PnBnr<%jU$ATIoJY'NMlO@SL;fT5@;0SXn\jpb)Pl1%u\b7-5a8[=8bY^a[u(oB6O;H9"VD,=gT1f53f7AD``>]qWPu>O+K:(Q`N-+'fD/o%O+KQ9gbc\p`CEM3.$+&Xoua:l'sDE2kODol&.^EYGC&])[Bn$4Dg6<bdB2XCcWseis#(Zb$Q*q;/O/%*?.lggm?NCec(BJ,')29Q%D1V\1%jr^JCqes(*^0%7r*Y6YF$#6:)oRNIY1+stir*t@h2B>Lf3@&!O&%Z^8(W6.r*&mnXGRqlcYot74klQ\s'3`3YZ-1a)"$kl%H+beq2ZMNcLD2UCLqSe-S[mrK?8<;m2?R+0_ai=.LIZU!3HjAnSD6&EF8-hbL6A7H4aWES@!d1ZPM2'E0UhaLj!4TeFZ?oaQgf@3%?^a(LVp_P:Qe)/L[_@@nU%otH#$WNY`BW^+Z),'fQbt0ks77MEa_Sn?>9"X6NNY8WNtD?_n`=rM$5Vs*DEiXE@+b=X4CEU=HO+k4%E.ks72jW/FX8Db\4oO?[1=B^@2"nSMfm@c\fY*ZRjNIJiQX)VPi2_7F@a=g!50hIBO#6H&o=e7Eo%5bukth2hpY$sp,'m!bIT/b^%cC:qCnH\X4QUO\gDWkiJgCZMcs6SiAW;6hU41NR.=m`BIH1U6<CO]0hYJ>Woa.Vb6h!KUqI8D<"Rs3t'j3Z<BNJ#-2L/pLWBWBrp%)a;g(Bb*(D,WYbsrjWeFb[[JH/RHIpeVhh=Q!`W_@`X'<,g=Q'm=%XDjP-oWkK2CSs*@gLO-aQjn',d@Q5i]7g;JAA?[1+C8jCUh%AgQHtjd*opqQDt;<o9/!FX7H>j-0CDh00rR%Y&]TGO<!P3Vh]Qr_UL9Y3`7:IsA*6O*\80Uh8nX'/ZQVK#3">$6k:3_]'\1*f*;B%=Sqr9q,X>!aN<b_)gWi\bKX,ArVAg_CbF4N@FZYQq3!YM\R1UJnS]LV[*%+*U1Y#/Z(q-NL4a3-c<0)Fc[06&)BDJa\ImHfS%BYG%H`H!#^@RtogF!BK[l1TdfhBRl=nJVE9'<t`oib:\mdT*%\q5nk*=LQpQh.=?Iq](AWH?tJmijur<8chW)Z)YsEMpKW]t(;*%C8.M%qGm*C@q/4q5PcK1X_n1r<gL+&c<+5DNBC^0Cb_^,c'KfYA]&X4[`ZnZg2YMA`;-)kIlE*QN_#kGQXg'^2lbKC\H)lG?<>d_>2j&Y%b('-HgWRio&I`7AjpnQThqN4kgor(gqWr;_qu#6RDE0C4HUm7)@>'B?D#>`86IUDJYY8m\?DSmB.FiTQQk\c4OfE;EV)]F%m6aBq%NU/O%`S)POoAt<^RS?O0boG^q`K5IL7jn+r(tr<Kr]Ag=)F0:/jPeo66$tM*&9!<J1j5iW2c?QV-ie9/MmhDjpEh-cr:mFUC@=*A%n+QV<#OPIHlT".`Ig]PU':r(LjC>8e^A[Y'9STPEL-1=N#!-,FZ-F\cr4dU#(GU!ZJNnM!=)e%Tf.Gimp99ebP@_b$XC&6Rpi,P;%AV5UT'DF.A=P^mBV>JdPhLput@0p79So*pjU]*H-OJpiT!"+Gu`>p)Sqh>"j3-fV5`&FsJ(#Ar4?[i@;+#oRi!,nCb:X8reHdS<u%^a-K$kl,,uN35)BV,O_RDr#PF)Q*bRo)<)4%&=35n[$\tf9A9UP+*bnTr^jRBQ@!OV%9T+FF!G(EugKZ?A%pkf<.)W5p)m$2#F)'%Bu6^WqfP_!#$'=l)sJJMIlr;\E_nn$YJB>eO/MMLnlK-4NE3NLk>[3;p"DG)TQ97%8HAZLn6`/bG?:9$G-J20GgnV7Z7nB)B]i3p%bE>%i53`n"QHSe;IT.tm[dUj%?!$0!08.C>:B:1(=rHp^=0sJa"c]X,fe:9Rm<C-<QAd>X[nr+@\K$f7ERe6Q]ZA,P]Uc>O3C7Wk%T/a88p(##AhGc6,81'DGcA:XiAFJ,,<q[)bFGQ7\K6SS)rD>F$JMnqf"8\-1#L8Tc([,Xue#1m>f;(gII+E9e,PAB%=(e/g&oFU;%U)f:Id@(UZ^GdJ^dJeNoHE4Ynn261_4+4tKg!PETNQL]JV(HU04Im@6miU.QZn(MAj3]/V*Hm#$N%`S=-f]QmG2>0hcL)rjIui3C%I<pmoet^ZFh+/G9k`Y89?:W+[9CBs82h3iQ.R@?G"!9SB>ePOABLm>kant2$'='V"5FRu4NK#,mEUPiDfood<7mBs3o9]:1\i2RV%Jc[)#bM=GfcuuFHgdo-K@gVO]*<Leoe7sSfT(erG2"-r(Q+Y\;J;oPEqR)lJ.u[bu:W""/kk?AMIIeE(_XT0@Ycrj%@(@6rIN&(&%\sSP<B48ofn;WEe\SV'V3h%/i'RMPqUfDc!]bj8S0=AZ0iE3#1M`UgNY*Il!cuqI@L@&V^O>%bh*lr=r_oc*f+lOrj=iaqfLjcg3%3"h2LA_gKkS<\*`<"Xl4W!iBL]k]Gp92g\ZZ5p1M@pt0_fg4'r1>+V;Bg['jFF@)"(okq4CWeO-A$5,iP-f&4LgG8[kAB'S^D-_j%qt'2DK9RH!:06g\r?`gcm]aAS#?/D"=?:.YQ5];S`e3O)T,&ZR+`a^<hES!ZdPjm3LX"p4n]dEXg23Uf+`CT!WSc7$-!HXt]Jn3i%hp+nXFN1oMa\A@Xnk&s2QbmZF)f&8)[eabk_7-!\+@;?=@]`"qg0im*c'=pBMuaY#!sOD1HnVYIZLDB_SR2-ghc%UT4.KW"X7,@0%k^%<6ae<LrTGtrh\mc.THNkKnYN+fm[:djoAIFN]6e@nq=3_SoH4F5-#$l.b1-'ID)0D-[_(4]q[:dkZjsH9Zf:G9`d2`nATkf,f%Z_&S+6e@nq(Sbs0jNt;Id'5bm4GU'ZOPH@7p8^sCDN03cc31`MH_`8O+h^Ct089XJhtj_,+^Z_IqSnJq4h<g&,.'G[lf[MGPZ[Kg%+5bInF/7J[o/)hG1Dji7e1hhW\H@Xcp@5OI[PIRO:kKd[3S/\,rF,T"o;#HX3Q&JYSG>,I#&EJO@*0I^UE_,1Fd"[1/((dX`V,7V%5W(kV#jqSf@$#RoPOZmpltC5kd:bm_<Sd8FS"[rAj[dJ?JAH3=N/JO.A@Hlo:";iSRd>3o:lquioFo^5f8WMRTk4QeQ"Mo"\NaP5%jU`t]ZgKE34Z9neS%L*>Z(oP>3:jF=`$$m^H_hX8!t2]pQt/6UMCI`YF\Q9aDVOX2q6D5nX9tL-#7d(*@?Sr`FU:H;o2pE^c&)CA%=^W)Id$P(3qJWu,0hNKoHg-.-EH[uK)C(4$R&^:qC/.LXpj;me6^LtUkrJt(GH*Y-5$tlrl^,j+Mh)rnO7,ScXat74jRE](M.pRV%;@Y?=p@QC9332Or1hW\EdTH<E)0<gS%'`u*R^$I+aN0!EM0@De.g*QN`B^*Fhi0i8II)gq`'=,d',Z"q2r^,Tq/TJLdF:E)E#LMS%T*bA?OPTm0p1ssYVUrf>)h<*9N4jra&T[JRk5%&35T3\*eIl)i`C`)58Xq8S`>'<`N&99ObpdPJp\s[HBQc+2fY2>\U:L]LVP?k,%fl&NhP#ja0VFSe<Im3PKHK;bJ=g=2Ge=,\:14=V1!a?)#8jQBj9ouE<3mAO>FXqDWIEZnLXt+=NlXPqGoQR"pG&:$]S*pgN<7cDq%H?%(Y&2NT5Z,!Tf\Ag.$nrY)dD'VNHV+YR1;lhRgXrAQ@/3:I3;Huk]WjOp+Mu.uRLl@eIILWRH\f`c;`PKdn;/5he+>UKgDi!(c%IX`>*VL7!G31(e;BJkT>&`(ht%;g2TVC#M$qgHupiHVI/1/b<AT/R*$dt%&-`!hR2n!KX*kJh])jDIg-G:j+5c.=%5&!%[uU+H=*%Qpa^/m:4Nb1!mnd+;F6O18#*eXY+Y&Hm3c+6bB`cHB;CnI/.p3.<K!3qH,%cTda2b=C0fsZ&H(&WWuhip"K$&MDMCm;g<P;#U\.\%(TE9P\Qc#(s73Sn9%^_Q/[S#Yd6ZA'>2OB6q/@#Y1B\I84!3l?ouBPJLT?JfSod0O=:qR(oAPElW(n`_%V>4`4)e:c>\upV`q[?M%k/12oTn</[ZMAGsF[r.1$0T3KW"Le8I(3iqifLk\kJPj&@L[2q5Z4cMTW@.3mC"fIkEs=_M;`(&Z:dmP5a94;pAXUWl1H0P3^uFG%D5Ss@\?gr,g8Pq8U\#nba0;+SF6olk6+aZk#(F'M4)P5?Wq"BIpKP+8N@PN;f\.!Y8t.NLrMMj.CEaWnO8ejm=6N"]c^T,RK,e[^%L-'<KY)lC^dDl-4:LG-5r0g/6?u2`X)g8PoZ(3VX@GHatKO`TETlun'l1NT6)T/YMZ#Y\h@F``aV?X%X_?cJY(`(JQWmY_gFd/$b%@M0QXDgkJ9,Ln_2\W##s^F,,*.V?mM1/^?^4BQ<9V-?EhDeCW3)<Hd!W[]d22mqesW#;Sjb<X)pEID(6DNL0YWM9Y85t.@;Kp@4+%\@sY-+hHW9S-mjra!R5^#Q!*"Ln=/[YE0+CZn@P:Kc:E/m$nDARU(3h<4GO0UA#K(:K$.d;2'k)_DU:^*UPY4IWc;,Q28TSM,345%M:!fi=7rh^M%s!BKX1Y#\(;\f!$FX=j[/$<kV/Y.P`#s2k$0<IUMohW3k93565LcfDZHPj^X=:9\^I=7*"em>29,eD5`b0\\6=%c%WZPQ/R=9G[-/F$Xqu#]L[D/2d3u@@']ta5VqjZfoD/HH3J$FFhm/GK$gWNBbh>6qUg%p3c*Vh)G[ru,mg&3Jb2eKKi-UbI'_NUVD%,eH4P*Tplt_@Cl)6aGISk9ibSHrWc>gK<?ZIF=AHp9HF=$uY2@/K&_VX`hTPm5;CQqe]9;gQ2iU?`NpsE34<D8)[A5J!tD_(<[S=%Q"7?K,GU<c;o%n&l27=,A2h"@o6XDjSR--SYaa>EfPg\$Z?pQ^W8XLj+5`T;\G`*Mg$O2lZJ2Htroi5!CTiVV%c#)`pZUK>+.GIj%Uh+io*^"B=W0_!U43+tp<Lot<"lWg9S)*2SXgLpMWNDue*:9*XPKATVot)5J>[II+GGdD]rKpB&<=pgaV"pG]FfR+VIV?f><J0tn%C)4uVU?rEk:>JfpDH3]ON-"5bHR\K9R&f@ED%2=LD3+;0Xk/Ec,Zf2N>]!3#Z#5^D&VV/PH?SCdaIg/VA4Ra2Ea2u;-#uB4qBg<@%>iYStmX=C<X#m[]6gkrW4R!kQ.8.(uY'tk*p\jZ(=M=XDE7\tDcj`?g8'e'E.Ln7<2I2jo:nVckb,25_V5pd11JTi6*@=mp?cL<e%X37=Y,P,mX2g/],rKX_R.aq;?Xe&?I?!UAr.tikO9ikuWG<:pWael-1dmRj1KX0k-Ep5'FOU5RIe_r(@\o<kSVQ7Vg$gVq5flSfg%XsTN1=-lQ]NZFZY2I5.4NN5:kCq@21<@]#LT1rCrI_E:SeC+o\FEQnN)\"Z*2Vhb>6gk`'68i,UDE5gT\rgUkb1Ulh9gLA=8S?LX%FiHnoVQ7&-H5"W%X(q]VX!a?1=4]]Uin8ErhNEF,pp%0il>l-hf'E+aFEQhXA^AFCZK^Xpl)Npipt9b3P>SnCCEhGR*AY/POA/fC%9@n2+htRE6m=jp81]T'#Mu>G"`TW[32I2aFR_(Sk,sHI;(8P50qS'PP0"#F1=1YT<<P.HQ:IB'//MUs'9@Z/pHQ<fYDCi$j[n'>/%b^-G\e6nV(M1SL3bDjG9F^:a*NdDf;l+>5>>p)S*KP?jPZ`^pLPfZq6Lh_=`kP*.i6;<hi$SiNh@a,_FNKCJIJ'D90c;cfgI.V4B%RO-2V%fYFifA*cEEck$NlVnP14[,8e\f5]UpFlK(NLS_OiL7A2LuSB\YPW$%'O*3$l]S<UeTT2CaF,!R%_*)c;R_^RYLSVXUcMSl%%ORKSEI7Y(VrZIg+\I2slO.4co)(Q4'T:rG1QNQY:S\qM?,:LZ4Q(J`#pdq.NW&6eatRWAiolhr"qtJo&k$oi#lRa`\]YFd-mJug%M2ok#&%_Vk:egp186>+aiBi651t:!r7705/A2MfbNmUZj!h57r]5G>+R?*89]0``e`cC"N\^B-Ag6#IBP-CKsG9F=lOkia"_S[V1%Yd*/D[4O>A<tfB@'#i8Dq0`-Aq^L@7.NgRVolhYjY?C%D`al!gnEB4RSBClWQ7>hdiP*nZ,m(H]`G,O`Vc>Ba)IeO^`_[b<Uq4%j%PW,id%,n:X=N9LpT8e[9U[7qDh`>%"1d(C"`mVB^`7A=]i[];TZ(9;53?.Ck)CSI1ePT?88K@7ET#q7O:Lk<i_[F'-dQf"or9p>I%.35nV=?#"Mq3CVsgg+V5%bu#Iom<`0\`'\[)ok&.-B\,6]f`!XnqLtQc8XiZ,VQ.]Nk:ED<En1(+>9_;7?\tRE&Zjlf9JW1C\S?_%?)sD]ONKs(]/X&jfm<%W=Sm+#rK(::?MDClO#*DC+bL7oBIWOm!f=='Ib//?O':_(g)1XMWiH`jgR1<9/[Q,lS_@qciU&JRKo8<6%U7.1'BhU0Lb&=K:dD*h1d1;/92;@W^fXOt(mosjAR?AK8+c5I^7E*h-T411:Qj,=_\s_s5\hk>n0?4RBMK\+):,$gW,c:;P(#/]P%FsSD[G"lGgmh?fW>^f/72[ec1'LU#6m<;97lD,87oiEZ$+adk%5NFB[W#2*_.Y\da0kua7k0'rfPo=CQel.:r`f.,FAl2Wj%F&#J%NlERNaO!m<3-c5ZAfuP4W,n[*DSbkHHi3L@O1\4jcbh'_8Sa$Z9%J&fNbbnHPI96@X**;-BkD!^(DjR"*2Vj^]:GPck-eXaSikbV%[<$?Nm_4*mIquB?]!\rVFoYs@:Oe(NBC:,WH]0RWmU83Vp&0#=5$W"9P1*aH>]f^br?u9S;Ein,NRLBl8U0C`dbN+3T<V'B-Yt['%rr&8<rOg_Vd:E")k2X%6p?(Q[[Q$p]qU#gjfA*K?d7;A_@MaOFQiBJ+7J3B:rUT:5NJ?6'R>&Z1[#<*<U,E>(cPTFHbo>inSTC&Q%]ZTVfjcR8pbPXGg,n.5NqtK^8Zc8&45<Si>\`ol%FWV(e^:B#[?T(YuZLdSY?Gf:hId-F?l:2rV8#$an)K&:;!<.n?0\6P1^](b_%NR)UGFnk["_bMfK`?T\hO3'anUND6M]6j@%i9mLDSG5k8C"F+Y\P1Q8.^tdNs4K8YXR0hQ]j:=^a:8JIF%XmLY$Ib1LmCeq'FN<R%fE?526D7D_[i5FMar"q",jB!V)M6OKl0<.uH+c@EBN7\,=LI_\e[*\Y7;-]]CaX].=^fUV`qF50'!aO!94c\Ufe8mD]mGtZilQ&:%JB^(DM#4"p:?rD_B.u6P/?\h6#FsBn/(&d5opK(@`7;JjY3sIK$l80K9r)OZ%]oY_ZB=#29Yej3L\>>-I-f\7"R7oA26V((O'($1%MTBfqG'%@07;*hLY\Uu*:oaa<CQ?j.Jr`o`7R"qdeZ@Gb1Pb@-mODX/aid9/a;s3sNaV?oA'>p<'=qFU=.62qc,HjN+?Q*u[VKHY%1.3RA?uL;?KrR>bBSh5qCH3A)9-eS.LYnNJ3K`Z6[E_(C\g-B?%9)+UBPcn\@/e@IXg?#.#9C2A\4ZpD8n4XuQK<O3.VGU'<HBYJ%=R0&2Z^AN#I!&oBn@W*gpW%#bX[BkGfsNDk%DD[`PSkEd^JFSib"9mGRcKFl`l852Ka5$'@_Z.o$a=CV?o=\U$41/^9[?O8UT'*D%Buccb!+GQ(Scr5%^SW!d-pmS6=b,m"*!:Yp.qSf_=JaE^*/oMe>+oqRe>!nnC)12k8Qp-7#BHmaVdl59ocb@N$<_o(>q0>1'n7P&%B4+[Rm:kWSq*qrXmE1ddQ#FkBIs!2I*NCgh9DO>"a>SlJq8c$sT?KDT?HS%p`6iJ<]>CClFXZ&+0BHu_+*h=^no_X\Ef<Ze8uMf5%l;560kgZBf:8u&=\,&gn2AFs42j$e:M:I>!mp<d"d&Mps=,=;e^"9G.'roB\]$e9@'s=Xnl?Ce4:t9pkg/4P5974[)r>J^mDtRnG%%5mFaI[rHDm!J]b,=<[9C92d\3b38*i*JXjjD'9foCHP;Hi;ZR2L'`5eaE*G^X_dF2h9E5ldn=nq?YX!n+E_eVY7%P=1Hkc4lWQ:%(3FhF\u$Q,-6GZ[hcTXL[3'MSjdEotIdOW@NECb3nQrtR;n!nWHK9GOlCt/5>Q)RUO)G([n(mI*CMsAXIffB@[6%?^M!hP9okR?n%XiX,Id_1,&%[D"6?fcHc/)TYO(^:f6l5/HEY+2*#p\M9*ZX2b[]'?tX[=4QLKchm[r-SCr"0TfbWE6jdYEZdZE3%k]SZ=9tldn=O%iC:7qn+CJPCWF64PIT5Jh)da9I=,O(nL3;82h'UNrN1ODB62S[ldtPKDN;.Gm9[PN9qHC^a1p60rDp\TA>K`ncfiVJk$GfGIrdK)%i2ZPJ[GU7.`dN4Z"DP7!a#A/rSbuO'M;6-1e<]N!]j^D:^JV/nX%8WJme%Mi[OBtsQY-_dH*:T#?F@9=>pV"<F>]tYa%!_nY>*8e%o@r$s'=l_5&p^[un+H"4pH%`UIX*Fammb(G]mc`q>h.WqGP,MAr)US\rQ)6FC#ke^[Ti]6Wgo&jY?uo%@l7ZP'YEA<IdM\]".7LO%n+CHgO42!YXF&7AqEhYs3VL.8UY1o6^"9G5\-?jD)^fqc^=TQZ,C1@rhI60T[4@!B-ZR@WrRqooM\CBKHi;Z:orHK\Y&pjSRhA+M%bTuWLl`.j]GHYA!-*+NO[:\$NE3EXGi@lO8Zh(kZm=tdZ9&Q`9%ic+8\u!Sl/dt3s<9d)Tg$IH3Sbj#+MdFWImG&b-?VXh,a>(C!%V!Pe*?J>)\k:u%OJiURW"OdK?$C$IbmV2k:A;!Z1]O&7@?<s%McrZ"UCj>15cc(V9F*DrpT8Ua*X)mUYeVa[pY-H0"^><)kH22H/%s3,%I[pRIqR[LnaGB*KImZY&HPBV1up?@KNgN28$4?]3!qtb*92eSa(rdLJgqgA1bSSoSkIQ]Z;RUm#em/MP6<;\fPo(;8.J%m)o%XZa1ArdJd*iViYUji.6pb^Y]!O-X^3q6g.ccJOPjV[N)4(M\,>k3(FD[CKiAl]&kbLSrIbZfME")o$%3%q4qQrReio\@m>J^%?L:%_6i!FoR6PTWP4S_-FYpsh.JBaPJ(`r+!u>q*e(f4q"OLI`T>^2q*4I$%mRnGV`E4Hj7gji/be`l/BK`G]d5bde+XZ.rjdLfG3,L*%>(OWXK))5^J,X?#g:_jCHgC+%e)C^*\jp^goCnIFandX^e$$fu?;J;Fo><b^Iduo8\SeK*d`W1"fqn"U099`$NUN?X7o/mIc[U1c%n!;8%5Hr=VEi<?B2`n))iV!45>:f7BRG#9_3dpPe>L1EQ_"knj/WVO,qe7S;4s/q$Q`sId-Q$dX/;@2q54Lbj:?QtqEILNno4%=c%o/g`;QaW5:rFp+i8+,:)Zj6?oHoZZLnF"$hn8LBD[r1YHZVNc']tJo4+%Ie>:R63<>GG82A+.A<r+f_dHY)VcG@CO.4gFTrrFTtc%ledb=!Z't>cKVgq=gIblgT#Y9s*5nnqtPLQcM1OuLffA?rIK7[k;RP\Gc$PH#2+HB*fZk(c0.Uoe'H[;TDm10Ac*4B2Egm'$$WVE%H/IW7$N<]ChRrYmp\j+;KB14f49+*HEB&C*qgB$"F=$bQ+obt"raBU1;uQke%S&`(MpM2prV2.tDLKWV8>72,BCC6X5<N2hOc$ii%R?'@F)'A:kdGoTBqPX-bX&1s*^Xa'kXmqN]*[ZuQF>!:STnGWV[Jf@G>i,27AU<Fd0*,'6*j8&rbH,?B"h5Z:EM":5[9M#'irmQF%MpqVppa8"IqWbIR1F60cfj.p2nFW4@^HPl<?fe"fc_ol-5C=b[S99\drcE$j-!Pb@k=5#i2J1'mN_(!u`HnXgS\Edb8u')A1n-nX%MR@5LDD!$g\?HpmqVg9&mH4YY`AZi;X/FFjaX=:Rh=I7oJ*nAjGk%J81q@l,q-05>(G!JQamK%2TG,$^5*t$-mKqSIgS^)@rl]BR%p@i(=eB?J4E8/R,`K0Hmc9OABU9*$P^ZH^@ORLLV!<>.K?3CZB!2FK/J).beBC4$KgF*6600^L@WYGN!qfA/An"5eXi^NJ`H)tVk%*4q9DFu_\Wr3tS/.t(NP"ombT5Oe!mo$6inq_4:R325)^"h\F\DoD9tVG";j5L)CAfJ6Pf?7,8Ypq;a1et>sSngF>+$Y%SkU\#l>%cS*?)YA:rd0,`V#QfS0t+2l>"f/;4$MrhXEr<:F>?od]H>MlE,^5j4;."<#F?%%*i-/Z_U[D[GR\4uO%,CR;@p#4Z]cX(hn[E4Kr%XY7QN4?tF]0_Md4LbZj)nUgAuqp2$p=053uM3XA-H_)DK_;&cf%rSNJLUn:.XIPg*R'krO6lOj(qj7ob>8PJf_Li<Q]_s[%i80rg%IVeQ5H+.ekIL0JBTDSlcjg^O5:+FLG:NMkuqHSLrmmkD;--4tk<&@FrH,h6a924b[h_.qiQkRW?LDBCNGNGOja2j"%LF`8Fn?7:9%>K^`0_,d0,#4:F=_?DYtZI"(9c$U?c(45ffC)Yk/Onmo?rikm+p;n9"+F:4pli<8=*fs]UMt\G$D$S3)"@Ztn"Fdl#C=)_8LF!,q%qDkb&k2J\0?0o>nchr!GM?W2g+S:_D@W-R6V$iJa.G\+#),odpDk+$b0*Q`FVPnM9BD>0a9pG1_'MZF0$hXh(^e5NS^:K\b`N<46%hh=YcYEgM$s3<"N>s&;]T?$aA]S`U0eD(>$`/VMN^P>P#a.!Tt8PlV*$Wi=HN]nB;*M(H.8ec-+cnDp/jn-m,*TD^0c'-c8pu'FD%U2\3-Qd`o!9^=pHYNM,=Z@rgf_DTTtRjLUN8NbSR"M3cO2::!jo:OY8S1dr\ioF1G,MMlZ^+Rq_hY\F9)"0,8#+BaICD3?>F<(SC%_*-Ghg#"N>nb'3);SfO&c;`]!8*A#-C;"WZr5TOrGA,pqB3bUg/DZe?o4qS;F7d1489J3tUJD\cIH\pu)ogR'TrYFT)`;S]lhA_g%B4U&dl^1@go^/rt!S[FQ:&LM&5*`6?hSi/@/bR52d6t;?i8c_Do&NNj4"!mDPMN_Fjnk1ts2ntT`&u%0@Y]e#3GVsYN]_LUp!7l@%F7QGYFX%rCD;rUt3852:7_cHbcm\SGEi-M\`+*XgjjU-.meG/Ef8G7$Y1U\%0$Dpo,(KIZGFT]B)u+hAmYQ>^l$*'gX)$<Z+#s-l%3qe<]?_I>>j`5bs;N[0L^NUZ4B"?%]/i'CicCVcoj*CXT$(8X1B-W/;b#VY!'_@h_Z_-!Cq[7)kJ3O>3dJYAuYee?d`I[bbps6'+%-u/YXr3aW2N"*'%mDkB6oPO/E@:;=s[(]N;J/DA_iQb'cK:K])\.O2Bm70CR]mP#Or,A%A?`@.\BVr^ThRg+!b[(/.^"q5u#=!d[%?4uWGY-B:epF*lS@qJlgB'5bXp5UH+mB,W6Iku!%BPSJ,=n2M`rHWg5D`(X@QV2-Y*?FkD&c[EKT!=?J,bR%'s.@X,k=^Xd,hJ@3%m:Tb_`>)XJm4S[FkT6n's2pY;_&kgceAnbk9rHd+ZZh=7[_CJO8"8Dl2&G#KB]=8p'q=L5<BQohT=Jn6akGt'%cm-h2LCr.c._2^%lW\RoYM],Zoeeo-FnaSF+"r031V*=-koIZ,V_A(pYqVG!g4s..6,J"1/D0*[\,?,0NW8VRn]qpueZqaGqDe'dT`ph_Vb?Zcbu\X%%@%\1Z<&a8C?btGE!+Id2!tMYZf?LYh9AG$hP?Hu.\)jjUhYFSW2Uc%1GNS*MnVal#rre.S5OT[S=iG%e6t6Or!AkS3@b-mbrp5+R%[,pkLjkk?Td(TV6$RF3n0j4cHc<%@^lU/_dnY3+e49@'pkXG[kbe>QOM\tQuf%_qHZJUq#a:LUAfo(>DIG=Z`o4(k'r7XcOn)+&2%pdZB^BNMpC^a*B?]j"-<Hk2Q@^_QYBs4un8cC$+o>WT:djRW3$`M8?@s7uE0e4T1!DscsU+c_&"rjdAqG4t:hs80G,oCVVOm)S"_%or5@2:UfcJF(Y=9o]PDD.BH?S5,=<l9j_PY<D@A+)fW.9k4Y-Xn([iL-au9WIn<Bn,)4.%@o;XN!gf)%#H!hH^>5;cI/#1\?MXH$%s67Ffrq,dCqU=\o#;<Qa=-Em;>J_bqNnJ(n]X$_(DQ\H@rL(AralaS<ET>WJ].:W;hS4,nrRl/e2dc3$J%j@WG:qab9!H/[H=KeB%%(Zr[ZUQSc%;>"nY.'u##l]02^%2*WNpln(QdZ>C+(nu/pYe=qVH<5d,<tJZn"pp$rOt#"qW%+8l/gBC#05S*f97[,o:qgUURtMi%qP0W^URtNU\^U5Q)Z?K&?Q&[@)Z?JSUXhppX%#=Qpaa5l'j01e6`%[DeXO0sMqu],ccI2'W,^+\hH]FS<I!6@d4tV@^U@S*YBSXm%\ERGjkM+i$ZNZG.pHaf[_;=(A?<Or>XCg55<jt53TU0kE>40&6M]U->]Y:+cqMQHlp_s4`'6#Yh"b;>9VnW2C]-ACWhX#b`T)Ej;%IY.MedP\b_s2I;%InkHUK2^(QR=<?9afRbX-+e<,Js3V9n&rIo3r&\[=^OXBO.*beF2'=-bV.VdKAc1Us1f/clq5r%(Q7+-g*#aQ%NEaT"b6KPFEZU-fNCS%AS;i:qm`Q0H:NH'9,r^NB)4,;iU^_p-nE+V9K!`%n$f9MU#]C.!_+FG4Z%-N4m^t=jf0J#uYSoS-:>J4T%[kKuDG9I2mrZ"oV5jN,uYHR]h#-e'Wc_WoTaQeBZ#*oYMM(6&$m'Z)gc.VL2_!1Ma"7VT#[AXD:qf5IH5!@bME$Bq#\+]:1nIB;R%^`XT;T7Q_6GG(L3XSr%[a)^.0K\Tn[/0u<V%*/IG'1G'Wc\$ihH?2`'?7^L5%L?Sp`nmca#LFTsk^K1,XMlp!G;04M(lgM%F2,R;%gel7ko%tP+'^2r6$D9?8,523'e:Ef&-fOdq[i]#kQKH?XLXiPF.'+1d2[QsJ!tB*pE-qQIDrH93c#mtn<VQPl0BU/'U?<rK@a%BF%Sh(G_$R7M`ciDq&=)%_NWfPL0h$>pK,MMlZln.=@L,"EKJ_5Sa<-Dhg'6o#GW5GQjpD[`^a6RN#DEXpketIqEGES*DUQl$+Sp^P'%_Do.H/C_Z4#1-T.g-kXYBtQWGbq4]A]LihX=$s&/0!BB\6Z9-((WU!-*'^Q-H'].:(&m<WLZ,Y/Y$B(qJ"VX*>KP6kCch2gBC?.C%i6TX(ram<*m5=C+s,N]CMU`n8\bi!ISqD9H&+O^r1J;.gn_E/mV#rI8Z*oMBHe7_l^<N^jpQ&W4GjJ%\ZhJ7KMo^^"XP1Vlm%(Ph%L9\M)RfjeERa?RU4OLPIb[]10I!R_1hN%X.916r@S]KWV31WcFa#fF&l0>DM=?HN3DH4/]`tK>cUl8E;Rj[2:^0&BD(W>mR'^j=-%Go(;T#=!5Zl+N^og`H1_gNTrJ"2&]l_.C1Ea-NF`c\I","gh:^er$3R+Ag;;=p^=lRkJ,9YhN2C]XYS>)j54=W'?'ok<S3>3?0U]%oK669IlL]1&5ld3K/e\:$duBZS[J6J?X#s\CrO<p]]roF+1la0ON5C*/B>eW@?:_G54#&8!*_6&j4`rVi9?#KXNpe!:Z0R>ESI,b%=b`>mb_E+[`V&$(\FKWj>arN8^_;d\3-+]c4d`[uh!F:c@r)qK;Rq&^5omI,B9".-<=MXn/=I?bGl,bqKMoWYHM7*Tk4ej>96ZFl%^Dq,5gm`ar@tnld60h.ZO\NBr^O%aAB<1EnNBD6>Nt6.DE3K(a1jc\*p6GO<maKA4Is54I4p%\]R4,Q]mnM)Y]T[OhYh(ZOa/7]g%o6B:3WuRf/GRMI-Mm^@o07;NHhL`T:63LQa"X[4H6lp]KnDANRKF+o_5@JqTf-s+X?[V?q3W@FZ&hQZb*?i1*=?)\'$&=5Lf_NV0%'c7=7N\1mMiq7I_:CAk!9l@/K?H.tjn"s+G*8G=k*VM7Lp'`miqlNr![u_F"0_Z4$+*u.6^*2#CiE*8@qA&'+7k/]=I=@.rL:t)h%RuhS)^]/V$d1._e6>*WChoR<EM&6d&L.sYpq`MU+43JI%)?PQkr83L*k?`*d]\iPT3Hd:Pk2nefl.Ot;?grSk^NoP!^HW2mrpSN/%:JB19')t2kDjjB,l)(72rXT+\_b[rLI!/+5:*'>tc+RJrHgu=Whp]@?rqu<Vid[lWJb8NLiUOVKWV%]dp:YtL`mfV/:%I.*m=/:B%s2KEC_tUiTlE:0eQiGOHo`&.,m((&5TIZ(L$$YH70B#\%#QNEUESpfV5>V-J.6[?3lLinBl8,g;UaM_tX2N.0/Snc5BrB6$>*ATe%d!"\.VWkg87SQHeqo1*]OSp`\_@p0]4.-hJe"4dH^6(0s-klPY4%&D2_T!;h)S?i!Ti\r5RI2"A)JK+UPGPQYPC4fe2)<i$;?J60%gFRL"<TOj!;#E8CmX(+UT9=Vn.Y01JM=4S88a.Jh?D'ac)OT(D]e@'q@ot@OV1%Y4I)koNn/QKjd6uD!,(Vq)MGBgEd2/dG828Ec%4psRpmGC"m.GrYYef^%aOX(V?7;,:ts!-!?qc-g7Q,F1]Ab;3ZKO5rSYVeWORA[!t;cX\Kpn[/PcIqule;j^(nm0dp-45Y1LJ<H;%pMsHccV0L2+*9^lNiAeMeEIUj:Kcsa&h#5.1nl8=i1#2'FXdb+I+,EaaCP45s,bBrV9H-)+$NN&f%@?1N[NAE<$4aZ`o8dDB\F$C%$<O)AQ.bYu?j>W<7#P>@@g4?K6hua''g7"POJ4TJWc,#A,t0UmD$rP&r$tZ)kMPrJRsK7008R@7lWVZn<KeWEps#$@8JDEC0R]Lk%'ZO?>AGosscO%s[JVV[f8>Mkqpf^?N`K!P@deG!9c\RMXAk@q+MQl3'!=9OEkRfY9Q$Vi4k4`UVfr>p.4P?lU&sF(%kiY8ZIK0<i%epM,3cnLTRAsMsnp:RS;LB,;i,fEBV;bmu'"SQF/bFjq;4@pBh$JHZOPSK'^bku+(@KfYWgXbsG:bn_5d0"(*2h<'0<a8hcX;#67%oPtCf)R2Tj5F#5N_gfnVA=8(MZOtHHo(tpmg6AT0rB<`?YSh<#%%#4;>\4G%)<ZMoH0,1IO%&l<.jO)P@!gp2iqdBOAHYn/D2[kR%f(@qJpJ4J"qd4:Q$Co#`qXlir>3>Q8b[MbppduH*dEeles!UaMe0')R[&gIED"g_V#WF:MV9h1O-aY<NYX4c@1RU[-ajeMabY_$$%hjY2](u6BC(Gn^3J<mPGNWfaV>?"5jNM9*ATK,]B1XS"-PQmqh(O:iZ":d$r.8_pX4MMd3;uW"TOX6:abkBlAr1%I`U/aED?M9@?%OmiC?-5Lsd)93I+k^mI&bc(:ccOeN46`EZ-'Wi44"O7EkH%*qPFdR5QJnpd*J2YIV7].Z,EZ0aRTHPV$P)l+a6])][C$B`hId^pZ%pBrV*E,')UD95%_Dup^f581u/K!Yl]rGeTdM[hmeI.pl6JaXJ[E*-7lb'/@GBU/DR>\RF3M=3:l:/:DN@T/+=#N!sLFEq%>iDB33%1_ED98gB%d#udKKm?_+SnPcZpQB.LD#cJOg3h8RiTW(O^6RT=JSq[qWX?_ois0T/Ar/)pp'j)2Z#=t]QN.d'`4i^4T7UuA4l'GSc%JjY7bm44atAcj>Q_+$=hbXa)gMXQLd^q;FO$:I[Q@7q6O7>[1=W+\XW^S?a[HD%KE1OYs)nbr41N$Pcqf&51$kVX.=6`%S\3b8U,%$A$GA;6j0k]]3VM8T6LjPN(g(IZ$2*Gj2D1<T5Ohk9A1!paPUVeVq!kaeV61*LU6qnKK&^o1WqY+]csg`^<[2LNLK$6:`*"=*A;!%q6NFd(Jl(V$FJo]e0Urh]^usbh-B)B]U43V.(r%pY?PS0.BsaX7tr]W&AJTNAjt%Fghf8,3r^tocV6V057j?%_s3jK`AoCoRMld_%YFl!:_@JP!"\ZtU).FV[,75uZQa\<"*qG4>V2]&c?T6lB,$>6[a]8lF7\">n$'i;g&ZKb1/J:N2@:<8.Mg!K5H`5)Tbj-6O=d:e'%c\bsVo'^=GVF==OOFfVEe>qT.TZ]Vo+O+sbc$ula35rT=L"m@`nrshI9<QG=`F\/7=l*#$Q_5L]7SDTTs#$KL8XCA5E&?\->7:@o%6u#]_E`+a)?6#*/YG:nFTc@s6r7+)rkJ;g&c%>$P9VsLicc'E._[-BBe9[*D\VP9`+%2s8GfXZ6FB!UEot1PEVc".-_PlrBBii(Q%R?so&GF^(Vml:hD%R-7q#0>*(;bk:?%W-JGT';X,XZp_L$=891,nP*g[pIb-f/-,eJ$>dgqWSem)!\Z@+Cn19c_cl_,#UOm?Kqet%:PtGbJ$Y0t\%Yq09$>23+7Vc,O,HO^n;NKU2+V>Tj+B0J7$9bd8a?24i:jm^Gcb,QWX_O,lC$ESZuCtB!0(OndghM[1T1+pn>'co%j(m9]T&P?e+Y9`eRXm%f2Y<MM/N0@!k@d4K`tC/i;o^Emer*8m"/o,m]aPk^]f0p,qj$m;Vrp,+]jE#I46?uSIgj.JQ?knc_Y2;<%5G1$"qIPf9k7!"s*IjY-*AG-E?'6ZIZkSNGTIJ[5^+D!i%8s:Z+d%pZ!Nl6ilr@E\K=2*64=<s$4\HE/P.I!Sh*mb9>0QK-=25en%&]#i_Vc]^NA,URKAW$&),/9Jn^u.^Li:DV.,!3jZ][BEC'VN1*)0(25,)jS<3L4W)3&gp@W+Hc<.$FXL!a,P>N-7o]d!]is9#dZ_%jOJVC%3l"AE,qN8-dYNa'WMds!jDF!'X/AK;],QXIaOF!!80E-^co&]d5n.U$6V2-AJqdLhJ<-OJ6;s4FE"J#0#JbD#qP%=_IORI%/sQ"&T_XT2GsTgC&l,unU<+7-Y2qKi((0GJ!%pS""VAnM9^k2#T`^!\0Yo!2Gfm3GEef/"-%NB<'L231PnAk6@u7sOR?MjM^[DV)%=&;Y-L0QWTUu+QUcoh(DA\r^\F.aRd!Q=W9`\u3A8WYn55kB28BR\$o@:Yc1qOo!ub^cNffQ[=N!CI?9WPj]X:[oM>"rT*fBb(1q%"/4id.QB%P6MU:_+oD@USLQ%@Kr#FW-I;aN,;/MN";PH4k:B`Jd'dm%fGWt=,cgPKBr&LjRR;?%;?/"sVdp]^*0>M\[0-hYh1;_C%$5u`3%F+Cc2Q$6R5W[>?6n>,kLCNQ`d1SI$$*p-<QMdtA%:W9D`X<G[Y__kjK[_J'Q3P'!VF+&JYA0WUk7^K9)d!Ap=5_@?cl>jj%r93edIr)u"H:heW_gS]hAL"uBJTE`I&]gn:8\d7oiH/Ja@bVf''/_fN8>-9O9N&&$d^mC\p%)i_N5RPI-poggK9HmAPk<2Z&lG*r%S/*]@"G9$"d%YFf["hhnKXn>tR0Fr<I0FJbS;+hNA<rGa"p#DAXhjulAD._nH)Y>f3Me#"Ol@4oNXL?,@NX!^NulZD?degj$igI(%V>)9#EcFl3+[JtDrKslY(6kqiEQ7L?B32!%p)to*N\iCkH"Bl>3#/HT./Qmr$'j[1kmake69lEJ.Xt'BmY-f>cJe[s&DS^/"B3rB%_'WRW5bo>9]oleeQpM?e,/LBY4D!^f76U\O!O4<-P!$]sdLSH7MM/DqSS!\d)8eOA3J,<`;o(6mH!;_(O[().1)!7WPj^WL%<.t5%^funP3sUdS8LdS''<HO0J@Vn,5=l033:OTqO(tQ]O9(Q&T$lOe6NZPB0KO\IV:]m!]YrU*=kspinJn$]$q5F$]HBYT8I'F?V<+GU%GdW:El=3L#"D.`ZeZ=GV9LKFm:,tbm:+9GEr$b&_%8bD"!X^BL0HoA6UA#5Q5XkrCSIe&)dh@q6K]"Kgeo/C4>*))qk%tQF!LLc$%,mCcU;Hj8R[6s'*Rt2G#gYgUSOch-qbiB&8LMkP;/1Aq^XlNk<BZ5&plC5k@;R&.!Rl*%;s3XY&**iFZiW-*mUu<M`-(-'1KKomC%?9uI\#e>[oOBBDS<d9t:mY[XR`@*QJJ9DPf.uL7;&WSb@cu:4%Y2Mi,eo23%[#p*$T2R)fE!HT:HQE156:"dg\-T@=Lnot5>prTi%,>,,s7Pn.b&I9U1c)N;d6Prm&Duk_dnU((1#R_SS.(Bj8.(BkG'jPDXGp2H4E*lba*?9&&^B]^P,bp]F$(BTP$"0hCYoVg/kBL&G%7i4qFO8p5MI:gWR`mY?fjQJo>,en%D1iJN8OlS8]"0L0[ne2(;anfMq),lts:Wpfpc(FQaNFX!G+BIOc:#e-'n;Zob./jR9HctP%%OoT9OAeE:],6dp^@;2hl.+"1c1-U1[Z4RV@(3kN._.JFD3LQ%R"XJUkJVG'Z:qV*Jgm,a=;PF<m/uM,V&1id&K=#kh/!ue@APG%[%7B;_$X=D`IU/)6*LC0FAJ)It-$5`b[2HF49638<3H[nHJ;kY-F:B^pG1=m44(4<;R+mb2KPl)ufIl_Fe<=C;0PeVu1jHdG[)%#H(%kA]e'5nYVV"(R?'/Q`QU^]D$>cHA%tb)o"W'7sTd9Zf-8U5t?H4I'"h5e%PZ,P8'g>k%2C"N&SD<<\(A'Semg:\fuZ2$s:68T[W<%,`q7RVC?Ot_=u;r6_]Et737=5%QUX/E\;ljgSDsm0EStCo9e\%9ud$k6`h`nf8,L,4.SF1_=\F("cacsl60>HMHp!C^d[ujj_:e`%VA)JhSM2Y2X%8PoNsIN2&Vd2&bc6UN]Gc#Y!"C:Zf?E41F3$i`!R7LD?9nVq2bWuD/g[jJTB$>F4ELbCU`t+';7ugK=b-1$#)W[-%NW9:s>D+d5='h6>KJ_f(:cu_%"P>`)$/_OtgpViJ[W#@qJ?CnlcqR\s81oGlOHb]8>[u3hZ9k7-62LX93$JV.4H\M+fS*,)j'FXO%YW2=H"bkIB8X<%5l:HKZq(HO=[Wj3mpE]MsZS\CJ1hiU_kWF)O$VJF:bZ6Bkq,mdW.]76-S=Ou_P:9lY;AHRVJl]Ne:q6Ifkc)32%-M>Deh#"qXSG"j*q44m3r8Yi<o<ZbAs'0sLr%HQ$&;qAg\=+_?!68Vbo:Okh[,V*]9W]dfY-*BFgNoR65=sa&=W,?)F+2U(3`E*)%.obHNP0NI,.;-9pSOq_dc-r_BG&u0ZWa^;P=2/uTf\?TV8N<I8)pYi^%Jq4jGj[\g5tDMWM=7t:-M<.1/M4X4]r!rSpCQ6H^ZU[P%.>ZNl08leW("tqa&61md5Fu'[5XA23#3glU!elsb.D5rHKg$&%85EanPi"J64MWj$=.;.K/2/UNAQ+RF@ss+X3i6b5^1i3604)b[%k@YTnB:qgbJR^)OJ`>R28F`F9.)m.iVT=pZ^ZR1+_,$o[9hc_Q!2UbWgK*bVU!+E;NLIN(Gefjpbt</-HQhaB<eE<'3><$p\k#EF%n!A@T'=sl'L6LL*,n1EmAq.?_KL(LI;)k?XKIa`J;[b#W_<F`8Uf^810Q;+W-$2^h2S>q6^ZY!,mZaQ(%UeqF_83>f8VV@%b-?.4%K:[&1N3`A@Pbq.na.ZM4ejr@dN"k(59$h>MKia`@neba7K#2NGNB_"4:T5=."%![Jq$^`jBL!>b@njf@WXu`*18:R>Ee"mS$A*)1%(-Ua50d0RsH9DN>d\>n6B#W0<&=Q.pLL?8H_$Q,+e)1joWUiS1%h.I[BS*q__D,O#0>Moo65h=oL2RZ/V\kZW)33UlY[rWMQ/Ehd%=eRi$816aH24WkMUhCoL`H+6H"[ND/Ge]fBLG8-1*TRPVIR,(l""<*<Koc&YRUTD?KUuk)%:cJjJt].C#?_s6\(BL<r?>"T?iZiJ%-#$9(@>8*9M<GFE0>tW!ruD.VOJ30V>\&45=9B`RFrtC+@4,]t!tf2J`kdHN$o--`it-4(1fM2J]S/,^WrO#3*W2[?<"(TQ!<<_\%=[A_Zn"@Q`6\l2J')3>pif[8K6O<lLTu0UO6:"Pi:u$t_3^V23JNM1VOpoqp$PGuq3-3)U.+=Dp&E!\U9K4(%KK,Zq15<]WSC7>,%=,b5b-Nc`0Rt5l.8CSJh8TlS%4!A6=0FfK<,@u/]=e!?=#2qkhd>=Sf3:[<dNaMBU49I&!$!Cjh:]_@Kk`IQZHB]<c7Rp,^;8HX1%^jACY[,t[u=H[K\q8+WtRebPQfUUkjf,7.3V4HO`24Mtt;CP>1+<MQp*4Zen=V]1@M$=M-)7X"'#onX!U`sq4FRn@+0=?VRAB$o)%_ALLln/Fur*;QK6LD:ufWMCb53KAa@^A4`oi<WmK<q=Dd&ctg(fXr&F.3)L'k=G2f?\Z0MbETrIl*Y@8K5hOM&\k[Zmr8U2fqQ`+%/\PdQ8R%Xi(Ea\"76A#"%8em:$J<5a.3kgo9W%GF,r:]#R7Jl+&e:pb)9ZIhXml[P?=ibn!/CVQ=G1sXL\g)I7nF)[G\/=;PbJEa%M3ZG7IP:g[95%T<=ag^QhLU:+DC78Q_/FW],bpbN`pccLPnYYOr;JZ/!omJRXEH^<r!-'rr:BY.^#lk]V\nD-BSub>?u`_6T^90F%PeZ-&3e4hp9=j68We(\G/kL[L2JcgJY,O]=hk7eTg49D($722'QkdAE%8jL.P63&[[cfkK\I^M^<j[FW+bfu(K@+YrG2eL'Ia&$n%RR(m.1i>0>*%2*)!1r=u!^C?BGRo(3,X!T=i93*H86\pg'M3#RK.1itTBZ.m8m+k]WLG#S;jKW2q?MSM.*`$N!m)12MAq4hOd:M=%@j#<JKpW[jPb`pA>WTJ1"#<82@Kdj3Qkf`NQOt@pnI-,=Ft(Tu#RnNO&*!+)/26:@)0;kI'D!O\*'Tad.IF0(-e&;'#sHB*18B;f%1^cC"oFOi<J`3k4^3L@Y8nd3kXm+4,#@>PhB/Id[gjR8YW@$k^^2d*\;T^H)!*a&:b;&E%"p^l&KJX7(Z&35%TO:n^_FP89MRB5/%S(+e]&j[uV3ln6mJqA%u5aC3DJ345tGPTBlU`MP#o'oDp:oE<k/(,42@8F7`'_-j:6OK-2m0U@ML&o8ZE-:.KMl.-)&#W1Cmm5_O%Esi2cU/(%pnNDW=P(&l]=9`/SK;.,p^qkj03-`=)(Ifa&JPg(#n%k\*gBA'fS1*)T`ak=Piug=BpEiTAJ-MH#-cp7bZGuX=Z="%l%^hpN_;T0E-<Pc7%P)ak7.BMnJ(P-kn/1E?RUoY7JPSW@?[aAl7Nf5J5kb*,0'l[#`"9']m-'\nOO,>kJSc)kR;lIY@i[(n4ddXe8%nhZZ'#hqm_Cg:OlC2di?BOk7*EQAtg9JEO^+17Jd7>@'8Z'(Md$7jWI9YmqgCd87Rfs8au[]G)*6lIp2"B+<H'lP^`fd;U'Cfrcq%KKc*R%@.aD-bosXQBf^>1_9[D0KpI6WX`_KTU32lPo9ROAk`Gmk6eX$Zr/>2X&9VT.\3AtXat(!EX15sQF7+S"(59ZH`0,>1dl*^%D&le\YaR>:Z"[bt!^2aXg4rOJ`D^GS3QL[?^`[#iV1RmL"Oi6e7S&CNUsbD]Njb31X9M9<SP=`rPbo<]Kp`ok>8`Iq(/hAR`E"p0%k69V_ZMH4W?@%(]>Y!%"%\LHH.&0aZ>bTFD``8m<UX<m_Ts=g@'e<prO?0kRd+WGhYrK1p;"8WE>o/GM%!g1?Jg04^f-Oq-"ckCW%+k"f7_73CAT7V&ORP2cl:QS.7o$c=2Z>G<CoXL"un%cjj;C)mS,NB+X'9"Fs9-K-hA\klC#msUDOeDic!X64IBFtE[#q<^%ZLjC3%RZ4@!B^qOuM^/\XV]lSR@0.@]Q>&+27*63n#*:R]_t,Ho)%Hb*LIeW]:m\ub#_O;)5d5W*j!m]SEMYY;;?i.jBF9^!P\mI[D(D;R%YcUH1L-rd+2QefuMcg78?>*T?JrM8h.j;N$189K,.`.stY][o(<`iqd\oM5(R(\4)'c<6]P%'"t=BCT+KCUCRbSZpgJosKhUt7cF%Yf(Bi=J`q6Kj.(U[X*XK\Tu.@Y$f2$j9(iPNpRjE'2Ag_A,Ak::AQgcRob>N',D$)6R!4U[n0Oq%CL1l?9-9m<@Z\7Eb9&O7W&[0%ka)RJNs&fn!_m.rdTTZl"*t8NkpWWRo[8=AeF8%4kU$(KBjh=\ZiLBS_+RQ98]lf;K9r0qcu'?OV,\'Da&"(6Q_*1lhT_!b>"s#g%a"De,dZ!d3$,*DM/I*qg5<jfu-1DP;i=+]XG%i)'6AB0!4SU)8QVU_</km*TZ@H4!=<%N)$+oho9QF`@^b12(AeB-A"?n"8\cbWc%.baA-lZRqc6AJHM$K,r4?o`049,N]O!*mC"=Y1lVdb8Y\"lRgLAkEJ:>0+Q:3W^r4qT+?9;qPP[H9&mc83edN4MYZ.+IA\X=:llR%dKXDf!1-_%RQ*MWLmJJ0'#G;[eo1_3BgmTg,')oS>`BjKQNg<YXFsj4";6SdKNpjl9Z!cNUeTJe==aVrBsJjK"*=j+49>F*kgH9C%!%jj::NN=q13<g?6)\qhd%u:A"N=t56'qQoR4'i-$+_qnGUP>X"*A5sF)+#nD*mZ[!kG[G=f0kON*O6t.TQTV\HE85BE>ZN\aQ7X%/o_hC,U3T+oW4gMV/ti5h#;,e#NX<:9"lj<bFDLPj:W)5B_rUm-%q*$n,d\<+t;R'$+bdD&Ph6la<`Zs.!L\V@Z1Xm#e>W@%a2ps%5V@V]SILR28d?n#Bmg;t";tbgU^Y$b7$f;jH%cB+!b8N.J?U>=%]@b\eC$"?29&APW$O!"`i^7I/V0CFFAjo/M,>`O2+=_qC`YWd%")M[;\)9Bh!*abQ.Kgd["C"2$ON_CS$+9uQP;,u=fFg06+Q!0'_N"tr.)D4RHZX!1SV6irk?n<qk)pkm/qF65E%R/E30e%:V@)As%GUH)H4[Lc<^7Pbn'&m+h@Nsm]#(/-q/dJ1^#NQNk0'NHAEbSct(Bie3G%'AI6pp#JQ<,bt(Q_:7MB%*H\V/N?RL.%]luC(-,QjA[%%;K8N/qK`POqn1*!_"fq(k>8C)Zp,N"M(:=TV)8m?EsjH1hctB&gW>).\ZS<E!`WsOd;V[RO96YQS;r!.#X4<9:2**o,7qFoG"2@%:(=ubSC8@b:;A0q8kCt,".,T%2<15.\2:`G)LtIVOegq>i,W3ol[_^M,d\is")_gO7dU7nM.2G^O^LhT(fhCSC^I;-?57EP#XM(m%!"InQ2BPVD>Pb6#90.YV/`8!'`[r@?0]P9pJ6Q1rj@I'<D(sU`gsSO]%P$KBD@&DGZ%b`X-"pt\r@!>'JiG$6\c=?7"F8-d;'[B;%7!oQ-9.qElr^)QK_Pq'3ccqSF3')a=Z]L8A49BMI3H>G"S13-X"C)jA#W(UD"tiUgS7_l4"H#d\SdGOc\/,;D@fgU`![=!6Qd@+3%X9*?tEgr-f!*fT[)&?'P>T1oK.=b&j$sX+J"?eC!P\n8h9u\StNa'BBJS%T,>8kqk$J<d7I1..4QIm?(9!BVKNROB7QFJJKKN`tf%L$2Ef>$B4'02P;<i!A]VW$R+%U=C$QQDcrW1.!RNpB#(9#:G4;'W<=F'<&\,n..4`<B<Gu+iRJA<C/8hrhp4S&p=Y/!?&9J42GO;%KNd*FE]IlKKA=aLbGl]+5ta$sS=>C%9/sX:gJiu3_O4mI4]PmUTYWV-,@s\QfFo#S9:Q.)2$pSlRu2S("_NV6R%rJ.TI&;k*&^-V%,u>6J:^#,XNN-B"+`*!9(!@#;/I)JM!$9'8Eh/-h>6:kk,`?&'[&GU'((muCRu1\q!c/04Q"H5J?qW>V1,W(IQ=q;\?tU-hBsM2`%&T!;g?rT-5"?0pX/^^Rr=bKtQ?'X[\[2^#)%N<k%(Q*jd?rNm6AdK4f*_lmf6?%d'--QuRW_CB4#$=hW`.D+92O0G(0kQ92'+]jP%9A!M!H9`_&Waa"7^auSraC>.5#j>p:/1i2\fbh(!jcp7o!*Z+"`NKkeBt,NFBF/9N`mTK)92H%LTh:t(QrSlNIKF2>Aef+;"BqO&%j[aqLcn\/<#dZqTM+'I6Q6=W?!"#;ERT8]=%\P*h.]>W<ck>^q8&l$jQ=s;Bne",[[&XbV$_Sf;@&T2%TI!c=W"C^s#m<:-!b_mU%QZCK0!*[67f&=hBck?,o0j$l;,o/a:R)5LB.Ng/Fdi`=l1M[J(@UT;4$VIY(/3S][-(7gO>=/["@Z>u$*m^K*1rZ=5@?t;%\R8E?%10H</3JK)9V9*Wg+A6*hgl"1'M.Tc-Q1#Qq`1VNE#Tc9tBNCO;.YfS&Y%!GgJ1TZ0%\PLAQ=sE@9alV)dBZBnW>Mp/K2Br6&7c+E%7g-^Z-,>/V&Jg0K)HN/g.mbdA\O+c.'4M:(,_o<L=9=PI8K8:7fMeS:"iM&IO&9_S11Fsm(`\,YF7G>ZQ69k^5UdgK316!;*h\JZ%.f,VG9/N\976a6mdB(bW67gNc8mR*P<or@P&51(F$c`bYQC]:sM?$;?"</ikQ5Ztdp<X&[&uo$$38,"N`.C$DJ>LBi?PS*f$6ItB%YZ+bEFU,][AR$Fb!%ai6/;X@"#dPbQ4TLe5Ol^haK!SdJnOfX1Y;lTK8lK<1!jG)8</amFC1:X]]Fp+9Oe!<X9$B#$pJJ^V'r2bG%&RL:s(#tQE#osA',nr4HQ&-&F/48TPpWmd5JYD1]V,#\-&0[>nAL`NK9?:#,_`K!,>&\"^!EeW?+c[PH<+'Ym"^n<-5*$o';?b5d%!1(cIQtX8ZPm]!M%Tl&o[7&#b-"I'$0U;g,aq>a2"-udPNXuI#//9";1'T;76<lP!'%1@ugB`&#id)c%-34fhbBP<a3oMRiYOq.R%67<u8Q&t=#\M@It1a=3W&oru\KPM/C?E)ikdY&Pn?KiP@#?nnnTpD<Fb'9a\!A4e2V#p0qA&(un<j0Yr-"^>8p_X,bYm?tZ!DC1(%N5HB\-#Dte`.4\=,>Z:/,po9?JH8Cq,+Si;bFDFN^_5q9L%r^h=DBg1>RXa"KH8i.?jSDfc,CeCYuJ9.)\>XGBhC-M/6,l(T`MD$%N]&X^/:luj37JRoPS.QG&fsZ.(pO4hj?QUp/2<oh%mPe"@2DQS6'e`sjMVIg-1GuEPp&fa[o>(mkp`'#TE&,(Bh20W//8.BBae-R%NC=jTQGDL%BGZaV0Y%fNA-mU?3Z]D:hfFH`@`VI#@($3Z17&G1A-kbdQ"A%bo*UfB-m2.o=#Q$]9.1LQZSH%t`=YNW6^EhoCsj0+%*"\/O+A:A$>*gC*W,l\+HV]_LDT!+\LQJ?1*;0q0Q;F,M.sd7!9,%jZ,SM=of]IHe-"E5jpPK4"&h&SZS;&^j"a(Ct8X4g/6;c2s%6HBcF!M:VL-DOsE7P'*[l>s`bJRZfbQI&Nc2s#fo8;nqs9:-KP*=dTGE4ntT^f$j4?3Vt>TJeD,/<p]br<ufF3Ls\l^f#/dWrfMY%%N*3u#d>:Nc[*A>@epq4%"P0THs#QfV9]$'!O:,u)#=DF$1E^%7P$\KpS\X4W<;8r+dPqOJ-@AFQ5UA]K1_&XV%uKjF[.K@NQ"FR%/@@#q&I>Z6'F*P(`"FtiFtmI*Z2u<q`)=-R',HBM#SuYK`"J)O@:I/QfoX<S+I6stTaNqP/?)H6N*,'_.-S`^`);F'?lL4]W*M^L%/Kd^dU<X09i"0E*/1`'e`#rTIHU1Ie"([8WE=NUIQE\n2g]kh4j`XOV//8pQM'5OQi$=%.YrHV]e.VNk;:?Mj<)>M"N?LqS3@OPQ%LFc<%;%[?<FMM2aA=7WiJh03K`;.Y$93df?Jh.X=^nqNC.PP&S(pX8Z:<=?Y<*;J&$HNkQ#B#HYS`7<_=fRS2&j_gs:kTb1M#QTD%0HnLM[M_,+,01C3kQ\^1+\UH?7M_)^s-mi5#dVs2kAnWVp82?-SKQ+U.**Q)1d,q='gn:#<ftKlO<pE:Qq`i5Q=s<=.'sEZ$Ct-V%A>uj749W_<XfAH2=e[sS@`T1j/=l\>Z:(b9Q6And"]o,_/9S[`!b=;F3(35^oWVoJ'!3W&+dO7>1EFUdAsSE+7J_*k/A\D3+)4%l%dB(bN@Yn]^%@J#c=J?Oq`J>fX>$1u2U0X%M+\QK38RfaR2MB@C6*-Ln*$0g#-EJU1O<kfF7RWmq)H@ph,d8kd#`CuA*Fj>)C:K@1%&O9"96DZ)_QDcmu#dZq2b/K_oln5?^QmGp:0#fG.cdsM`/CCc/--R"Pf-J?e<H*TPQmE(_k=V*fRT;>d/A[Eg/G0:T":C"3!jdPk%:-q3uA7:<;@"DGbnJPc$W'$n2Ar3CM$)&J$]cp-^JQ_!;P&W#Y@[:\3R1a+gWf)fj9@2"MLbVOZXg0]oWUcEc`[m6[A'>Q3@p6l'%@4R6]`[oNCb$rR-/Lt,H/9MGb#0\jcef;"!F!sFH#0bL[V32AtU.H0QGm"@]QI$2rW<Hn535@#a/CC]-;[$ciG#`420h\mS>`;g[%?0,P>&e-?i`[oNAik.1d/:fU"&n.)>=ICpVM'k-8\IiG1VNm,q946uAT+./6RT;&\/CChF;[$d4nlUGEZNLGf@cd`(WU_0iJ6AUX%Q'F's[&e)&=e]Kh@a#H:.o'XaQmGj89#d60O:F9]M2##&67"m_E&&^GVZRl!6rUgSKHNoI%#l]'QCntI`*YRE_5otr5)1\ino4Z8%9QIHh_&IlqjF71uWM+3o\$T$=fhL[FMM)?%qkH"+UJ*c9D.9$7`fOi7,-02`P>&kA;nrdO'QJ@16A%).H6RZu^CF7V]o?R^2KN'`%8PKpHkXi/8OJZ9KIi[?@:k\uZ*LpV;4aPRu)EnJ(SJ@G0!G?5'rUbt!,.'@iSd^$f<:]&hF^iQ1#pag,Zlgp]"#.L/fgIQm\BKb#%/3h7s-e?-g1e2e-".+U-)EfMuA.NHk-u'Ai(p$:u,^^(0E%<D2K#Lnq0`jjB:92Sb'XJT"bW9(U'56k\gLW5HH4"5V4kE5$jlgfP%:g4q5?_ADT1p#^cdh4)5KeO_XM`4Ht=bVNliR.I(&BIkK_$O@/PR9I8MM?-YIr26QPN#>;qgKA]b;A2A@4<n+qE-)N:^:P]-\QE.%'[KU4AjnmF]T<C+r6Q"#5lC@*DK0;ooS@&XEm[KS.>AL,H$9SsFnn%<Yf<J'-DC1kV8]YC`lXrBj<?p8&L$(A*5u]10f'NDGRN\Z%6a;'V[):bL_F;lqEtYDQo053X/Cje)98lG^U-[\7Ei]hc/gt]lO]8^A>H\_t0.FaQ'+".['>ZVMU$7?KrO>%QW[9#>AmdL]N%+gD%EKUW+FD:qkbsC$O/>Hs]5f$\;Hq*8?I2JgerV!Z.(14m5&V@#b43'3%0]*-a(lJY_n5DpI@6scBPbo9a!E(QCH4m]PiaVsAEO?%a%Ooku(_TB_uIQp1i=%F[X*-\F<X[5[t)Qr5)/[a[Q7u^0,;Ap'800saLN,C44)%ZQLd'/`H[=r!)<WT\bQD?R:Lq"AK0nc8[pl#V1%N?fW&Ls4eC'M:-Z'eVqr`)'DbfK)AK*I(ik;#FcOmM3<m@3ZUV@K]^HDb'r_:YEAl,0%5Z9/9[<5"RSq^CS#PM`a*r6JX-V(Zl&L%%4^5oMOBD2l:P6s<(j7JPo?35\"%Ia7^6D<FULk@B8R&F,,\:&'pX,u*]T-Z?:!DuP'c;(?+ku&?/R7B;C,L9oc$^4!=I*S-G\OG%QH>j:7`IA*AV*B=h9qa+hYs9eK$jU#cS;8<[k(KC`o<Dn9b=bNVP$*jFULnMUa\f*.Hj?T_H9nfQkE^\U?I8gR:MO.%S*b"P.nH1%J??Y/GZ+`"S#*E;GjuBO1>]>='L;2f?R"OIXAH]s\MR$[MD&",bB&YoJiA0MX?_Wmpn/sN(/hM9e\Z'WJA+skdL8lKru>&5ed,JX%3A.BNL3p]RC+FERUopBm#rHS64)R\^6Z!-@\WDI))T\o+<.+dE3RBdZ3\ki9C>q=h\VZ*?6W)$k1RB-W5bKQg@8=*P.gmh/R>_fI%"BVD9Eq*sV+N=\u$R1_+oHO]nFk0qHfT*oiT/)L8%[8<Y,&s'X'T7(+[n&O-f$KWuPjYH_:R$6_;Aa/6):C<.`\5TM24S9='roXb%A2"`-9!'MS4jo(<<K-[G`;iU9h[?cL,m5q'1,W$!;FB7rm"#UW(@tukNn5/@3M\jLN3u/+.Ff1I.tE3Tc(QCr._'T)0VKU%5]Ol@%FCtaM$(2K@=:lU<1:aP;es+,pA=C5ep_*6,$Sc&\$/T'@$$(ltc&'E.YubYZopE![:4th4d%ES5<#OQ?q*_&Y/R?/K7nIP7HqJ=S%6p^#V3af#uKhW-3_P[CLk>!2HAE[6or'+6'TcAPSal"$W-qr=2bd2uA+#mW+=,mEQ.Mg2nju'kc3CaXb;:JAfLXE@973r]=1-Y&h%(3ET%qjDJr1W^7O]2&09P0O6+3BrD796=41.<d:86?RXZQ`.WVTJnGki$FWY#^sKTH/(&C>tErJ&+1442rLGH["'#73gMZKjoZPm%a"!so;7@87`9C[SD!2Y+j;-*bSh.jYYEtMB&TmR]YK#Y:P!\aXS]JV6=;(eE!k_b=Dp"5ZI2VI=VHEnE^hH1dkQr]87NGAF\P5W:%a]AlO<bs7n`*%=*'6F7\rS/uD@:N5MR^5(^M$GMpcA94=MBY=b\D.6ghncok16,dDPX0g\S"ene7Y^TX6AT5?=`2lX;Oh9go%bQp%,pCs+A3&F?P(b/s+XQkKdb:J&0Q2:gk.ci^JPi,"n5(MZ7#*ZsFNC:YQH`o;NK!"1-I?p'r3oVS,BUYl;B3+'e\\=%(qE*4,c)V&%$3;r)f*d<8D./qZ_M9Q-F[@mL"c3QU[YeNc=ZYf/l=Wt4L<E1%%TQGThh+Qh5m+rl"e9glQQ6ZPGV<XIIGd4I`,HVZlOZde9>OUg%l(D*KE@=.&'F!5Ng(8gga0i3P+Bpg#mmdX"X+*2Io&sf26Zl<9=FfrXO<'-78]_F5Z&[umh+5=eLY*)aar1m#FI`T&r;u:@86496%[^b617Ym6(P_E"7=:R.ZHXLf7FE6KK]H$Q(jq.%SBdsIM,qgOoq;gNMM?SsV)`>LHV/(F.Q?#+tiaJLI`%a\k>VT?8;?_H9"[[K6%D%!*SOHOA%hrAKTZB,'b.;BFK;HuHh!AWXa_\kV)2hHEi3CO"^dZP:Yc?BMkImQpKWZ:6De,YB`W?KRnj&tlNKMj't=&;1jVegT<%9RsRAOeK[#\1F>Ii#.u)9h?8[jJ+.hbkDf%L.H/5dkXP=BD;`>SL'RN6?5_h!>"jj$uJ53f3nI626>Sl":-8CMId+><Ih<CNam\b%!!u.c79$#/a\:f[8UM"c<R/<)j2jT]^S/d1;X@LfPG_<RN\)\B%3ZQR[-909H0I01/lk68\\r`(qO4';_;lc83%T&[TMBgC@YE&.%6d^HQF&^sg+[cAG8id-5AVs@\HZ2mbOC1)2!21M03OAnt`rQj-jg:_E.QA9'3F!]]$k:kT8812S''`AKbVJh>A#4TOTWje89ae*<%7ccE,V9]p3b*"@d&!;NQa#R%Vb)0.AXO<Wk^mWX@HXo;Uo-ER(336tLGN_#h_bV54f3FJB63X.Rl4Z`*EZddgiW?0k5*]aL!bc[Z%Bg,uG"uK/Q/&"tRdN)Q)$=qZIUTn3iY`pt$S"u65Q!Nm)ST90$;Rl'\)ROFe;k5G%hlmZ3RYJ1YXKk@8M$%PQD7i--MK1.USCj!J%]Nm8VP3Vs;3b7bUDHaZ:UmP.;9L'AX0Ef1Q(2Dp'QNem85.f03J<H9B2:9rG'.*Gtrg_A=BIL:4@XM(hjlHmp@s)>C!j9C7/'%D5%j#%iXKo]Yk1=B('b)-*_*1W1&B^u;),31SU!bBCG)4C)Q0O0ta8p*e<\<]1+l?U0B1s`AdMLf=45s=@,Ag>iX[u(Sj%_?nI`l2IB%";2#q!#%Q)pu:+.Z@&3NQ=j_Z;nOggIiPefOHS[l$K>:B+8!5`M?J\u)ro$8K)T7")&5<T11H+KPB5hF8S&sI<&@dT+mt=<>\$Y$%[8Y]nWY6APMNj&mPd0k2RgNs[AEFm'/me'uQ0LcW1Ps/7[UF/!0:JGnQ6N,]`lM'#&fY>4n8Doh+MX!bQj$>]`r^TMQ]1%"iZG[R%Mb91H4tj.34*6q8:Z*hHK4Pi*=-TV^A6+kpDEp1;@sog=)+RU/^<P<If9/!9>e5lG%tt;[72*Km+(6i>9dF#?%9q1oWq@^c+TOj#%ME7.*^;*mI6EN0t4e<`k5eq^WiCq))fK`"a5%Si7`CSR&IQA4MUdA1ATm0_7,iLm%9T"$M6Jm//-CNf."dt:'-d<se#XFPH3TO6[%U,_Hup4bLK3dbWg#s-=,EL9=lW)*IO9I1e#4I%?Y@gQ3l(`#Wn&/ct6`;5juMX89DX;G`aBFH=N+cSpcQ3\2;71SrS#WL`:9!erE%1Ve'X9!^uTCmsjiHobaG5B2'NP,8TjJ4>iRrf0gVG8ZYoVC8<DShj"\Br#<t\jJY3:U(0TKF4;=;>K\rCP,YYC-<0FJ9(RVYgeah%3?h1Ohm$+7T*k1'UsV:HMR@&NS4ZRk23lc7c,W-s0,+=K.,1Z5GU6LYl>W%TbYa3;*,mY&*Wc8U%u+63$"@B?2O?WoAK5UH,2U6&%b+tR8C0HLRF?H^Hb23#gd]u!2]r($L*qV'-U@%_:'rk$P<f9X_W+fpYD@QDJWF-o"@YQui7);T5kY;2.03G,sk7+gEaD+S?ipW^S%'&fB[m+r:u-lTa.%80//6.[UUEN;FLI!$H\Z%D?Tli865.E`!#Cl%LE`#Iilc8$L[k$u'MkcgBY`CJB-W43sQ9drf?aj%bWDXk[)%k;^47#]gfld\8gkgm,\q@6GQCA.N@baPsEjU\bl?b9O@;d`'(&k77;#$bgXe7EO:GF:7ZQ+Uj"krnp1;RAjTM&@Ok@^;;G:Kf<5#%91I&P>j*N=>B!*@98OPV*Z1uki$:1V$$iWkeS&]u>e;rjrL4@u,n9ZP^f!@,;F9"2+Y&Jf-`DY"(5c1n!la`t==3"J0ZtsS1jVQc%jP_9HL_RQ7-I6?tKA=AEp&'4B.hu?!'53\G8lCTc8U@%CmZX;Z">N'ZEM)_-klPQN[I.Rn+;2g0_:LNWL)8<Y(D(*X)E>j#Jh[Qs%_>$,gnRiha!O'#.[b*sJf_Pc/dc>:5`Zg9bXHu9e/ap/B;9m`9dhIAVUi6;['g+UR;so5!B65%-LAX+mGo=R`iUHsP)7kKfDZb];%-+H/ch'@X)"W^Ko2-sXYnHFPrB)+2)UF:YM%!SA;.gIK$#9tN$OaW\2UNuj1@A!ZM3f:1/!ZqgofFJuCF9=?gCcMQM'+d)j,P_b8%Zq41+Tot)T@KJ#7+!*0SN"\O:=[1Ku^H/00A],'7<X/_$1!OZ6*X2usKgN^U#"ObAXp,.;EuD`Z@X;%sl6&o"XoTh[f7Obi\?!c!%(D'$ZasDto64#EkHro\$LO4@N_8Jl;kmf1ql!a?2?fkiHgJkG%,>_.7GnKHE$;Y)b&5je*>J`uY87<kVU^uKbi3fWH%CN4GQJ"hk%84.m*%9KM27<:=AN2f7&iEAR*.b>:bV:$*9jK!nqAO.$LIPe_'Mr.H\]j=1kN5YoInnJg(K:S_Xct1U*na\ceNMMu94)"d+.7/%/%B\+FsKWc7*AgWY6=42()$CVE(#:0%p$\,+*`F7^:)qpI&@hLhFW25FnL!#.-E%+``\W-("!'fafcS-\;P7GN+!iDYMbrJ[ROeOD/%(E$dL8X*eD,d*7LW._O2WZbKY_[tpYM88'tR,-#Q6V8M7PW55\4J4Vscm4TS)FLW*3!2tgU&p3GF[=^?1+AOD6C#P_Q5Ydd@3gHL%piB[d725;8';8JI,EU>Fb\O/!(<I>n(m(st/@AG5KZnFt;X=^nDID,Iojt:J!O3e?F&$[T+rKqrS43bN#;%1F0Gkac3PlKXdNm=H%(Mjha.Nq(%"B-)t+MGhlQK3D"JYF!]8;60+C1J+<\h(X>XPld_A/$Jglc=&*7<NuWc:!HRW4B<WDN-+3)TZnH$mUWKO1S/%#%+cA%l=fH6G:I#<,0^0kKcsD`,.p_W?o95Y>>sej;RF_VdpY;TZnM\;g#a7k=r;2Y/MU_'`iGU<1gV-l=ZRFXP%grYN"hJ0+mT+HT`?A%%NVNa]9r+5hgsM(`@RM-nn.N(,Oheala"cd#I_c8]jKMt-]]&'l%S`Y$e8IiE/e.65929!U5FT@H.Ncp69hOhM%$HP$'.DWb07X0e%lZ<,m]DuF(Y0,b[TNImQ:tPtc&Q;>C)T%el?ULUm#a0HcUC5Y0`-Al7a<O]hO65':6OPc['eb06>>rq(E%6AY;FTI5@QK&aFYS6m%opj#a$tkiafj%Bg%AFEd!^2VR6Dalu/#pQ]Cn3&Q&/4!hJc$F3/981Oo9=G;SQ"(Td1VoKK!DqEY*`V0S/k+2kE;-k.>B9nb:q>r%k#93XL._(\1*Qm/"$oE[:i^Y_"B-;$*2JZP!))[B-\\=`@*9hsqCcMOde>HeOF$?9"]QOMfZH4/KQ#;;)6h3<B*l[4*[+Ah[hVLt%R_ggJ?Qcb?nS!lS^/LgS;H2;4GgQ]B=N'/m;Fj[=154<\B7\qbn\t*MPi+l-`mS0GO"QAOc2E8MLp*%&3?PW*FLZ#25RF%%0PJBp%CpAe<m6NjF:#uC*6V`:&0d!]Dm+g-KD_A;T)hpmU4qSg-o(e(ZIu[!')V\;#D9$Ye$A't"[7P."9p/X+"P??MI1"QFXWO'V3=_=$%"=\F;+KS+RlqYRq,2Nrmh85%mTqU6WUq!Xo89<fV:&\J9Sl8&_KY`S(OC5td-k3Asfnpce&SJ.@Rm#qN<OhaiZW4O/2r\WgY&2BC%>>Z/+`7[C!CT-0-&@$WH1M<b?4d`Q#%slOSJ2_6WF1).jWgF\E?'*c8n3t6\3?-C-<Q[-c`s_K"N6>g,YtPa4OP1DEMr=l'4D/BD%Yu%P\MSn#,,!l\Sql)Cj01[dUgN(*#_FclaYp@(tMKf4i'GPtRIK,&GqLP>onJZ73"GF0F?of+!n+"e.F@c_:J3h)#^,ed4K\R8d%;K@-p?hg=n*Xu#q1lU$gaX!<[XSn'1N6Cq$NiJ"Q+;?+3;3qEt,uZ^GnlUqCfM;7^O#.ie6,Q0A;As?'ka,2K/L2=XT6mSsFl@cr%%,<5f'VjN$3os[3.[6?Jq:M[5W7^tVPb:F,:DG=ha#`qu@O_P-FVR46Cm52'H=1jRQBU7'a09"kErJLG3`0C4Y6YMr#qD!kG<mU`%$%(Nrd3*tf&^lZ\&*9s(og9pc07`'6ij!#[q$T5&cigBsB[pMFA4Wsl3&!6oA3bNoQ>0;=0UACXR\VC0Yg20A,"g!]'T6b"V<htk%fg3_$$4*![lWWdQ&u)l9j<n!7ieY/s-:.i6bA^E?eitOg6O+a+6!c602;d[:r9Z*r%SELk+hM.EZ5-+gAP',\8EWF+4Qs;,YD17M%`gMo&^ttS07R%4!('-`eECk-GkI4j\%SicU[4[%c^gYtMk[Td-]D9.qSu)DKW#QG07e?@HisVX%!hH]-KQRAKW9bZEJ58EJnmNR#%biY31Fb5_rYga@mW51c*13ea_^kcBZO?K>Kk&dkH>_&X@XlUrk3G/nP/SoC@A]]QJ1DA8c_k/H=0'm1aq&D]H!-'q>r&SrML>h>[%eRXRD-F:Pg_nI[-37?L+TgROa%08lXU*K,b&it:)$t"Xb6?k\Jp"L$?#k19__g@R.^X[_:QqF18Z"X,ABlme-N#S#$Ck>]YO4ga'%&;D2(N^di*LLV/UVcprFfMgtcG@u$eMNUU78X9QsF`9X$!HW&i&")5^^=mtM*/5+9\3)TWCf@8[3oTH7iEeg66_ao8.VNjj?ihiB%_)5mm.&<T!Br"l)?qT,rE&S?/7sS-=m]I#QXNoi`<OdG';Vj&UNd63o]+>]-fnGVkEOa];kUMN#qLpHk[44<"bf2qi/5]Lg.2\O=%&2?(VJ:,B"@>;T./3#`6FCNO-I5^)$7=]*/ZW0P5c8hAh33/e^#8MliL3du;1pT5p7Lief5/V[Ai>OGH#TM1mXji$Db<1X-E&]F0%07`&L@*.3Ej?ns)Q.F=P6>9moaV<o@OU5X@(>e%55PAD6_q.JVs*n>3[OOq5>knQd+3mNqBL%:/099"'Jq4B"#78YE.#s1VJZ3Na%h+5cI.rAQS,'WI#X0T&VdbMaDB$8at6[<D.A3[QkiLT8pQj_61fD]eq4aYPX3W$sc++Z$f+?MB!YS=REFfMp%`XnFei/7pn,BI:0%[139N6'-?GJKAIL9/sn+9A#3OmK*W+;NlNH*m'=Mo!tDTnI-2\jKW9"8dKCCD^)Jn/\Iob60POqrtY9bW")fKJ^mXT3%7a)8QI4&%#2i&3Hc-.n=j+1%2HTJ*[*):cA[SQbmqqs\()OY*?p_8g[scqs6ZT&<afWa\b+3Mr@$.-tqQ#mGZZ<4,k6`)U.-n51Va$X!02h)2%/jH8(jbqAY<V^b7IVmnTF4,]e1WX8dDs:]"VVTc-,`_S9aU4pjn"X>W'ENX;F$\PK^UKdpA&qq,0Zr3Qs%RVKOG#MFQ@-^*)':la%1!67GOrUW+oaK1HC@Z^!Duth9(NkY^Ri8jb;ECgK**jGWPL:>I1k\<jD)edUa`D8=\6QZqna1`nck=)PA11&PTc0FJEdVXqLt@I"%<uK7O3/Sbe%gT^3emB#PW2@3dmPK4S8ShCA13#%Xgfd_[o;(9(Tod8)=foYMXH=P%pggGm[AUMthc",EMq>^?7d\j\SF.3dfCgB9%`5f[/FY>P(Xia,AqEgLoe)L*cE6i2b=hOR7B4fTDJ;kF9obC9nYV^eq*1E/UoInGR^Y3Gr/9r_?g%K"9F45V;-'4CV#CSX75$:AG%;n<Yr*m+4!jc(XT$K#$2g.WdF-E'7J-?OG>Tn-NHTdE$&0Dtrgkn!HPqK\\AD<3/"D://>1d#qWScQlW7SO@G#@=2uX&Z3MmVlqp%cZ)@CpnjUc`k48!LE#W@^Lk:W3Z]Jt@+(nL%AZ[`Vr;ra2o0#NY6]"9T(gL6Gh-NhLfN!4aS5Dg2%/86d9gn@>XYgFZMejn&fa5,%`8[#iZfg'N<\O-Rj5%G954D;jXS4o0\&]2/F(,D*/8]E?h1fi)e_9G,MnX#UMbsIdLHGUH]q)NH_no\Fj\Y]dR]:8_7Ji5LYQ9p1%c-K,O5mUX8I2_r6RBP5n\]k24DdJ(HAo4V;i.o.<eW^Tb0Wr*/TcEQ&LOZdUcsMR)DJf(]8W00;3IROS(_;oYA$\u/.g#<$,8;e:%FnVJAZlVT7<reb^BR=ou\qUMb2>Op!Hp$Jh2+Riopn4c%s$0o0jSUD89fd^>P$,)]><@7SCo-!;0apW-)L>tQg=']$9eqfhR,LIp%"bD`)5I\pZa/0@QcEPc^pVpJp+E<>?,NBZ7n$=EfE?![@^t'<[m[X(#RQ5F%`&?ngB^+$SI%6V4?TOOoT[m(:JI,eAe!rjaW`R)#%b&_4X4E$2aNTI]ln3/=#</]Z2!'PCUmEN.j&\iV\IZnl$K@FXE!RQ^i0$?cjiL#<='YW^,J8nZQrMq++0]W=/`8tcEEY-q0b!`lJ%f4S3?/G]kH**G*P)21%$CWZ,8Df%QFVGAd/Ei6ltM9c<ehTO<^mgEi%bV(N[c\>Z&jUGE0'r2$Zj8k]#>oZN90F8A(%^qUNDdURl%DuEoQ/2F8J)"#^LQs45s;d0fsIr!m#Ht5Mt@p`/u&TN@n\Bc__'nZ4]_>%I'gLU!apW+HuBKW2"Y#_kV%e<&P_o7'B`JU]:RfhVE%g4k-bc)_+tahU\'g&W=:ocfW&$V$&,r3!Uc<S&>ZH85$+F90F6#a,6(Bl"2oSVZ8o@_sS4oG0=gQDV]%fbu3QSRALOC5Rru:,HMC%K;o[q!^OOZphoTROP[24jhuP"jm^tDV@hAdDPC:NBnW=kOpUSO3t2Z8Wj&5@e_lakE7[M"Kal!W@;GQ/F]-`!oa6;?l@c%4qIrXR%@qF9Dk-]UU;t[";!$g?bM'5BnO2!%P[`UI@$KN$>-*H4:@-,r;5lQcd%+'3Dm/p,r!na6^[YDZGd1A3ud>sjNmjopqMg1%SMp3Ef%b^\9RYh6kGmt?ZN/B2sfY*eh>0HYl#";^!iMpeA#1;:!"D,`C!Oh7,`Q68BdXbHPXF]Y'AM3X7?qteLGV4Y52Q;7FoI]a<!+W&l.%UWb$WHW;FH;'crDr-o:'W56QH(toIXiTS'QL&i/q(^M8hk'm^'Nbh1-J/kN`Q+t'mm8JWF=`;gJV!4HRGOJ2#;=f$$-Xm/.e*/+m%.>\"RI!b,OZ[tBemX25X>sF'G=V/a-GWDT3dq#qD*lQ78dM%9H(9<f^DnLe7;P=9H!jE4AQd72JG38=s(Uu<o\6"m+jgg"`0Q]iK%d3S5eQ>VJS$",D=X*,nc.O`lY#u/@._LaSe('L3c[7c8&[$rsoau,_sCDT`#?G:P=W2n%W>T-:omiLE*WihWml&7$0?Q43Xbb%7a%;@UW3)n%BFMggaFMH/(p,Xc,k'j;glSULnO5coIlj%gb1O2(?.p@sCKk=)MM9tlN-i7d8(5dT&hcN4E$RBh'1\JIsor.:Z"66@Ji%n_+5G?g)3S5'W8\h#pd'5^f_]qgo@g;$6Xm3k'Tfdn34YYfG2fk67,%GDT#ASJ]X(WXO=)c;*$MPe)A=9bj5R8)C@O2!98Kh-BA6%MEnt(`qT5I4^OW5\EpKBkOTf-7OD^:j"]k-fp],fA"uiY:<'0/:Q]ajA1I*6pu`9eJ_$\Mh%PCi1oc:h?3&]&Wu@-:Fop#2l@d[_%,#j\?0TqUG]Gn<lX8V^4%m6'pA5,%n)-9gQO@?as%nWi`C*X`iI$>O`f,m<J-7i_tpi.cr)8D1Vk2K)7:cW#/QVhD/D-)NUS8^4M%X'>LXbDU/+*dFrlMqT5VR1#Gg8=U)VFH'hrQA"T,Nu^DT8;r_SNTfE,AP@Y$>1kKm?F[5\;$@NRisW%Si9QCV8FEJqPT[`g<lA9t%lMuhYeb5sZ?#Xa)!]disI:8&V2ib`Aqq7WO$=@r>ZC_$@=$a&'(,-94\]%EBr-:_%q&=,Q(k_R?AUZr:^"I,G-$#`qZAHqc4*A_G%J5U$Ini<D8G)PRHDrQD%"dA[^kEJPiqs"hXXWfQ,Q\:mp+Z@%DlS'hXDa@d=OER^;?jn/Iit!ha(M'7-'XWX5[%YRqU!^!L+3MV)%e-%(33b?!-gg=HqTEElBE/B?H-`BIacWa=Anir5TM!kup?F'J>^C(%`&(n5pGh<.Q+j]IA`C.P*cIF[$dQ?+h,fKS4H&V474J0]L%\!%sf+DB=sHL]2="u8R(4jCWTK?%&c(8WbP%Io8a<c=\U=n;oVj0:)tW]MiLXsTU=(_j;W]o"4o/]8B1?FIL"iW6";B5JtC-mYaf%/Q7[afLT,-/bdi#NEOb!RsPoBUrCd87F=tMKf__u[fKeIbcXZCmc&l<@/8["2a3(84cgD8,'\a,h>Zd*8e$`\)Bbu64l2b#P/H?g%E81mCpU@]u]#[IH'qgb;/h@F*Dm1oIN>""qTo#O&XY6d2JSe?96V"K.Z3C"'!i3'eZW=d9"`K#j@83j2K7)R9Lu9-!,fb_YP3-+#%6K'>)0tH%$DGZXdCN3nDL8EpheS/3.9QEas,<R))h..9!isW%S1b1@)&f^UY9hNglWRE6rVsd$5T&?OPC]b.(7s\[&Lp0sX*o]ah%pI1u[W[G%+@S;\4/87oY9i"ecG]E%:S)bbZiq!D,b`eNlD?QM<VKup844d0iG&/2[+;Vb`NTBKsWl/)PMsiLJ1Y,l?<HYeAb2EBh%,[5_FiKf8#%XF>'=1b8dT3:o;%FAk'LWrtE-^bBI;2OpG<\^1NimrL#//LaG^Mal/Z0HJlrp5q@5oK[LaC0-,&?-(N44hcGVkT?q%@>@G_:O_s>H/##"]rIf:NHI%fK#cV3(hDO^6gH]*+(+g)q5'!u-^,b;=(VbfLeUmd[hR$L\s!<*8(VK0pI,(F[&2I@84^=I4ZMQn%FtL<Km/rKjdQ"I[jdTHrg=DJVSWQ\1[LN<bC)MgGK5>JhM@rG)U)B;C)LIp7WX#Y>);6j=8]RgJc0&>88hm$%"1Hs;:7lq1cu))g%"6/=bRKCt:^T$]M]YM)*2(IJQGi!j`:m_E?,X]0EoBC8%mmVOddh-9Y2J$r9lfF0\]^eZ[">[uaKG'SKOf4pKd\LF?^JPRD;r!`#%4BVi=Bj^JtjBAQ'72VZ#>"Ja+86`n6EbIu%"1Q**[ldnC0K=C3Dn:%HmQVk_(=rWKP7aQKs1;e'Y*TZ<*1=IYK[.t;l7^(#'&el1%CcCflCW`b?3:M0:b6n=d3lF!&+KgEK985Fo1ngt%^Ek1$?ffao!%r7Nk1RIR5dYT?0$HHL?!?cUb#b[/$k!n*hu*$GVX[pl_/R1>%b#;8*%%XN%0Gt0Zir%%Q-ihGrbU/6>&TRNpC1gdI4GioZ`(Y<`5K(VoJc4ZZ6UROCl[ioEX2*kcW=!4`<*8C]R7p^dpR;>hlH_Ab%_"?h_0P+a-,i5Y;9,q%nJ;dpLgYffl:7^-F;\&q`WdP7[V&06Tqp0Ai+[_k',&8XNU>8PS+^'1d2oSD35(9W&3Pq"UffqQ!bfZ_?%[iTQJT7Jbr'GH\7.DZ"%.'*hU_+bPkXA@eMh/sao#FagC98`9JMP)P`NlIFj$oD4.\A+uVqTZ-`e7qZMUC-*A*HN^:a[jI"W.VNP%4qSo))]#FZDMMNHQ,;;d]Lj_Yr<d2$:h'2BX34Cd[!Qf8h-+LHf*K`.:<jn3;f*loAk-cZfu[b1AZoj$9#N']=!8Un>Lh:&3CDJ3%*]:fe?0%qoZ`d\\do&RW;$'-P31RK&;!/al]PR/W:#=Tu79Peq]\k0'G4P\8rakqg\),(r[s_e1T0JRipKE/5qt2ob""k%B)6C=Q%c7W9C*eWaC\RAr*DLmS`h=PL5BA./''H@<JY`d+cJJ1CJ*fkuhNH>1[.[<dnH,gP7Fs5q9>?76Q60b=LF;eS"@DJQT`Je1^bahp$%)]ie4@_'nk5mL_lRp78k'6t5>Q%470iR<RckmT(SXsU`WK9[nh0HqggKtCLX6@2DQ'K0-JmQ]=PHp<&gctp[gLoO9WCmjP0%T!iE%+G6B1KRGM&4jFX4-t,raEO9cb#ZPd+k,2ssD,/77U>:5@n>.0:e7h<Q29:X4(-IoR[Dnnd;\l4rB">e=$b*9klfOimJ^RuY%Qhk8%?Gt9L0\'WOb88$486uA''EX\%.rQ,g!CuL\1+"=(NNLB#pjcR(0O$rT^%lfR>84Kt"TNPj&ku&m_R5W*.F^"Zg9DJ4>1,g&H5<He%M5_$ggQJQR3%T%A(R>5l,.Q"\^,2A:]K3O(Bc-\QB-Z%uU*o?!9AK]<$/Q)GSl7L6fS8<a3H^sl'$4:oAdsja5MEbj(D@Tr+gjL\%oq<M>c>+?u>R?VpcK;>fMrHWBH94.,N,0nD!g8S^[+%]UPY:N>G)"2PVj:Fhqk\6VM#Nl>k>GusEnBu\M*qBFIU]BXGP1$AI!+^%%K^uF(=OR<nMEkENf1asa..GWW.E(D\(TfEfB7og1isW%Q!6!e-8kjYG":1tk"$W]g-O!DFE4tEs"\\T4)a_JO6_[Ui:VscBX00_Q%&!ig0q_ncG,W>SjKj,T"geL"VJ('rU'a',k`6Dg"<[af6#fA=@QoW;4;V^Oo<3'sL#bR5AGe2P@65?>TDc,Su)m"aS0AJUdf.!+*%E.DmFTTBq8FuU#K/peZ.)V9ZdAHMq]*qpO:M69i"JjACrH=t/pdSRt6ae>0hkks[4n#KZ!@C8-L1150W4lG#%Q>S3O8E6FmC1jeR%jZ:%M$$rT/rVa#7)FCR]dK7cH.S:_K53gXNIJ2r2@^S7eZIrj1]Q7'h#Aoe!OH\+?@U^hn)bYBT.)<ch==G'TgMn]OiUaMW&N.,h%m^aBWH1B!(6DcH3eN*G+=9r?*^1ucqK8]LcKN0irJ:cd6=QH-I`!h%W#$Wne=T=gqa>!u,J.J`'Sl`o%B>72L4,`V9pPIeqKC%$=%_AL;44!^tZ3uK,67FCSGh(C8A+sL(OEH1YgP<TM>HX;Q?YVaD3?efZk<E1W7WZ`k#/4-1G=/]&e%D6+@[I7=uHRCBL_e,tf:`Njs%EulZ*A$74c]A=:NA(W%V/mMfYfdT]K0iSCI/#0:-+7iuW.E2B+$-kD6a4M4m]G=*Ef@M94SBdj3_#)oELG7s8@Ybagn0GY(c'nXb%.HgXtG;L1Tk:49Y]-0AO<_Ra"/4t*LfuATnJ8lOKX?i![SU>^C(uA/K=U'W$CGe-&3.^(4W0/KATKd>'%bNP7r0^[k`(t<rq4Sg)%dP6AGHd9c%>3Bnu@Q)iqE5c6DUY)dT?)Rjm--f3==TWos8g+5q8TeKXK+Eik0VfF>UX62^4mj,/r*jA(T4)[4r8TE1da]Li'5X\n%1O&Eq#`N!'l"8g%8]!Tm9e]`"+=:@RP@\GhP8<ht>Gg1!n$&JlAtQp$df9TW`#XY$7qeKeLIsZ26sahJNkLNP?)Di#Me>oX_^)+J%_2eo9NEu<<7p+cW:RI;nRRL7]e8M]Ss2us8=<nO'7!4QLR51Vn3Z3f;3St:+iCYJb'CW*dG35<48U,7F](SG7N@b/m(@gDOC,E*U%E2b+/Y]T;^CQ+`2+S(dSI^'WeJae&9'"4tZnIZYokM.`?FL#rD8.YHtZ\"C^Cujs&Fj/o91<'uC7i]dHgX;Lmm45LJ,n;95k/S:?%q9XY=*_HSrBfs$$VM^n-J-;-D-cCU.b3k]%V_T><nM,5u8",LgGo@<4Bs=`J/g1Fu8m0F62!=2=qIOSj"a$>***gHcr(2(4P,30@%HquF+;;5#PTnc#poN/#M!';I62H,+(e>F.AZG[%4?Z]Aj:l:8%ZWhNPM:n)mq+YluR>E7;FLoQsSFc!93qapU`#fi=g1.&>.%hPM%Uo-bU25n_o$;P;a/SAJ,rpoj$.sL>WHU^Ij>a2B[OPWp3@^`P)aXfl4F.LDeEGoDU&>3U\P%l027B:DFFB:1.QJ9#uU7Hr+RpYki%]ni\iTiLXh(_T"O1Q3`W.b:2/LibcpSpcD#^bL+XD:RAu=1^=0*SZW41$)WDrUGSCB7b-5(NLeJf+Vu(AA,A(6%mg1P?o3GQW/7,%YMCoc6k6UA(rjbo,*n24a;SQMcroX8;"4"/=!-QgF2T`kF;tG.BanD*@V<LhdIBC3;(CU,N`_^R@[2`#O)Kfg.rm5+`\B\*l5R\#%WI>=QMe.lSI'TNqQt.%bNq1&8@LXG$_ogn^7!Fp+@M\U#'tub.P*)@$o0d]*%P9,p&J5'uA(;Gk0gZV/IJ2sMXJ$L0NfhZVhn+Kj%@Lqj-q&"*30aO=0W1nNs)3-a0#<0""AA)b^7;HG!_D+^cdB_Q1Yf5W1^YH(TG\nt^GK@qXg\!^q:6s)uMB<J$baMf5hOt\L8j3=^%TVA5I"&Hd9;AcrRTc;X17HZ6LS2[Y,Z/Sj<d*,q52A\66m3,MaXAWQN'Ot->iUg_1pEnFeHgM'i':4pRp5A_udK*U7_ZO1ZEFF:.%4696)^(01p6b5;*HMBB$6IgM?QU61er,]GJ`Ts;M_?Ks;%tMa!.Z9c6pNG,OFn32t>UM*][Psi(]UGkdI3)hPWQ\EdR%eb&*s)-"%VWB<W?I?(!l3V[*4f_f'aEOSh%\7rIb]aE<kq_u-_Q@eN^B^%rhgGmpBkRLcT$9Oj<JqaMELZ'KV#,b*Amp*J[6#K;b$bK8m*7CW%fp`UdC\.&J-\uN>/%7Hob'ri9'-O$8MKgEuT*bs[Jg+mJ"$64lj5.#=7Eie!Q$U5*(m["fmYT_*YFg_G%U3SD/pP8Zgb0!bW"sPl%?.cYQ\dtOd0;X*_VpH>ik)5cJO2]qL*/bBh]\/)&A[?O]8KRmr-E;CqF;Eih]</AsD*fn;ga6/AHT7.L%Q?f>LuVks,MaIoo7hSX%),i[qp6F;j>N0.(Q)\)='j;6tk%WCr&2qh-h\/;PK2Y@lP^PMrB#jdX)1i;.<G/5]:)NZT$.<<)c-/%(>:a&5*WKiLa!=21"!G\=%H/""BPQeY)j!]Necbt(H3g"C?.&r6Cat]u?WmKm;C#I#j8p$Q?^Eb7(:\/$\0FdlVR`L9*1mon5OT>',IOt^<Yq5C&%)s;Z`m@G5%J=Y^K@Sc8"-diRLY9g_rBm:sT1WKEWW2(fSbY=3;qK;AXaDB<Y.SE/F"QKeDh-DB1'Z!)7HcT[8^Z%pRVTK#>RU$eH&<Bbh]/Mm`%BFudZZ.)Bp&TO*SI$S,.78p;:&!\1\$6b!fV/@;9/W8&XMhD6XTjQ=6_-'iH9skQV\l.3g\J:f%C-Jrc?,p=153/("?Wg`u_KROL%d@#Mok`$GpHDT)*ZZImt\cj`3O$ZXr['pa\-l4KRS#Q&h;Vg.o.@*"\X1Ja=(U[l)l>F7Z".MS_ES\p(8#f[UidSDcEGOjbLtY+/%FURu(,9O>)<I%Q>Yl_%FD*Bg!Y70$\-sa;C6`eq8nk>mm<<OfC+`HOfNB'Zl8N]Sgl(U3K2]H)A$'9iGS)F>Ia5p<$nHik@jHa:=%\1pg[]4t9g?4+</ZN7/Wc'db<I4DFInH[d1?")XWi[q*CBIUp/#\U#AUt#eo!20k(DWZShLS?^J?#K2,@//D3q/J#um\4SAW<"R+%kGS/=\koH>AtJ$aTVJ42]b7f!.Wf-LmIQ-V-cR]n]RX+.@2'"oL(rrc+U8Wf%r$0EHr?%WC3>FM:lE5RoMom2h"*(P#+gkt3\Ms*%9md%D)6l)nOr%<XK@FaZ+2.!,S\Z]^QF*TA9`?kmhqCCN+upM]e*88%?4I)j\nZ.>d08)W9LOjDIiM4Y53\/h<C\BtNUnlF/&r4T%<>;p(Nn[e2fo\fV)N5H]3oku,MJT@GCa[fA(_D@!8b'sYaK%qQXU$"Pno#CG3B?q#^6-V-<7.)oG%_(8I5`EKlo?Lk9N=)</_R>=%9"@D;/YLI'PJ7M]<$LoY1m^o`Mr&n3]pRM0Yrjn,!Z'>+O9j^5T3f<tTV!^4GV8PSD\<>`P9bl^Jh$ef;8XFr."'M4g93il[4<c@%[,V8^bZF&Kg8o?UGf2bg4l'!e0$ZRrbH7i)03@c,$?_q3+hDQ)FmB5a*K^]H1A"1M*VCUQ']uI%4Vss%pI8_uVFpWKd`"1dXh);%%90sc!N&h+.*O7ZOMs\kr-:^8u;P?uHHp,o94?%(rUl(a2-OJ'3U9-0qr>MFp8l-][?HieLRs[32W-c+uMRH-T!95616%!BIC*YE-%(hm4Kpd8tfZd9SQIt3OQ^UVg9O0%OC9scZ@eAR^t1[I$mkVcr1MTf4g?`7[(U3jt^_^$NR7W;"XO_eUN6V:fnVc7tBo+<rkbUJ8Y%eN[OI&1R-+EWX0;D6m[Sag0'+U'1rlaZ)qrJRMJs"2SNZ&FXBApf:B^H<[iZT.8IH*r$69@=.gR\7=rBPB_U?6K"<b9K3pmf\X#b%ZoqR-JK9oc;D$e`<q\ngiGr!>qa@gm";bm>g`B.=D9,`m=`i/D*Xs-:XpnW?Rt(gLD;.<qEjq8bnr";+*qE"3D\:l%AjMdma=2N4%6(:SIU_P[7-n%p]E&bTd$GmbN&.(nFAH5sOK"dG'&=+U^ZG(cAToebf*1F"&EL@;hVT\U7B2Aa\JTI#VflReiE%GNR\fm_M8Fpf6%H\qjeHM(V)4BJqp&LU(QP)Tl%2jm4ZL#!&KPl#s(TIHXn'rP4%&P6M86tMSViV,<J3b_aCOrI#9Q%l\od:=b!RS9OF_mHehY9UQp%?0j;H>D22SGmU*Q+l(L+9]68T.2(U"Zmj+*Z,LSr,m5Vu0/!fgE;UlfLn^fg)KTO`+H&mZB\&K>/"[KGi&ku"Lnm_0pS9N\'@Jj<%4OZ'[R72LuB9Lr0<BomP]3.J/=gA7eqjqopSO-EhD+1l[eOEK_'Qa*bc(m-4VA!-AbF`I&$3H"pG1<XuLg0$5ggpI?0dJd`n0H+1%02f5a-c1Qf*;;cljp?XA%1D3EAVYhA>ShG@!%;]J2Vt7@&pMRp)cSf9eXN9n=lk]a#p=#+3lMbPX[8]fi]EDA7p]2VgRm6o6TO-u%.IRJ0+6N?Yaq8FJ+P\38'[g>niSXX@Ko&Jl#F#.aM@l?KY.\-mc`-X0(nh/^7H'.m?,)_DEEb3K3$9W@71kMUF'/p1k9Z"1X?mNb%XPBbO7'`[X7TU=Os3n9M2U8?rE2R=IKhG\1DlcS64E=P+J.a?H\J$>5i?+/L&f/jL$J&0F7(uc,ajGO!$o]4^IP>#4`R8*ZVK]<f%X,2)cY,^U[.G-?2)JOctS7D[dAAUI4A=EqL!9f^@S[Tl-]2a<1Tt%Mu\P*G+,WUCMr4Xl7bQT5UknJKq_5*UtL$6Z/&Id*F4=s&t%:)T=2cIuB)V`V4hMF_HC)aAdC8ng$^!M911dY)-X]W"&N>e9M$IV%uc18aZn_CAT[I)7WOhbLE8amd32r=P:O5^:$//hA"SEZhnK%b>E;>c6T&HWl`n9D+am4!`X1*k#H13P&J:"Xgf5;O$KeuVm#6:/HIKBDm&mEbVH$%J^sbN9+hE=8T"\b6b\^cQGW^1hi"/(jW973%[e>HI,7jcZ#d[YP1FX87XKmP,SDqff`W1WkmVChs>BITB):P?5>:a\Rq3%<@?g`Ib,\0Bk&9F58rXf6rGoXbH3AAFqS=0?OER1q%%99.n_.O>cEksd1]8<F-L8<t>X\qVH_;QPQ$e@f>c7VH/GPiU32?V,S+Gq8WY,[pim$U97./@#B$7Mj#B"Q3spI0B"O#4WEY,?JfD%F$Fl2g#WsrRB_`G$-R5l3We"]h3XCS$"CY[l!"@b1=Pa*Fe$W471?JX4:u;TI,XW!c@;fd2@^I8$uGnTW[@LVM7oVbS"i>I,ila"%8X?<A,=>kt)b+hE:g-\Dl:2.Qi^KZ8$LftXLU6[qJ3-'+RkM1+,F"TLAdhs+Za9kp!^u_.YUIp5Vh<!O#UqoAeB$[?-2A%:O3Jj(%#76Su]+=hZ"PpLEBp/+G5&YPlF:%frOr\sW`X%rC/`2IKQ;r.AMS7)GJU@pcPG[NO""Ko<#NjnYeR,Jf$m>5ij:Km=,UTem20*#t%mRAh=lR8PM#07!:\^AdbFOK`!f/qS%q!rOXR7,-[o57kl^a('(fFNag1p+@W0!Wpdeqijd\05C<#<Kc/f/<fLV9R[k(e?@b'/lM2%3ecfODc9^r<LpspnTM,n(S`\7&O,\tg'e%b/BL1jqBMYJMS2S^0PnsiePAhi:ZV/-Y,dl"FX3f>mK/H+,=YB&PtZ#'maStPm\FCF%+`lkepGV&Hqp,a&1f$2I?8]l.;kh;.QoHP3dWGmr]'R\=;P0tQ&7@:.^sUmucCo)W];dT:`^-2[`JLl%^Z+^[mLTh!Y8/j$1[Qhp%L/ah//<:$:ns_*>Fcbt#A<3g<Ud_YI/c3rr&fmD^,HrCt>&$[<>#LX@Rh_HT1j8oqO2*H)P"Ot;WGq$V)<mCaj4hbTl_Uj'M*u]k%R8)g%#_3cOQt*'NcC)"p(Pi+#9"&uq`]&ojHufe/3Mb&tWo51u?4#cT(mc?n[LK?o6Q1pcXksa+FXYll:$KqZ1O#22!k,=MC=>^V%]3A0IH=-*,UscWUG'<q+MWJZJ`)OLlM/Wi'%oQNJ`H3_]#-p$ji],JlDMK>6n/GK[M>Rn4/1!O[W@EsHaj&q$7fb,s"!NP]?91&Q%ZW\i'kAWcPFj:H%M#u#[V-D!3)a_WRm3lM?co]P\WY96n[!d>-Fet8-!$HO@jOm$a42XSA86Tc2bH8Rqcr:1D)sNNIP$CS%@:qu,%7$4(#Yug;Q!sp^E,gMM=>Le5MLXQ._j[OYhoXDD$(!Lm1I4n7R+J6*P!UubVckQ-TpV+dg@JRakF*"kkQ.::2E]K.rkroN2j!\&S%Yg._hG"/25X1k'lW:d46AOlh%kos,)Xc\YcNs"*k"CA)a5iU[$M'@a\m$"0jMj=2^G=eI(O8rV$R1FNpJCYL!!'j/Bd!:Wi"T%r_%"E,lg)8a5unmW?JH6akbPfsG`g%=;nX[aE#-%<32!<W6i1+TD0hMEP19</aX?'`V5:hX9^qj<\.+]K+/PafqEQej$:d0,ouM)R!]%Lq'N4&WO'F$-gU9A5pR<9)`?u9_g[dp/kM5'+#BsT0oC`K"!X0;2;EdYRJA,^q)ia*AuP5/.g-A1.b;2Q-i6PLVj;dppkDFDp>#c%L!5CIEDfc/JH2K0+KcFu4Oc)&RT\m-Q3mNA<3HMuq=[X4RC.S4rU[LJrjKTA\%he=^]*?<s2s7!k23qY./GqISj,k[Y31`s&S,W8%gW*m+(nQPCSnGgDh4FT*m70D?p=iAmo0<)drr!r=mGjQ5pZq9trR]qUqWWM/nqUTPl1\Qaci<t:pMYQVo.U.6lh=ccpr>Vtjd3a[%qX;a[q>Q0,J,StGrq-)khuEVhs7DplGs:4Ps66Grs2TWap0U%p*s2~>%AI9_PrivateDataEnd